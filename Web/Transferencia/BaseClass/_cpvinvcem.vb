'===============================================================================
'  Generated From - VbNet_SQL_dOOdads_BusinessEntity.vbgen
' 
'  ** IMPORTANT  **
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class OleDbEntity is in the Architecture directory in "dOOdads".
'  
'  This object is 'MustInherit' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can Override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  Public Class YourObject
'    Inherits _YourObject
'
'  End Class
'
'===============================================================================

' Generated by MyGeneration Version # (1.2.0.7)

Imports System
Imports System.Data
Imports System.Data.OleDb
Imports System.Collections
Imports System.Collections.Specialized

Imports MyGeneration.dOOdads

Public MustInherit Class _cpinvcem
    Inherits OleDbEntity

    Public Sub New()
        Me.QuerySource = "cpinvcem"
        Me.MappingName = "cpinvcem"
    End Sub

    '=================================================================
    '  Public Overrides Sub AddNew()
    '=================================================================
    '
    '=================================================================
    Public Overrides Sub AddNew()
        MyBase.AddNew()

    End Sub

    Public Overrides Sub FlushData()
        Me._whereClause = Nothing
        Me._aggregateClause = Nothing
        MyBase.FlushData()
    End Sub


    Public Overrides Function GetAutoKeyColumn() As String
        Return "invce_serial"
    End Function

    '=================================================================
    '  	Public Function LoadAll() As Boolean
    '=================================================================
    '  Loads all of the records in the database, and sets the currentRow to the first row
    '=================================================================
    Public Function LoadAll() As Boolean

        Dim parameters As ListDictionary = Nothing


        Return MyBase.LoadFromSql("[" + Me.SchemaStoredProcedure + "proc_cpinvcemLoadAll]", parameters)

    End Function

    '=================================================================
    ' Public Overridable Function LoadByPrimaryKey()  As Boolean
    '=================================================================
    '  Loads a single row of via the primary key
    '=================================================================
    Public Overridable Function LoadByPrimaryKey(ByVal invce_serial As Integer, ByVal suc_code As Integer) As Boolean

        Dim parameters As ListDictionary = New ListDictionary
        parameters.Add(_cpinvcem.Parameters.invce_serial, invce_serial)
        parameters.Add(_cpinvcem.Parameters.suc_code, suc_code)


        Return MyBase.LoadFromSql("[" + Me.SchemaStoredProcedure + "proc_cpinvcemLoadByPrimaryKey]", parameters)

    End Function

#Region "Parameters"
    Protected Class Parameters

        Public Shared ReadOnly Property invce_serial() As OleDbParameter
            Get
                Return New OleDbParameter("@invce_serial", OleDbType.Integer, 0)
            End Get
        End Property
        Public Shared ReadOnly Property term_code() As OleDbParameter
            Get
                Return New OleDbParameter("@term_code", OleDbType.VarChar, 5)
            End Get
        End Property
        Public Shared ReadOnly Property Prov_code() As OleDbParameter
            Get
                Return New OleDbParameter("@Prov_code", OleDbType.Integer, 0)
            End Get
        End Property

        Public Shared ReadOnly Property type_code() As OleDbParameter
            Get
                Return New OleDbParameter("@type_code", OleDbType.Char, 3)
            End Get
        End Property
        Public Shared ReadOnly Property doc_no() As OleDbParameter
            Get
                Return New OleDbParameter("@doc_no", OleDbType.VarChar, 10)
            End Get
        End Property
        Public Shared ReadOnly Property invce_desc() As OleDbParameter
            Get
                Return New OleDbParameter("@invce_desc", OleDbType.VarChar, 60)
            End Get
        End Property
        Public Shared ReadOnly Property doc_date() As OleDbParameter
            Get
                Return New OleDbParameter("@doc_date", OleDbType.DBDate)
            End Get
        End Property
        Public Shared ReadOnly Property disc_date() As OleDbParameter
            Get
                Return New OleDbParameter("@disc_date", OleDbType.DBDate)
            End Get
        End Property
        Public Shared ReadOnly Property amount() As OleDbParameter
            Get
                Return New OleDbParameter("@amount", OleDbType.Decimal, 10, 2)
            End Get
        End Property
        Public Shared ReadOnly Property disc_pct() As OleDbParameter
            Get
                Return New OleDbParameter("@disc_pct", OleDbType.Decimal, 10, 2)
            End Get
        End Property
        Public Shared ReadOnly Property due_date() As OleDbParameter
            Get
                Return New OleDbParameter("@due_date", OleDbType.DBDate)
            End Get
        End Property
        Public Shared ReadOnly Property disc_amount() As OleDbParameter
            Get
                Return New OleDbParameter("@disc_amount", OleDbType.Decimal, 10, 2)
            End Get
        End Property
        Public Shared ReadOnly Property isc_amount() As OleDbParameter
            Get
                Return New OleDbParameter("@isc_amount", OleDbType.Decimal, 10, 2)
            End Get
        End Property
        Public Shared ReadOnly Property itbis() As OleDbParameter
            Get
                Return New OleDbParameter("@itbis", OleDbType.Decimal, 10, 2)
            End Get
        End Property
        Public Shared ReadOnly Property excento() As OleDbParameter
            Get
                Return New OleDbParameter("@excento", OleDbType.Decimal, 10, 2)
            End Get
        End Property
        Public Shared ReadOnly Property impto() As OleDbParameter
            Get
                Return New OleDbParameter("@impto", OleDbType.Decimal, 10, 2)
            End Get
        End Property
        Public Shared ReadOnly Property invce_status() As OleDbParameter
            Get
                Return New OleDbParameter("@invce_status", OleDbType.Integer)
            End Get
        End Property
        Public Shared ReadOnly Property date_created() As OleDbParameter
            Get
                Return New OleDbParameter("@date_created", OleDbType.DBDate)
            End Get
        End Property
        Public Shared ReadOnly Property userid() As OleDbParameter
            Get
                Return New OleDbParameter("@userid", OleDbType.VarChar)
            End Get
        End Property
        Public Shared ReadOnly Property invce_ncf() As OleDbParameter
            Get
                Return New OleDbParameter("@invce_ncf", OleDbType.VarChar, 20)
            End Get
        End Property
        Public Shared ReadOnly Property dev_serial() As OleDbParameter
            Get
                Return New OleDbParameter("@dev_serial", OleDbType.Integer)
            End Get
        End Property
        Public Shared ReadOnly Property entr_serial() As OleDbParameter
            Get
                Return New OleDbParameter("@entr_serial", OleDbType.Integer)
            End Get
        End Property
        Public Shared ReadOnly Property suc_code() As OleDbParameter
            Get
                Return New OleDbParameter("@suc_code", OleDbType.Integer)
            End Get
        End Property
        Public Shared ReadOnly Property invce_service() As OleDbParameter
            Get
                Return New OleDbParameter("@invce_service", OleDbType.Integer)
            End Get
        End Property
        Public Shared ReadOnly Property acct_no() As OleDbParameter
            Get
                Return New OleDbParameter("@acct_no", OleDbType.VarChar, 15)
            End Get
        End Property
        Public Shared ReadOnly Property invce_datetran() As OleDbParameter
            Get
                Return New OleDbParameter("@invce_datetran", OleDbType.DBDate)
            End Get
        End Property
    End Class
#End Region

#Region "ColumnNames"
    Public Class ColumnNames

        Public Const invce_serial As String = "invce_serial"
        Public Const term_code As String = "term_code"
        Public Const prov_code As String = "prov_code"
        Public Const type_code As String = "type_code"
        Public Const doc_no As String = "doc_no"
        Public Const invce_desc As String = "invce_desc"
        Public Const doc_date As String = "doc_date"
        Public Const disc_date As String = "disc_date"
        Public Const amount As String = "amount"
        Public Const disc_pct As String = "disc_pct"
        Public Const due_date As String = "due_date"
        Public Const disc_amount As String = "disc_amount"
        Public Const isc_amount As String = "isc_amount"
        Public Const itbis As String = "itbis"
        Public Const excento As String = "excento"
        Public Const impto As String = "impto"
        Public Const invce_status As String = "invce_status"
        Public Const date_created As String = "date_created"
        Public Const userid As String = "userid"
        Public Const invce_ncf As String = "invce_ncf"
        Public Const dev_serial As String = "dev_serial"
        Public Const entr_serial As String = "entr_serial"
        Public Const suc_code As String = "suc_code"
        Public Const invce_service As String = "invce_service"
        Public Const acct_no As String = "acct_no"
        Public Const invce_datetran As String = "invce_datetran"

        Public Shared Function ToPropertyName(ByVal columnName As String) As String

            If ht Is Nothing Then

                ht = New Hashtable

                ht(invce_serial) = _cpinvcem.PropertyNames.invce_serial
                ht(term_code) = _cpinvcem.PropertyNames.term_code
                ht(prov_code) = _cpinvcem.PropertyNames.prov_code
                ht(type_code) = _cpinvcem.PropertyNames.type_code
                ht(doc_no) = _cpinvcem.PropertyNames.doc_no
                ht(invce_desc) = _cpinvcem.PropertyNames.invce_desc
                ht(doc_date) = _cpinvcem.PropertyNames.doc_date
                ht(disc_date) = _cpinvcem.PropertyNames.disc_date
                ht(amount) = _cpinvcem.PropertyNames.amount
                ht(disc_pct) = _cpinvcem.PropertyNames.disc_pct
                ht(due_date) = _cpinvcem.PropertyNames.due_date
                ht(disc_amount) = _cpinvcem.PropertyNames.disc_amount
                ht(isc_amount) = _cpinvcem.PropertyNames.isc_amount
                ht(itbis) = _cpinvcem.PropertyNames.itbis
                ht(excento) = _cpinvcem.PropertyNames.excento
                ht(impto) = _cpinvcem.PropertyNames.impto
                ht(invce_status) = _cpinvcem.PropertyNames.invce_status
                ht(date_created) = _cpinvcem.PropertyNames.date_created
                ht(userid) = _cpinvcem.PropertyNames.userid
                ht(invce_ncf) = _cpinvcem.PropertyNames.invce_ncf
                ht(dev_serial) = _cpinvcem.PropertyNames.dev_serial
                ht(entr_serial) = _cpinvcem.PropertyNames.entr_serial
                ht(suc_code) = _cpinvcem.PropertyNames.suc_code
                ht(invce_service) = _cpinvcem.PropertyNames.invce_service
                ht(acct_no) = _cpinvcem.PropertyNames.acct_no
                ht(invce_datetran) = _cpinvcem.PropertyNames.invce_datetran
            End If

            Return CType(ht(columnName), String)

        End Function

        Private Shared ht As Hashtable = Nothing
    End Class
#End Region

#Region "PropertyNames"
    Public Class PropertyNames

        Public Const invce_serial As String = "invce_serial"
        Public Const term_code As String = "term_code"
        Public Const prov_code As String = "prov_code"
        Public Const type_code As String = "type_code"
        Public Const doc_no As String = "doc_no"
        Public Const invce_desc As String = "invce_desc"
        Public Const doc_date As String = "doc_date"
        Public Const disc_date As String = "disc_date"
        Public Const amount As String = "amount"
        Public Const disc_pct As String = "disc_pct"
        Public Const due_date As String = "due_date"
        Public Const disc_amount As String = "disc_amount"
        Public Const isc_amount As String = "isc_amount"
        Public Const itbis As String = "itbis"
        Public Const excento As String = "excento"
        Public Const impto As String = "impto"
        Public Const invce_status As String = "invce_status"
        Public Const date_created As String = "date_created"
        Public Const userid As String = "userid"
        Public Const invce_ncf As String = "invce_ncf"
        Public Const dev_serial As String = "dev_serial"
        Public Const entr_serial As String = "entr_serial"
        Public Const suc_code As String = "suc_code"
        Public Const invce_service As String = "invce_service"
        Public Const acct_no As String = "acct_no"
        Public Const invce_datetran As String = "invce_datetran"

        Public Shared Function ToColumnName(ByVal propertyName As String) As String

            If ht Is Nothing Then

                ht = New Hashtable

                ht(invce_serial) = _cpinvcem.ColumnNames.invce_serial
                ht(term_code) = _cpinvcem.ColumnNames.term_code
                ht(prov_code) = _cpinvcem.ColumnNames.prov_code
                ht(type_code) = _cpinvcem.ColumnNames.type_code
                ht(doc_no) = _cpinvcem.ColumnNames.doc_no
                ht(invce_desc) = _cpinvcem.ColumnNames.invce_desc
                ht(doc_date) = _cpinvcem.ColumnNames.doc_date
                ht(disc_date) = _cpinvcem.ColumnNames.disc_date
                ht(amount) = _cpinvcem.ColumnNames.amount
                ht(disc_pct) = _cpinvcem.ColumnNames.disc_pct
                ht(due_date) = _cpinvcem.ColumnNames.due_date
                ht(disc_amount) = _cpinvcem.ColumnNames.disc_amount
                ht(isc_amount) = _cpinvcem.ColumnNames.isc_amount
                ht(itbis) = _cpinvcem.ColumnNames.itbis
                ht(excento) = _cpinvcem.ColumnNames.excento
                ht(impto) = _cpinvcem.ColumnNames.impto
                ht(invce_status) = _cpinvcem.ColumnNames.invce_status
                ht(date_created) = _cpinvcem.ColumnNames.date_created
                ht(userid) = _cpinvcem.ColumnNames.userid
                ht(invce_ncf) = _cpinvcem.ColumnNames.invce_ncf
                ht(dev_serial) = _cpinvcem.ColumnNames.dev_serial
                ht(entr_serial) = _cpinvcem.ColumnNames.entr_serial
                ht(suc_code) = _cpinvcem.ColumnNames.suc_code
                ht(invce_service) = _cpinvcem.ColumnNames.invce_service
                ht(acct_no) = _cpinvcem.ColumnNames.acct_no
                ht(invce_datetran) = _cpinvcem.ColumnNames.invce_datetran
            End If

            Return CType(ht(propertyName), String)

        End Function

        Private Shared ht As Hashtable = Nothing

    End Class
#End Region

#Region "StringPropertyNames"
    Public Class StringPropertyNames

        Public Const invce_serial As String = "s_invce_serial"
        Public Const term_code As String = "s_term_code"
        Public Const prov_code As String = "s_prov_code"
        Public Const type_code As String = "s_type_code"
        Public Const doc_no As String = "s_doc_no"
        Public Const invce_desc As String = "s_invce_desc"
        Public Const doc_date As String = "s_doc_date"
        Public Const disc_date As String = "s_disc_date"
        Public Const amount As String = "s_amount"
        Public Const disc_pct As String = "s_disc_pct"
        Public Const due_date As String = "s_due_date"
        Public Const disc_amount As String = "s_disc_amount"
        Public Const isc_amount As String = "s_isc_amount"
        Public Const itbis As String = "s_itbis"
        Public Const excento As String = "s_excento"
        Public Const impto As String = "s_impto"
        Public Const invce_status As String = "s_invce_status"
        Public Const date_created As String = "s_date_created"
        Public Const userid As String = "s_userid"
        Public Const invce_ncf As String = "invce_ncf"
        Public Const dev_serial As String = "dev_serial"
        Public Const entr_serial As String = "entr_serial"
        Public Const suc_code As String = "suc_code"
        Public Const invce_service As String = "invce_service"
        Public Const acct_no As String = "acct_no"
        Public Const invce_datetran As String = "invce_datetran"

    End Class
#End Region

#Region "Properties"
    Public Overridable Property invce_serial() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.invce_serial)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.invce_serial, Value)
        End Set
    End Property

    Public Overridable Property term_code() As String
        Get
            Return MyBase.GetString(ColumnNames.term_code)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.term_code, Value)
        End Set
    End Property

    Public Overridable Property Prov_code() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.prov_code)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.prov_code, Value)
        End Set
    End Property

    Public Overridable Property type_code() As String
        Get
            Return MyBase.GetString(ColumnNames.type_code)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.type_code, Value)
        End Set
    End Property
    Public Overridable Property doc_no() As String
        Get
            Return MyBase.GetString(ColumnNames.doc_no)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.doc_no, Value)
        End Set
    End Property
    Public Overridable Property invce_desc() As String
        Get
            Return MyBase.GetString(ColumnNames.invce_desc)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.invce_desc, Value)
        End Set
    End Property
    Public Overridable Property doc_date() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.doc_date)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.doc_date, Value)
        End Set
    End Property
    Public Overridable Property disc_date() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.disc_date)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.disc_date, Value)
        End Set
    End Property
    Public Overridable Property amount() As Decimal
        Get
            Return MyBase.GetDecimal(ColumnNames.amount)
        End Get
        Set(ByVal Value As Decimal)
            MyBase.SetDecimal(ColumnNames.amount, Value)
        End Set
    End Property
    Public Overridable Property disc_pct() As Decimal
        Get
            Return MyBase.GetDecimal(ColumnNames.disc_pct)
        End Get
        Set(ByVal Value As Decimal)
            MyBase.SetDecimal(ColumnNames.disc_pct, Value)
        End Set
    End Property
    Public Overridable Property due_date() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.due_date)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.due_date, Value)
        End Set
    End Property
    Public Overridable Property disc_amount() As Decimal
        Get
            Return MyBase.GetDecimal(ColumnNames.disc_amount)
        End Get
        Set(ByVal Value As Decimal)
            MyBase.SetDecimal(ColumnNames.disc_amount, Value)
        End Set
    End Property
    Public Overridable Property isc_amount() As Decimal
        Get
            Return MyBase.GetDecimal(ColumnNames.isc_amount)
        End Get
        Set(ByVal Value As Decimal)
            MyBase.SetDecimal(ColumnNames.isc_amount, Value)
        End Set
    End Property
    Public Overridable Property itbis() As Decimal
        Get
            Return MyBase.GetDecimal(ColumnNames.itbis)
        End Get
        Set(ByVal Value As Decimal)
            MyBase.SetDecimal(ColumnNames.itbis, Value)
        End Set
    End Property
    Public Overridable Property excento() As Decimal
        Get
            Return MyBase.GetDecimal(ColumnNames.excento)
        End Get
        Set(ByVal Value As Decimal)
            MyBase.SetDecimal(ColumnNames.excento, Value)
        End Set
    End Property
    Public Overridable Property impto() As Decimal
        Get
            Return MyBase.GetDecimal(ColumnNames.impto)
        End Get
        Set(ByVal Value As Decimal)
            MyBase.SetDecimal(ColumnNames.impto, Value)
        End Set
    End Property
    Public Overridable Property invce_status() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.invce_status)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.invce_status, Value)
        End Set
    End Property
    Public Overridable Property date_created() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.date_created)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.date_created, Value)
        End Set
    End Property
    Public Overridable Property userid() As String
        Get
            Return MyBase.GetString(ColumnNames.userid)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.userid, Value)
        End Set
    End Property
    Public Overridable Property invce_ncf() As String
        Get
            Return MyBase.GetString(ColumnNames.invce_ncf)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.invce_ncf, Value)
        End Set
    End Property
    Public Overridable Property dev_serial() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.dev_serial)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.dev_serial, Value)
        End Set
    End Property
    Public Overridable Property entr_serial() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.entr_serial)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.entr_serial, Value)
        End Set
    End Property
    Public Overridable Property suc_code() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.suc_code)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.suc_code, Value)
        End Set

    End Property
    Public Overridable Property invce_service() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.invce_service)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.invce_service, Value)
        End Set

    End Property

    Public Overridable Property acct_no() As String
        Get
            Return MyBase.GetString(ColumnNames.acct_no)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.acct_no, Value)
        End Set

    End Property
    Public Overridable Property invce_datetran() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.invce_datetran)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.invce_datetran, Value)
        End Set

    End Property

#Region "String Properties"

    Public Overridable Property s_invce_serial() As Integer
        Get
            If Me.IsColumnNull(ColumnNames.invce_serial) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.invce_serial)
            End If
        End Get
        Set(ByVal Value As Integer)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.invce_serial)
            Else
                Me.invce_serial = MyBase.SetIntegerAsString(ColumnNames.invce_serial, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_term_code() As String
        Get
            If Me.IsColumnNull(ColumnNames.term_code) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.term_code)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.term_code)
            Else
                Me.term_code = MyBase.SetStringAsString(ColumnNames.term_code, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_Prov_code() As Integer
        Get
            If Me.IsColumnNull(ColumnNames.prov_code) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.prov_code)
            End If
        End Get
        Set(ByVal Value As Integer)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.prov_code)
            Else
                Me.Prov_code = MyBase.SetIntegerAsString(ColumnNames.prov_code, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_type_code() As String
        Get
            If Me.IsColumnNull(ColumnNames.type_code) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.type_code)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.type_code)
            Else
                Me.type_code = MyBase.SetStringAsString(ColumnNames.type_code, Value)
            End If
        End Set
    End Property
    Public Overridable Property s_doc_no() As String
        Get
            If Me.IsColumnNull(ColumnNames.doc_no) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.doc_no)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.doc_no)
            Else
                Me.doc_no = MyBase.SetStringAsString(ColumnNames.doc_no, Value)
            End If
        End Set
    End Property
    Public Overridable Property s_invce_desc() As String
        Get
            If Me.IsColumnNull(ColumnNames.invce_desc) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.invce_desc)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.invce_desc)
            Else
                Me.invce_desc = MyBase.SetStringAsString(ColumnNames.invce_desc, Value)
            End If
        End Set
    End Property
    Public Overridable Property s_doc_date() As String
        Get
            If Me.IsColumnNull(ColumnNames.doc_date) Then
                Return String.Empty
            Else
                Return MyBase.GetDateTimeAsString(ColumnNames.doc_date)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.doc_date)
            Else
                Me.doc_date = MyBase.SetDateTimeAsString(ColumnNames.doc_date, Value)
            End If
        End Set
    End Property
    Public Overridable Property s_disc_date() As String
        Get
            If Me.IsColumnNull(ColumnNames.disc_date) Then
                Return String.Empty
            Else
                Return MyBase.GetDateTimeAsString(ColumnNames.disc_date)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.disc_date)
            Else
                Me.disc_date = MyBase.SetDateTimeAsString(ColumnNames.disc_date, Value)
            End If
        End Set
    End Property
    Public Overridable Property s_amount() As String
        Get
            If Me.IsColumnNull(ColumnNames.amount) Then
                Return String.Empty
            Else
                Return MyBase.GetDecimalAsString(ColumnNames.amount)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.amount)
            Else
                Me.amount = MyBase.SetDecimalAsString(ColumnNames.amount, Value)
            End If
        End Set
    End Property
    Public Overridable Property s_disc_pct() As String
        Get
            If Me.IsColumnNull(ColumnNames.disc_pct) Then
                Return String.Empty
            Else
                Return MyBase.GetDecimalAsString(ColumnNames.disc_pct)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.disc_pct)
            Else
                Me.disc_pct = MyBase.SetDecimalAsString(ColumnNames.disc_pct, Value)
            End If
        End Set
    End Property
    Public Overridable Property s_due_date() As String
        Get
            If Me.IsColumnNull(ColumnNames.due_date) Then
                Return String.Empty
            Else
                Return MyBase.GetDateTimeAsString(ColumnNames.due_date)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.due_date)
            Else
                Me.due_date = MyBase.SetDateTimeAsString(ColumnNames.due_date, Value)
            End If
        End Set
    End Property
    Public Overridable Property s_disc_amount() As String
        Get
            If Me.IsColumnNull(ColumnNames.disc_amount) Then
                Return String.Empty
            Else
                Return MyBase.GetDecimalAsString(ColumnNames.disc_amount)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.disc_amount)
            Else
                Me.disc_amount = MyBase.SetDecimalAsString(ColumnNames.disc_amount, Value)
            End If
        End Set
    End Property
    Public Overridable Property s_isc_amount() As String
        Get
            If Me.IsColumnNull(ColumnNames.isc_amount) Then
                Return String.Empty
            Else
                Return MyBase.GetDecimalAsString(ColumnNames.isc_amount)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.isc_amount)
            Else
                Me.isc_amount = MyBase.SetDecimalAsString(ColumnNames.isc_amount, Value)
            End If
        End Set
    End Property
    Public Overridable Property s_itbis() As String
        Get
            If Me.IsColumnNull(ColumnNames.itbis) Then
                Return String.Empty
            Else
                Return MyBase.GetDecimalAsString(ColumnNames.itbis)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.itbis)
            Else
                Me.itbis = MyBase.SetDecimalAsString(ColumnNames.itbis, Value)
            End If
        End Set
    End Property
    Public Overridable Property s_excento() As String
        Get
            If Me.IsColumnNull(ColumnNames.excento) Then
                Return String.Empty
            Else
                Return MyBase.GetDecimalAsString(ColumnNames.excento)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.excento)
            Else
                Me.excento = MyBase.SetDecimalAsString(ColumnNames.excento, Value)
            End If
        End Set
    End Property
    Public Overridable Property s_impto() As String
        Get
            If Me.IsColumnNull(ColumnNames.impto) Then
                Return String.Empty
            Else
                Return MyBase.GetDecimalAsString(ColumnNames.impto)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.impto)
            Else
                Me.impto = MyBase.SetDecimalAsString(ColumnNames.impto, Value)
            End If
        End Set
    End Property
    Public Overridable Property s_invce_status() As Integer
        Get
            If Me.IsColumnNull(ColumnNames.invce_status) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.invce_status)
            End If
        End Get
        Set(ByVal Value As Integer)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.invce_status)
            Else
                Me.invce_status = MyBase.SetIntegerAsString(ColumnNames.invce_status, Value)
            End If
        End Set
    End Property
    Public Overridable Property s_date_created() As String
        Get
            If Me.IsColumnNull(ColumnNames.date_created) Then
                Return String.Empty
            Else
                Return MyBase.GetDateTimeAsString(ColumnNames.date_created)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.date_created)
            Else
                Me.date_created = MyBase.SetDateTimeAsString(ColumnNames.date_created, Value)
            End If
        End Set
    End Property
    Public Overridable Property s_userid() As String
        Get
            If Me.IsColumnNull(ColumnNames.userid) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.userid)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.userid)
            Else
                Me.userid = MyBase.SetStringAsString(ColumnNames.userid, Value)
            End If
        End Set
    End Property
    Public Overridable Property s_invce_ncf() As String
        Get
            If Me.IsColumnNull(ColumnNames.invce_ncf) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.invce_ncf)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.invce_ncf)
            Else
                Me.invce_ncf = MyBase.SetStringAsString(ColumnNames.invce_ncf, Value)
            End If
        End Set
    End Property
    Public Overridable Property s_dev_serial() As Integer
        Get
            If Me.IsColumnNull(ColumnNames.dev_serial) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.dev_serial)
            End If
        End Get
        Set(ByVal Value As Integer)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.dev_serial)
            Else
                Me.dev_serial = MyBase.SetIntegerAsString(ColumnNames.dev_serial, Value)
            End If
        End Set
    End Property
    Public Overridable Property s_entr_serial() As Integer
        Get
            If Me.IsColumnNull(ColumnNames.entr_serial) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.entr_serial)
            End If
        End Get
        Set(ByVal Value As Integer)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.entr_serial)
            Else
                Me.entr_serial = MyBase.SetIntegerAsString(ColumnNames.entr_serial, Value)
            End If
        End Set
    End Property
    Public Overridable Property s_suc_code() As Integer
        Get
            If Me.IsColumnNull(ColumnNames.suc_code) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.suc_code)
            End If
        End Get
        Set(ByVal Value As Integer)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.suc_code)
            Else
                Me.suc_code = MyBase.SetIntegerAsString(ColumnNames.suc_code, Value)
            End If
        End Set
    End Property
    Public Overridable Property s_invce_service() As Integer
        Get
            If Me.IsColumnNull(ColumnNames.invce_service) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.invce_service)
            End If
        End Get
        Set(ByVal Value As Integer)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.invce_service)
            Else
                Me.invce_service = MyBase.SetIntegerAsString(ColumnNames.invce_service, Value)
            End If
        End Set
    End Property
    Public Overridable Property s_acct_no() As String
        Get
            If Me.IsColumnNull(ColumnNames.acct_no) Then
                Return String.Empty
            Else
                Return MyBase.GetSingleAsString(ColumnNames.acct_no)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.acct_no)
            Else
                Me.acct_no = MyBase.SetStringAsString(ColumnNames.acct_no, Value)
            End If
        End Set
    End Property
    Public Overridable Property s_invce_datetran() As DateTime
        Get
            If Me.IsColumnNull(ColumnNames.acct_no) Then
                Return String.Empty
            Else
                Return MyBase.GetDateTimeAsString(ColumnNames.invce_datetran)
            End If
        End Get
        Set(ByVal Value As DateTime)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.invce_datetran)
            Else
                Me.invce_datetran = MyBase.SetDateTimeAsString(ColumnNames.invce_datetran, Value)
            End If
        End Set
    End Property
    
#End Region





#End Region

#Region "Where Clause"
    Public Class WhereClause

        Public Sub New(ByVal entity As BusinessEntity)
            Me._entity = entity
        End Sub

        Public ReadOnly Property TearOff() As TearOffWhereParameter
            Get
                If _tearOff Is Nothing Then
                    _tearOff = New TearOffWhereParameter(Me)
                End If

                Return _tearOff
            End Get
        End Property

#Region "TearOff's"
        Public Class TearOffWhereParameter

            Public Sub New(ByVal clause As WhereClause)
                Me._clause = clause
            End Sub


            Public ReadOnly Property invce_serial() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.invce_serial, Parameters.invce_serial)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property term_code() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.term_code, Parameters.term_code)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property Prov_code() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.prov_code, Parameters.Prov_code)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property type_code() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.type_code, Parameters.type_code)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property doc_no() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.doc_no, Parameters.doc_no)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property invce_desc() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.invce_desc, Parameters.invce_desc)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property doc_date() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.doc_date, Parameters.doc_date)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property disc_date() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.disc_date, Parameters.disc_date)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property amount() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.amount, Parameters.amount)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property disc_pct() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.disc_pct, Parameters.disc_pct)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property due_date() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.due_date, Parameters.due_date)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property disc_amount() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.disc_amount, Parameters.disc_amount)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property isc_amount() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.isc_amount, Parameters.isc_amount)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property itbis() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.itbis, Parameters.itbis)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property excento() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.excento, Parameters.excento)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property impto() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.impto, Parameters.impto)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property invce_status() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.invce_status, Parameters.invce_status)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property date_created() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.date_created, Parameters.date_created)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property userid() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.userid, Parameters.userid)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property invce_ncf() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.invce_ncf, Parameters.invce_ncf)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property dev_serial() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.dev_serial, Parameters.dev_serial)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property entr_serial() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.entr_serial, Parameters.entr_serial)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property suc_code() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.suc_code, Parameters.suc_code)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property invce_service() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.invce_service, Parameters.invce_service)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property acct_no() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.acct_no, Parameters.acct_no)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property invce_datetran() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.invce_datetran, Parameters.invce_datetran)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Private _clause As WhereClause
        End Class
#End Region

        Public ReadOnly Property invce_serial() As WhereParameter
            Get
                If _Invce_serial_W Is Nothing Then
                    _Invce_serial_W = TearOff.invce_serial
                End If
                Return _Invce_serial_W
            End Get
        End Property

        Public ReadOnly Property term_code() As WhereParameter
            Get
                If _Term_code_W Is Nothing Then
                    _Term_code_W = TearOff.term_code
                End If
                Return _Term_code_W
            End Get
        End Property

        Public ReadOnly Property Prov_code() As WhereParameter
            Get
                If _Prov_code_W Is Nothing Then
                    _Prov_code_W = TearOff.Prov_code
                End If
                Return _Prov_code_W
            End Get
        End Property

        Public ReadOnly Property type_code() As WhereParameter
            Get
                If _Type_code_W Is Nothing Then
                    _Type_code_W = TearOff.type_code
                End If
                Return _Type_code_W
            End Get
        End Property
        Public ReadOnly Property doc_no() As WhereParameter
            Get
                If _Doc_no_W Is Nothing Then
                    _Doc_no_W = TearOff.type_code
                End If
                Return _Doc_no_W
            End Get
        End Property
        Public ReadOnly Property invce_desc() As WhereParameter
            Get
                If _Invce_desc_W Is Nothing Then
                    _Invce_desc_W = TearOff.invce_desc
                End If
                Return _Invce_desc_W
            End Get
        End Property
        Public ReadOnly Property doc_date() As WhereParameter
            Get
                If _Doc_date_W Is Nothing Then
                    _Doc_date_W = TearOff.doc_date
                End If
                Return _Doc_date_W
            End Get
        End Property
        Public ReadOnly Property disc_date() As WhereParameter
            Get
                If _Disc_date_W Is Nothing Then
                    _Disc_date_W = TearOff.disc_date
                End If
                Return _Disc_date_W
            End Get
        End Property
        Public ReadOnly Property amount() As WhereParameter
            Get
                If _Amount_W Is Nothing Then
                    _Amount_W = TearOff.amount
                End If
                Return _Amount_W
            End Get
        End Property
        Public ReadOnly Property disc_pct() As WhereParameter
            Get
                If _Disc_pct_W Is Nothing Then
                    _Disc_pct_W = TearOff.disc_pct
                End If
                Return _Disc_pct_W
            End Get
        End Property
        Public ReadOnly Property due_date() As WhereParameter
            Get
                If _Due_date_W Is Nothing Then
                    _Due_date_W = TearOff.due_date
                End If
                Return _Due_date_W
            End Get
        End Property
        Public ReadOnly Property disc_amount() As WhereParameter
            Get
                If _Disc_amount_W Is Nothing Then
                    _Disc_amount_W = TearOff.disc_amount
                End If
                Return _Disc_amount_W
            End Get
        End Property
        Public ReadOnly Property isc_amount() As WhereParameter
            Get
                If _Isc_amount_W Is Nothing Then
                    _Isc_amount_W = TearOff.isc_amount
                End If
                Return _Isc_amount_W
            End Get
        End Property
        Public ReadOnly Property itbis() As WhereParameter
            Get
                If _Itbis_W Is Nothing Then
                    _Itbis_W = TearOff.itbis
                End If
                Return _Itbis_W
            End Get
        End Property
        Public ReadOnly Property excento() As WhereParameter
            Get
                If _Excento_W Is Nothing Then
                    _Excento_W = TearOff.excento
                End If
                Return _Excento_W
            End Get
        End Property
        Public ReadOnly Property impto() As WhereParameter
            Get
                If _Impto_W Is Nothing Then
                    _Impto_W = TearOff.impto
                End If
                Return _Impto_W
            End Get
        End Property
        Public ReadOnly Property invce_status() As WhereParameter
            Get
                If _Invce_status_W Is Nothing Then
                    _Invce_status_W = TearOff.invce_status
                End If
                Return _Invce_status_W
            End Get
        End Property
        Public ReadOnly Property date_created() As WhereParameter
            Get
                If _Date_created_W Is Nothing Then
                    _Date_created_W = TearOff.date_created
                End If
                Return _Date_created_W
            End Get
        End Property
        Public ReadOnly Property userid() As WhereParameter
            Get
                If _Userid_W Is Nothing Then
                    _Userid_W = TearOff.userid
                End If
                Return _Userid_W
            End Get
        End Property
        Public ReadOnly Property invce_ncf() As WhereParameter
            Get
                If _Invce_ncf_W Is Nothing Then
                    _Invce_ncf_W = TearOff.invce_ncf
                End If
                Return _Invce_ncf_W
            End Get
        End Property
        Public ReadOnly Property dev_serial() As WhereParameter
            Get
                If _Dev_serial_W Is Nothing Then
                    _Dev_serial_W = TearOff.dev_serial
                End If
                Return _Dev_serial_W
            End Get
        End Property
        Public ReadOnly Property entr_serial() As WhereParameter
            Get
                If _Entr_serial_W Is Nothing Then
                    _Entr_serial_W = TearOff.entr_serial
                End If
                Return _Entr_serial_W
            End Get
        End Property
        Public ReadOnly Property suc_code() As WhereParameter
            Get
                If _Suc_code_W Is Nothing Then
                    _Suc_code_W = TearOff.suc_code
                End If
                Return _Suc_code_W
            End Get
        End Property
        Public ReadOnly Property invce_service() As WhereParameter
            Get
                If _Invce_service_W Is Nothing Then
                    _Invce_service_W = TearOff.invce_service
                End If
                Return _Invce_service_W
            End Get
        End Property
        Public ReadOnly Property acct_no() As WhereParameter
            Get
                If _Acct_no_W Is Nothing Then
                    _Acct_no_W = TearOff.acct_no
                End If
                Return _Acct_no_W
            End Get
        End Property
        Public ReadOnly Property invce_datetran() As WhereParameter
            Get
                If _Invce_datetran_W Is Nothing Then
                    _Invce_datetran_W = TearOff.invce_datetran
                End If
                Return _Invce_datetran_W
            End Get
        End Property

        Private _Invce_serial_W As WhereParameter = Nothing
        Private _Term_code_W As WhereParameter = Nothing
        Private _Prov_code_W As WhereParameter = Nothing
        Private _Type_code_W As WhereParameter = Nothing
        Private _Doc_no_W As WhereParameter = Nothing
        Private _Invce_desc_W As WhereParameter = Nothing
        Private _Doc_date_W As WhereParameter = Nothing
        Private _Disc_date_W As WhereParameter = Nothing
        Private _Amount_W As WhereParameter = Nothing
        Private _Disc_pct_W As WhereParameter = Nothing
        Private _Due_date_W As WhereParameter = Nothing
        Private _Disc_amount_W As WhereParameter = Nothing
        Private _Isc_amount_W As WhereParameter = Nothing
        Private _Itbis_W As WhereParameter = Nothing
        Private _Excento_W As WhereParameter = Nothing
        Private _Impto_W As WhereParameter = Nothing
        Private _Invce_status_W As WhereParameter = Nothing
        Private _Date_created_W As WhereParameter = Nothing
        Private _Userid_W As WhereParameter = Nothing
        Private _Invce_ncf_W As WhereParameter = Nothing
        Private _Dev_serial_W As WhereParameter = Nothing
        Private _Entr_serial_W As WhereParameter = Nothing
        Private _Suc_code_W As WhereParameter = Nothing
        Private _Invce_service_W As WhereParameter = Nothing
        Private _Acct_no_W As WhereParameter = Nothing
        Private _Invce_datetran_W As WhereParameter = Nothing

        Public Sub WhereClauseReset()
            _Invce_serial_W = Nothing
            _Term_code_W = Nothing
            _Prov_code_W = Nothing
            _Type_code_W = Nothing
            _Doc_no_W = Nothing
            _Invce_desc_W = Nothing
            _Doc_date_W = Nothing
            _Disc_date_W = Nothing
            _Amount_W = Nothing
            _Disc_pct_W = Nothing
            _Due_date_W = Nothing
            _Disc_amount_W = Nothing
            _Isc_amount_W = Nothing
            _Itbis_W = Nothing
            _Excento_W = Nothing
            _Impto_W = Nothing
            _Invce_status_W = Nothing
            _Date_created_W = Nothing
            _Userid_W = Nothing
            _Invce_ncf_W = Nothing
            _Dev_serial_W = Nothing
            _Entr_serial_W = Nothing
            _Suc_code_W = Nothing
            _Invce_service_W = Nothing
            _Acct_no_W = Nothing
            _Invce_datetran_W = Nothing
            Me._entity.Query.FlushWhereParameters()

        End Sub

        Private _entity As BusinessEntity
        Private _tearOff As TearOffWhereParameter
    End Class

    Public ReadOnly Property Where() As WhereClause
        Get
            If _whereClause Is Nothing Then
                _whereClause = New WhereClause(Me)
            End If

            Return _whereClause
        End Get
    End Property

    Private _whereClause As WhereClause = Nothing
#End Region

#Region "Aggregate Clause"
    Public Class AggregateClause

        Public Sub New(ByVal entity As BusinessEntity)
            Me._entity = entity
        End Sub

        Public ReadOnly Property TearOff() As TearOffAggregateParameter
            Get
                If _tearOff Is Nothing Then
                    _tearOff = New TearOffAggregateParameter(Me)
                End If

                Return _tearOff
            End Get
        End Property

#Region "AggregateParameter TearOff's"
        Public Class TearOffAggregateParameter

            Public Sub New(ByVal clause As AggregateClause)
                Me._clause = clause
            End Sub


            Public ReadOnly Property Invce_serial() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.invce_serial, Parameters.invce_serial)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property Term_code() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.term_code, Parameters.term_code)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property Prov_code() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.prov_code, Parameters.Prov_code)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property Type_code() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.type_code, Parameters.type_code)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property Doc_no() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.doc_no, Parameters.doc_no)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property Invce_desc() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.invce_desc, Parameters.invce_desc)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property Doc_date() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.doc_date, Parameters.doc_date)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property Disc_date() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.disc_date, Parameters.disc_date)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property Amount() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.amount, Parameters.amount)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property Disc_pct() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.disc_pct, Parameters.disc_pct)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property Due_date() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.due_date, Parameters.due_date)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property Disc_amount() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.disc_amount, Parameters.disc_amount)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property Isc_amount() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.isc_amount, Parameters.isc_amount)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property Itbis() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.itbis, Parameters.itbis)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property Excento() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.excento, Parameters.excento)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property Impto() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.impto, Parameters.impto)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property Invce_status() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.invce_status, Parameters.invce_status)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property Date_created() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.date_created, Parameters.date_created)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property Userid() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.userid, Parameters.userid)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property Invce_ncf() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.invce_ncf, Parameters.invce_ncf)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property Dev_serial() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.dev_serial, Parameters.dev_serial)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property Entr_serial() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.entr_serial, Parameters.entr_serial)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property Suc_code() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.suc_code, Parameters.suc_code)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property Invce_service() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.invce_service, Parameters.invce_service)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property Acct_no() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.acct_no, Parameters.acct_no)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property Invce_datetran() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.invce_datetran, Parameters.invce_datetran)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property
            Private _clause As AggregateClause
        End Class
#End Region

        Public ReadOnly Property Invce_serial() As AggregateParameter
            Get
                If _Invce_serial_W Is Nothing Then
                    _Invce_serial_W = TearOff.Invce_serial
                End If
                Return _Invce_serial_W
            End Get
        End Property

        Public ReadOnly Property Term_code() As AggregateParameter
            Get
                If _Term_code_W Is Nothing Then
                    _Term_code_W = TearOff.Term_code
                End If
                Return _Term_code_W
            End Get
        End Property

        Public ReadOnly Property Prov_code() As AggregateParameter
            Get
                If _Prov_code_W Is Nothing Then
                    _Prov_code_W = TearOff.Prov_code
                End If
                Return _Prov_code_W
            End Get
        End Property

        Public ReadOnly Property Type_code() As AggregateParameter
            Get
                If _Type_code_W Is Nothing Then
                    _Type_code_W = TearOff.Type_code
                End If
                Return _Type_code_W
            End Get
        End Property
        Public ReadOnly Property doc_no() As AggregateParameter
            Get
                If _doc_no_W Is Nothing Then
                    _doc_no_W = TearOff.Doc_no
                End If
                Return _doc_no_W
            End Get
        End Property
        Public ReadOnly Property Invce_desc() As AggregateParameter
            Get
                If _Invce_desc_W Is Nothing Then
                    _Invce_desc_W = TearOff.Invce_desc
                End If
                Return _Invce_desc_W
            End Get
        End Property
        Public ReadOnly Property Doc_date() As AggregateParameter
            Get
                If _Doc_date_W Is Nothing Then
                    _Doc_date_W = TearOff.Doc_date
                End If
                Return _Doc_date_W
            End Get
        End Property

        Public ReadOnly Property disc_date() As AggregateParameter
            Get
                If _Disc_date_W Is Nothing Then
                    _Disc_date_W = TearOff.Disc_date
                End If
                Return _Disc_date_W
            End Get
        End Property
        Public ReadOnly Property amount() As AggregateParameter
            Get
                If _Amount_W Is Nothing Then
                    _Amount_W = TearOff.Amount
                End If
                Return _Amount_W
            End Get
        End Property
        Public ReadOnly Property disc_pct() As AggregateParameter
            Get
                If _Disc_pct_W Is Nothing Then
                    _Disc_pct_W = TearOff.Disc_pct
                End If
                Return _Disc_pct_W
            End Get
        End Property
        Public ReadOnly Property due_date() As AggregateParameter
            Get
                If _Disc_pct_W Is Nothing Then
                    _Disc_pct_W = TearOff.Due_date
                End If
                Return _Disc_pct_W
            End Get
        End Property
        Public ReadOnly Property disc_amount() As AggregateParameter
            Get
                If _Disc_amount_W Is Nothing Then
                    _Disc_amount_W = TearOff.Disc_amount
                End If
                Return _Disc_amount_W
            End Get
        End Property
        Public ReadOnly Property isc_amount() As AggregateParameter
            Get
                If _Isc_amount_W Is Nothing Then
                    _Isc_amount_W = TearOff.Isc_amount
                End If
                Return _Isc_amount_W
            End Get
        End Property
        Public ReadOnly Property itbis() As AggregateParameter
            Get
                If _Itbis_W Is Nothing Then
                    _Itbis_W = TearOff.Itbis
                End If
                Return _Itbis_W
            End Get
        End Property
        Public ReadOnly Property excento() As AggregateParameter
            Get
                If _Excento_W Is Nothing Then
                    _Excento_W = TearOff.Excento
                End If
                Return _Excento_W
            End Get
        End Property
        Public ReadOnly Property impto() As AggregateParameter
            Get
                If _Impto_W Is Nothing Then
                    _Impto_W = TearOff.Impto
                End If
                Return _Impto_W
            End Get
        End Property
        Public ReadOnly Property invce_status() As AggregateParameter
            Get
                If _Invce_status_W Is Nothing Then
                    _Invce_status_W = TearOff.Invce_status
                End If
                Return _Invce_status_W
            End Get
        End Property
        Public ReadOnly Property date_created() As AggregateParameter
            Get
                If _Date_created_W Is Nothing Then
                    _Date_created_W = TearOff.Date_created
                End If
                Return _Date_created_W
            End Get
        End Property
        Public ReadOnly Property userid() As AggregateParameter
            Get
                If _Userid_W Is Nothing Then
                    _Userid_W = TearOff.Userid
                End If
                Return _Userid_W
            End Get
        End Property
        Public ReadOnly Property invce_ncf() As AggregateParameter
            Get
                If _Invce_ncf_W Is Nothing Then
                    _Invce_ncf_W = TearOff.Invce_ncf
                End If
                Return _Invce_ncf_W
            End Get
        End Property
        Public ReadOnly Property dev_serial() As AggregateParameter
            Get
                If _Dev_serial_W Is Nothing Then
                    _Dev_serial_W = TearOff.Dev_serial
                End If
                Return _Dev_serial_W
            End Get
        End Property
        Public ReadOnly Property entr_serial() As AggregateParameter
            Get
                If _Entr_serial_W Is Nothing Then
                    _Entr_serial_W = TearOff.Entr_serial
                End If
                Return _Entr_serial_W
            End Get
        End Property
        Public ReadOnly Property suc_code() As AggregateParameter
            Get
                If _Suc_code_W Is Nothing Then
                    _Suc_code_W = TearOff.Suc_code
                End If
                Return _Suc_code_W
            End Get
        End Property
        Public ReadOnly Property invce_service() As AggregateParameter
            Get
                If _Invce_service_W Is Nothing Then
                    _Invce_service_W = TearOff.Invce_service
                End If
                Return _Invce_service_W
            End Get
        End Property
        Public ReadOnly Property acct_no() As AggregateParameter
            Get
                If _Acct_no_W Is Nothing Then
                    _Acct_no_W = TearOff.Acct_no
                End If
                Return _Acct_no_W
            End Get
        End Property
        Public ReadOnly Property invce_datetran() As AggregateParameter
            Get
                If _Invce_datetran_W Is Nothing Then
                    _Invce_datetran_W = TearOff.Invce_datetran
                End If
                Return _Invce_datetran_W
            End Get
        End Property
        Private _Invce_serial_W As AggregateParameter = Nothing
        Private _Term_code_W As AggregateParameter = Nothing
        Private _Prov_code_W As AggregateParameter = Nothing
        Private _Type_code_W As AggregateParameter = Nothing
        Private _doc_no_W As AggregateParameter = Nothing
        Private _Invce_desc_W As AggregateParameter = Nothing
        Private _Doc_date_W As AggregateParameter = Nothing
        Private _Disc_date_W As AggregateParameter = Nothing
        Private _Amount_W As AggregateParameter = Nothing
        Private _Disc_pct_W As AggregateParameter = Nothing
        Private _Disc_amount_W As AggregateParameter = Nothing
        Private _Isc_amount_W As AggregateParameter = Nothing
        Private _Itbis_W As AggregateParameter = Nothing
        Private _Excento_W As AggregateParameter = Nothing
        Private _Impto_W As AggregateParameter = Nothing
        Private _Invce_status_W As AggregateParameter = Nothing
        Private _Date_created_W As AggregateParameter = Nothing
        Private _Userid_W As AggregateParameter = Nothing
        Private _Invce_ncf_W As AggregateParameter = Nothing
        Private _Dev_serial_W As AggregateParameter = Nothing
        Private _Entr_serial_W As AggregateParameter = Nothing
        Private _Suc_code_W As AggregateParameter = Nothing
        Private _Invce_service_W As AggregateParameter = Nothing
        Private _Acct_no_W As AggregateParameter = Nothing
        Private _Invce_datetran_W As AggregateParameter = Nothing

        Public Sub AggregateClauseReset()
            _Invce_serial_W = Nothing
            _Term_code_W = Nothing
            _Prov_code_W = Nothing
            _Type_code_W = Nothing
            _doc_no_W = Nothing
            _Invce_desc_W = Nothing
            _Doc_date_W = Nothing
            _Disc_date_W = Nothing
            _Amount_W = Nothing
            _Disc_pct_W = Nothing
            _Disc_amount_W = Nothing
            _Isc_amount_W = Nothing
            _Itbis_W = Nothing
            _Excento_W = Nothing
            _Impto_W = Nothing
            _Invce_status_W = Nothing
            _Date_created_W = Nothing
            _Userid_W = Nothing
            _Invce_ncf_W = Nothing
            _Dev_serial_W = Nothing
            _Entr_serial_W = Nothing
            _Suc_code_W = Nothing
            _Invce_service_W = Nothing
            _Acct_no_W = Nothing
            _Invce_datetran_W = Nothing
            Me._entity.Query.FlushAggregateParameters()

        End Sub

        Private _entity As BusinessEntity
        Private _tearOff As TearOffAggregateParameter
    End Class

    Public ReadOnly Property Aggregate() As AggregateClause
        Get
            If _aggregateClause Is Nothing Then
                _aggregateClause = New AggregateClause(Me)
            End If

            Return _aggregateClause
        End Get
    End Property

    Private _aggregateClause As AggregateClause = Nothing
#End Region

    Protected Overrides Function GetInsertCommand() As IDbCommand

        Dim cmd As OleDbCommand = New OleDbCommand
        cmd.CommandType = CommandType.StoredProcedure
        cmd.CommandText = "[" + Me.SchemaStoredProcedure + "proc_cpinvcemInsert]"

        CreateParameters(cmd)

        Return cmd

    End Function

    Protected Overrides Function GetUpdateCommand() As IDbCommand

        Dim cmd As OleDbCommand = New OleDbCommand
        cmd.CommandType = CommandType.StoredProcedure
        cmd.CommandText = "[" + Me.SchemaStoredProcedure + "proc_cpinvcemUpdate]"

        CreateParameters(cmd)

        Return cmd

    End Function

    Protected Overrides Function GetDeleteCommand() As IDbCommand

        Dim cmd As OleDbCommand = New OleDbCommand
        cmd.CommandType = CommandType.StoredProcedure
        cmd.CommandText = "[" + Me.SchemaStoredProcedure + "proc_cpinvcemDelete]"

        Dim p As OleDbParameter
        p = cmd.Parameters.Add(Parameters.invce_serial)
        p.SourceColumn = ColumnNames.invce_serial
        p.SourceVersion = DataRowVersion.Current

        Return cmd

    End Function

    Private Sub CreateParameters(ByVal cmd As OleDbCommand)

        Dim p As OleDbParameter
        p = cmd.Parameters.Add(Parameters.invce_serial)
        p.SourceColumn = ColumnNames.invce_serial
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.term_code)
        p.SourceColumn = ColumnNames.term_code
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.Prov_code)
        p.SourceColumn = ColumnNames.prov_code
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.type_code)
        p.SourceColumn = ColumnNames.type_code
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.doc_no)
        p.SourceColumn = ColumnNames.doc_no
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.invce_desc)
        p.SourceColumn = ColumnNames.invce_desc
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.doc_date)
        p.SourceColumn = ColumnNames.doc_date
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.disc_date)
        p.SourceColumn = ColumnNames.disc_date
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.amount)
        p.SourceColumn = ColumnNames.amount
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.disc_pct)
        p.SourceColumn = ColumnNames.disc_pct
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.due_date)
        p.SourceColumn = ColumnNames.due_date
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.disc_amount)
        p.SourceColumn = ColumnNames.disc_amount
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.isc_amount)
        p.SourceColumn = ColumnNames.isc_amount
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.itbis)
        p.SourceColumn = ColumnNames.itbis
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.excento)
        p.SourceColumn = ColumnNames.excento
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.impto)
        p.SourceColumn = ColumnNames.impto
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.invce_status)
        p.SourceColumn = ColumnNames.invce_status
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.date_created)
        p.SourceColumn = ColumnNames.date_created
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.userid)
        p.SourceColumn = ColumnNames.userid
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.invce_ncf)
        p.SourceColumn = ColumnNames.invce_ncf
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.dev_serial)
        p.SourceColumn = ColumnNames.dev_serial
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.entr_serial)
        p.SourceColumn = ColumnNames.entr_serial
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.suc_code)
        p.SourceColumn = ColumnNames.suc_code
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.invce_service)
        p.SourceColumn = ColumnNames.invce_service
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.acct_no)
        p.SourceColumn = ColumnNames.acct_no
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.invce_datetran)
        p.SourceColumn = ColumnNames.invce_datetran
        p.SourceVersion = DataRowVersion.Current

    End Sub
End Class

