
'===============================================================================
'  Generated From - VbNet_SQL_dOOdads_BusinessEntity.vbgen
' 
'  ** IMPORTANT  **
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class OleDbEntity is in the Architecture directory in "dOOdads".
'  
'  This object is 'MustInherit' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can Override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  Public Class YourObject
'    Inherits _YourObject
'
'  End Class
'
'===============================================================================

' Generated by MyGeneration Version # (1.2.0.7)

Imports System
Imports System.Data
Imports System.Data.OleDb
Imports System.Collections
Imports System.Collections.Specialized

Imports MyGeneration.dOOdads

Public MustInherit Class _ivitemd
	Inherits OleDbEntity

		Public Sub New() 
			Me.QuerySource = "ivitemd"
			Me.MappingName = "ivitemd"
		End Sub

	'=================================================================
	'  Public Overrides Sub AddNew()
	'=================================================================
	'
	'=================================================================
	Public Overrides Sub AddNew()
		MyBase.AddNew()
				
	End Sub
	
	Public Overrides Sub FlushData()
		Me._whereClause = nothing
		Me._aggregateClause = nothing		
		MyBase.FlushData()
	End Sub
	
	
	Public Overrides Function GetAutoKeyColumn() As String
			Return ""
	End Function
	
	'=================================================================
	'  	Public Function LoadAll() As Boolean
	'=================================================================
	'  Loads all of the records in the database, and sets the currentRow to the first row
	'=================================================================
	Public Function LoadAll() As Boolean
	
		Dim parameters As ListDictionary = Nothing
		
		
    	Return MyBase.LoadFromSql("[" + Me.SchemaStoredProcedure + "proc_ivitemdLoadAll]", parameters)
		
	End Function

	'=================================================================
	' Public Overridable Function LoadByPrimaryKey()  As Boolean
	'=================================================================
	'  Loads a single row of via the primary key
	'=================================================================
	Public Overridable Function LoadByPrimaryKey(ByVal Whse_code As Integer, ByVal Item_code As String) As Boolean

		Dim parameters As ListDictionary = New ListDictionary()
		parameters.Add(_ivitemd.Parameters.Whse_code, Whse_code)

        parameters.Add(_ivitemd.Parameters.Item_code, Item_code)

		
		Return MyBase.LoadFromSql("[" + Me.SchemaStoredProcedure + "proc_ivitemdLoadByPrimaryKey]", parameters)

	End Function

	#Region "Parameters"
	Protected class Parameters 
		
		Public Shared ReadOnly Property Whse_code As OleDbParameter
			Get
				Return New OleDbParameter("@Whse_code", OleDbType.Integer, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Item_code As OleDbParameter
			Get
				Return New OleDbParameter("@Item_code", OleDbType.VarChar, 10)
			End Get
		End Property
		
		Public Shared ReadOnly Property Purch_cost As OleDbParameter
			Get
				Return New OleDbParameter("@Purch_cost", OleDbType.Numeric, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Porc_isc As OleDbParameter
			Get
				Return New OleDbParameter("@Porc_isc", OleDbType.Integer, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Last_cost As OleDbParameter
			Get
				Return New OleDbParameter("@Last_cost", OleDbType.Numeric, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Avg_cost As OleDbParameter
			Get
				Return New OleDbParameter("@Avg_cost", OleDbType.Numeric, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Loc_row As OleDbParameter
			Get
				Return New OleDbParameter("@Loc_row", OleDbType.Integer, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Loc_col As OleDbParameter
			Get
				Return New OleDbParameter("@Loc_col", OleDbType.Integer, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Estante As OleDbParameter
			Get
				Return New OleDbParameter("@Estante", OleDbType.Char, 5)
			End Get
		End Property
		
		Public Shared ReadOnly Property Price As OleDbParameter
			Get
				Return New OleDbParameter("@Price", OleDbType.Numeric, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Benef As OleDbParameter
			Get
				Return New OleDbParameter("@Benef", OleDbType.Numeric, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property BackOrder As OleDbParameter
			Get
				Return New OleDbParameter("@BackOrder", OleDbType.SmallInt, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Existencia As OleDbParameter
			Get
				Return New OleDbParameter("@Existencia", OleDbType.Integer, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Datelast_purch As OleDbParameter
			Get
				Return New OleDbParameter("@Datelast_purch", OleDbType.DBTimeStamp, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Datelast_sales As OleDbParameter
			Get
				Return New OleDbParameter("@Datelast_sales", OleDbType.DBTimeStamp, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Taxable As OleDbParameter
			Get
				Return New OleDbParameter("@Taxable", OleDbType.SmallInt, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Rounded As OleDbParameter
			Get
				Return New OleDbParameter("@Rounded", OleDbType.Numeric, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Rorder_point As OleDbParameter
			Get
				Return New OleDbParameter("@Rorder_point", OleDbType.Integer, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Existencia_min As OleDbParameter
			Get
				Return New OleDbParameter("@Existencia_min", OleDbType.Integer, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Exitencia_max As OleDbParameter
			Get
				Return New OleDbParameter("@Exitencia_max", OleDbType.Integer, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Cant_pedida As OleDbParameter
			Get
				Return New OleDbParameter("@Cant_pedida", OleDbType.Integer, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Cant_recibida As OleDbParameter
			Get
				Return New OleDbParameter("@Cant_recibida", OleDbType.Integer, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Numero_orden As OleDbParameter
			Get
				Return New OleDbParameter("@Numero_orden", OleDbType.Integer, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Frizado_inv As OleDbParameter
			Get
				Return New OleDbParameter("@Frizado_inv", OleDbType.SmallInt, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Aplica_dscnt As OleDbParameter
			Get
				Return New OleDbParameter("@Aplica_dscnt", OleDbType.SmallInt, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Fecha_frizado As OleDbParameter
			Get
				Return New OleDbParameter("@Fecha_frizado", OleDbType.DBTimeStamp, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Limite_frizado As OleDbParameter
			Get
				Return New OleDbParameter("@Limite_frizado", OleDbType.DBTimeStamp, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Fecha_conteo As OleDbParameter
			Get
				Return New OleDbParameter("@Fecha_conteo", OleDbType.DBTimeStamp, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Ultima_trans As OleDbParameter
			Get
				Return New OleDbParameter("@Ultima_trans", OleDbType.Numeric, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Vencimiento As OleDbParameter
			Get
                Return New OleDbParameter("@Vencimiento", OleDbType.SmallInt , 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Disc_pct As OleDbParameter
			Get
				Return New OleDbParameter("@Disc_pct", OleDbType.Numeric, 0)
			End Get
		End Property

    End Class
#End Region

	#Region "ColumnNames"
	Public class ColumnNames
		
        Public Const Whse_code As String = "whse_code"
        Public Const Item_code As String = "item_code"
        Public Const Purch_cost As String = "purch_cost"
        Public Const Porc_isc As String = "porc_isc"
        Public Const Last_cost As String = "last_cost"
        Public Const Avg_cost As String = "avg_cost"
        Public Const Loc_row As String = "loc_row"
        Public Const Loc_col As String = "loc_col"
        Public Const Estante As String = "estante"
        Public Const Price As String = "price"
        Public Const Benef As String = "benef"
        Public Const BackOrder As String = "BackOrder"
        Public Const Existencia As String = "existencia"
        Public Const Datelast_purch As String = "datelast_purch"
        Public Const Datelast_sales As String = "datelast_sales"
        Public Const Taxable As String = "taxable"
        Public Const Rounded As String = "rounded"
        Public Const Rorder_point As String = "Rorder_point"
        Public Const Existencia_min As String = "existencia_min"
        Public Const Exitencia_max As String = "exitencia_max"
        Public Const Cant_pedida As String = "cant_pedida"
        Public Const Cant_recibida As String = "cant_recibida"
        Public Const Numero_orden As String = "numero_orden"
        Public Const Frizado_inv As String = "frizado_inv"
        Public Const Aplica_dscnt As String = "aplica_dscnt"
        Public Const Fecha_frizado As String = "fecha_frizado"
        Public Const Limite_frizado As String = "limite_frizado"
        Public Const Fecha_conteo As String = "fecha_conteo"
        Public Const Ultima_trans As String = "ultima_trans"
        Public Const Vencimiento As String = "vencimiento"
        Public Const Disc_pct As String = "disc_pct"
        

		Shared Public Function ToPropertyName(ByVal columnName As String) As String

			If ht Is Nothing Then
			
				ht = new Hashtable
				
				ht(Whse_code) = _ivitemd.PropertyNames.Whse_code
				ht(Item_code) = _ivitemd.PropertyNames.Item_code
				ht(Purch_cost) = _ivitemd.PropertyNames.Purch_cost
				ht(Porc_isc) = _ivitemd.PropertyNames.Porc_isc
				ht(Last_cost) = _ivitemd.PropertyNames.Last_cost
				ht(Avg_cost) = _ivitemd.PropertyNames.Avg_cost
				ht(Loc_row) = _ivitemd.PropertyNames.Loc_row
				ht(Loc_col) = _ivitemd.PropertyNames.Loc_col
				ht(Estante) = _ivitemd.PropertyNames.Estante
				ht(Price) = _ivitemd.PropertyNames.Price
				ht(Benef) = _ivitemd.PropertyNames.Benef
				ht(BackOrder) = _ivitemd.PropertyNames.BackOrder
				ht(Existencia) = _ivitemd.PropertyNames.Existencia
				ht(Datelast_purch) = _ivitemd.PropertyNames.Datelast_purch
				ht(Datelast_sales) = _ivitemd.PropertyNames.Datelast_sales
				ht(Taxable) = _ivitemd.PropertyNames.Taxable
				ht(Rounded) = _ivitemd.PropertyNames.Rounded
				ht(Rorder_point) = _ivitemd.PropertyNames.Rorder_point
				ht(Existencia_min) = _ivitemd.PropertyNames.Existencia_min
				ht(Exitencia_max) = _ivitemd.PropertyNames.Exitencia_max
				ht(Cant_pedida) = _ivitemd.PropertyNames.Cant_pedida
				ht(Cant_recibida) = _ivitemd.PropertyNames.Cant_recibida
				ht(Numero_orden) = _ivitemd.PropertyNames.Numero_orden
				ht(Frizado_inv) = _ivitemd.PropertyNames.Frizado_inv
				ht(Aplica_dscnt) = _ivitemd.PropertyNames.Aplica_dscnt
				ht(Fecha_frizado) = _ivitemd.PropertyNames.Fecha_frizado
				ht(Limite_frizado) = _ivitemd.PropertyNames.Limite_frizado
				ht(Fecha_conteo) = _ivitemd.PropertyNames.Fecha_conteo
				ht(Ultima_trans) = _ivitemd.PropertyNames.Ultima_trans
				ht(Vencimiento) = _ivitemd.PropertyNames.Vencimiento
                ht(Disc_pct) = _ivitemd.PropertyNames.Disc_pct
            End If

            Return CType(ht(columnName), String)
			
		End Function
		
		Shared Private ht  As Hashtable = Nothing		 
	End Class
	#End Region	
	
	#Region "PropertyNames"
	Public class PropertyNames
		
        Public Const Whse_code As String = "Whse_code"
        Public Const Item_code As String = "Item_code"
        Public Const Purch_cost As String = "Purch_cost"
        Public Const Porc_isc As String = "Porc_isc"
        Public Const Last_cost As String = "Last_cost"
        Public Const Avg_cost As String = "Avg_cost"
        Public Const Loc_row As String = "Loc_row"
        Public Const Loc_col As String = "Loc_col"
        Public Const Estante As String = "Estante"
        Public Const Price As String = "Price"
        Public Const Benef As String = "Benef"
        Public Const BackOrder As String = "BackOrder"
        Public Const Existencia As String = "Existencia"
        Public Const Datelast_purch As String = "Datelast_purch"
        Public Const Datelast_sales As String = "Datelast_sales"
        Public Const Taxable As String = "Taxable"
        Public Const Rounded As String = "Rounded"
        Public Const Rorder_point As String = "Rorder_point"
        Public Const Existencia_min As String = "Existencia_min"
        Public Const Exitencia_max As String = "Exitencia_max"
        Public Const Cant_pedida As String = "Cant_pedida"
        Public Const Cant_recibida As String = "Cant_recibida"
        Public Const Numero_orden As String = "Numero_orden"
        Public Const Frizado_inv As String = "Frizado_inv"
        Public Const Aplica_dscnt As String = "Aplica_dscnt"
        Public Const Fecha_frizado As String = "Fecha_frizado"
        Public Const Limite_frizado As String = "Limite_frizado"
        Public Const Fecha_conteo As String = "Fecha_conteo"
        Public Const Ultima_trans As String = "Ultima_trans"
        Public Const Vencimiento As String = "Vencimiento"
        Public Const Disc_pct As String = "Disc_pct"
        

		Shared Public Function ToColumnName(ByVal propertyName As String) As String

			If ht Is Nothing Then
			
				ht = new Hashtable
				
				ht(Whse_code) = _ivitemd.ColumnNames.Whse_code
				ht(Item_code) = _ivitemd.ColumnNames.Item_code
				ht(Purch_cost) = _ivitemd.ColumnNames.Purch_cost
				ht(Porc_isc) = _ivitemd.ColumnNames.Porc_isc
				ht(Last_cost) = _ivitemd.ColumnNames.Last_cost
				ht(Avg_cost) = _ivitemd.ColumnNames.Avg_cost
				ht(Loc_row) = _ivitemd.ColumnNames.Loc_row
				ht(Loc_col) = _ivitemd.ColumnNames.Loc_col
				ht(Estante) = _ivitemd.ColumnNames.Estante
				ht(Price) = _ivitemd.ColumnNames.Price
				ht(Benef) = _ivitemd.ColumnNames.Benef
				ht(BackOrder) = _ivitemd.ColumnNames.BackOrder
				ht(Existencia) = _ivitemd.ColumnNames.Existencia
				ht(Datelast_purch) = _ivitemd.ColumnNames.Datelast_purch
				ht(Datelast_sales) = _ivitemd.ColumnNames.Datelast_sales
				ht(Taxable) = _ivitemd.ColumnNames.Taxable
				ht(Rounded) = _ivitemd.ColumnNames.Rounded
				ht(Rorder_point) = _ivitemd.ColumnNames.Rorder_point
				ht(Existencia_min) = _ivitemd.ColumnNames.Existencia_min
				ht(Exitencia_max) = _ivitemd.ColumnNames.Exitencia_max
				ht(Cant_pedida) = _ivitemd.ColumnNames.Cant_pedida
				ht(Cant_recibida) = _ivitemd.ColumnNames.Cant_recibida
				ht(Numero_orden) = _ivitemd.ColumnNames.Numero_orden
				ht(Frizado_inv) = _ivitemd.ColumnNames.Frizado_inv
				ht(Aplica_dscnt) = _ivitemd.ColumnNames.Aplica_dscnt
				ht(Fecha_frizado) = _ivitemd.ColumnNames.Fecha_frizado
				ht(Limite_frizado) = _ivitemd.ColumnNames.Limite_frizado
				ht(Fecha_conteo) = _ivitemd.ColumnNames.Fecha_conteo
				ht(Ultima_trans) = _ivitemd.ColumnNames.Ultima_trans
				ht(Vencimiento) = _ivitemd.ColumnNames.Vencimiento
                ht(Disc_pct) = _ivitemd.ColumnNames.Disc_pct

			End If
			
			Return CType(ht(propertyName), String)
			
		End Function
		
		Shared Private ht  As Hashtable = Nothing
		
	End Class
	#End Region	
	
	#Region "StringPropertyNames"
	Public class StringPropertyNames
		
        Public Const Whse_code As String = "s_Whse_code"
        Public Const Item_code As String = "s_Item_code"
        Public Const Purch_cost As String = "s_Purch_cost"
        Public Const Porc_isc As String = "s_Porc_isc"
        Public Const Last_cost As String = "s_Last_cost"
        Public Const Avg_cost As String = "s_Avg_cost"
        Public Const Loc_row As String = "s_Loc_row"
        Public Const Loc_col As String = "s_Loc_col"
        Public Const Estante As String = "s_Estante"
        Public Const Price As String = "s_Price"
        Public Const Benef As String = "s_Benef"
        Public Const BackOrder As String = "s_BackOrder"
        Public Const Existencia As String = "s_Existencia"
        Public Const Datelast_purch As String = "s_Datelast_purch"
        Public Const Datelast_sales As String = "s_Datelast_sales"
        Public Const Taxable As String = "s_Taxable"
        Public Const Rounded As String = "s_Rounded"
        Public Const Rorder_point As String = "s_Rorder_point"
        Public Const Existencia_min As String = "s_Existencia_min"
        Public Const Exitencia_max As String = "s_Exitencia_max"
        Public Const Cant_pedida As String = "s_Cant_pedida"
        Public Const Cant_recibida As String = "s_Cant_recibida"
        Public Const Numero_orden As String = "s_Numero_orden"
        Public Const Frizado_inv As String = "s_Frizado_inv"
        Public Const Aplica_dscnt As String = "s_Aplica_dscnt"
        Public Const Fecha_frizado As String = "s_Fecha_frizado"
        Public Const Limite_frizado As String = "s_Limite_frizado"
        Public Const Fecha_conteo As String = "s_Fecha_conteo"
        Public Const Ultima_trans As String = "s_Ultima_trans"
        Public Const Vencimiento As String = "s_Vencimiento"
        Public Const Disc_pct As String = "s_Disc_pct"
    End Class
#End Region
	
	#Region "Properties" 
		Public Overridable Property Whse_code As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.Whse_code)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.Whse_code, Value)
			End Set
		End Property

		Public Overridable Property Item_code As String
			Get
				Return MyBase.GetString(ColumnNames.Item_code)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.Item_code, Value)
			End Set
		End Property

		Public Overridable Property Purch_cost As Decimal
			Get
				Return MyBase.GetDecimal(ColumnNames.Purch_cost)
			End Get
			Set(ByVal Value As Decimal)
				MyBase.SetDecimal(ColumnNames.Purch_cost, Value)
			End Set
		End Property

		Public Overridable Property Porc_isc As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.Porc_isc)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.Porc_isc, Value)
			End Set
		End Property

		Public Overridable Property Last_cost As Decimal
			Get
				Return MyBase.GetDecimal(ColumnNames.Last_cost)
			End Get
			Set(ByVal Value As Decimal)
				MyBase.SetDecimal(ColumnNames.Last_cost, Value)
			End Set
		End Property

		Public Overridable Property Avg_cost As Decimal
			Get
				Return MyBase.GetDecimal(ColumnNames.Avg_cost)
			End Get
			Set(ByVal Value As Decimal)
				MyBase.SetDecimal(ColumnNames.Avg_cost, Value)
			End Set
		End Property

    Public Overridable Property Loc_row() As String
        Get
            Return MyBase.GetString(ColumnNames.Loc_row)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.Loc_row, Value)
        End Set
    End Property

    Public Overridable Property Loc_col() As String
        Get
            Return MyBase.GetString(ColumnNames.Loc_col)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.Loc_col, Value)
        End Set
    End Property

    Public Overridable Property Estante() As String
        Get
            Return MyBase.GetString(ColumnNames.Estante)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.Estante, Value)
        End Set
    End Property

    Public Overridable Property Price() As Decimal
        Get
            Return MyBase.GetDecimal(ColumnNames.Price)
        End Get
        Set(ByVal Value As Decimal)
            MyBase.SetDecimal(ColumnNames.Price, Value)
        End Set
    End Property

    Public Overridable Property Benef() As Decimal
        Get
            Return MyBase.GetDecimal(ColumnNames.Benef)
        End Get
        Set(ByVal Value As Decimal)
            MyBase.SetDecimal(ColumnNames.Benef, Value)
        End Set
    End Property

    Public Overridable Property BackOrder() As Short
        Get
            Return MyBase.GetShort(ColumnNames.BackOrder)
        End Get
        Set(ByVal Value As Short)
            MyBase.SetShort(ColumnNames.BackOrder, Value)
        End Set
    End Property

    Public Overridable Property Existencia() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.Existencia)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.Existencia, Value)
        End Set
    End Property

    Public Overridable Property Datelast_purch() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.Datelast_purch)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.Datelast_purch, Value)
        End Set
    End Property

    Public Overridable Property Datelast_sales() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.Datelast_sales)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.Datelast_sales, Value)
        End Set
    End Property

    Public Overridable Property Taxable() As Short
        Get
            Return MyBase.GetShort(ColumnNames.Taxable)
        End Get
        Set(ByVal Value As Short)
            MyBase.SetShort(ColumnNames.Taxable, Value)
        End Set
    End Property

    Public Overridable Property Rounded() As Decimal
        Get
            Return MyBase.GetDecimal(ColumnNames.Rounded)
        End Get
        Set(ByVal Value As Decimal)
            MyBase.SetDecimal(ColumnNames.Rounded, Value)
        End Set
    End Property

    Public Overridable Property Rorder_point() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.Rorder_point)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.Rorder_point, Value)
        End Set
    End Property

    Public Overridable Property Existencia_min() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.Existencia_min)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.Existencia_min, Value)
        End Set
    End Property

    Public Overridable Property Exitencia_max() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.Exitencia_max)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.Exitencia_max, Value)
        End Set
    End Property

    Public Overridable Property Cant_pedida() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.Cant_pedida)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.Cant_pedida, Value)
        End Set
    End Property

    Public Overridable Property Cant_recibida() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.Cant_recibida)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.Cant_recibida, Value)
        End Set
    End Property

    Public Overridable Property Numero_orden() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.Numero_orden)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.Numero_orden, Value)
        End Set
    End Property

    Public Overridable Property Frizado_inv() As Short
        Get
            Return MyBase.GetShort(ColumnNames.Frizado_inv)
        End Get
        Set(ByVal Value As Short)
            MyBase.SetShort(ColumnNames.Frizado_inv, Value)
        End Set
    End Property

    Public Overridable Property Aplica_dscnt() As Short
        Get
            Return MyBase.GetShort(ColumnNames.Aplica_dscnt)
        End Get
        Set(ByVal Value As Short)
            MyBase.SetShort(ColumnNames.Aplica_dscnt, Value)
        End Set
    End Property

    Public Overridable Property Fecha_frizado() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.Fecha_frizado)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.Fecha_frizado, Value)
        End Set
    End Property

    Public Overridable Property Limite_frizado() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.Limite_frizado)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.Limite_frizado, Value)
        End Set
    End Property

    Public Overridable Property Fecha_conteo() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.Fecha_conteo)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.Fecha_conteo, Value)
        End Set
    End Property

    Public Overridable Property Ultima_trans() As Decimal
        Get
            Return MyBase.GetDecimal(ColumnNames.Ultima_trans)
        End Get
        Set(ByVal Value As Decimal)
            MyBase.SetDecimal(ColumnNames.Ultima_trans, Value)
        End Set
    End Property

    Public Overridable Property Vencimiento() As Short
        Get
            Return MyBase.GetShort(ColumnNames.Vencimiento)
        End Get
        Set(ByVal Value As Short)
            MyBase.SetShort(ColumnNames.Vencimiento, Value)
        End Set
    End Property

    Public Overridable Property Disc_pct() As Decimal
        Get
            Return MyBase.GetDecimal(ColumnNames.Disc_pct)
        End Get
        Set(ByVal Value As Decimal)
            MyBase.SetDecimal(ColumnNames.Disc_pct, Value)
        End Set
    End Property

#End Region
	
	#Region "String Properties" 

		Public Overridable Property s_Whse_code As String
			Get
				If Me.IsColumnNull(ColumnNames.Whse_code) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Whse_code)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Whse_code)
				Else
					Me.Whse_code = MyBase.SetIntegerAsString(ColumnNames.Whse_code, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Item_code As String
			Get
				If Me.IsColumnNull(ColumnNames.Item_code) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.Item_code)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Item_code)
				Else
					Me.Item_code = MyBase.SetStringAsString(ColumnNames.Item_code, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Purch_cost As String
			Get
				If Me.IsColumnNull(ColumnNames.Purch_cost) Then
					Return String.Empty
				Else
					Return MyBase.GetDecimalAsString(ColumnNames.Purch_cost)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Purch_cost)
				Else
					Me.Purch_cost = MyBase.SetDecimalAsString(ColumnNames.Purch_cost, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Porc_isc As String
			Get
				If Me.IsColumnNull(ColumnNames.Porc_isc) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Porc_isc)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Porc_isc)
				Else
					Me.Porc_isc = MyBase.SetIntegerAsString(ColumnNames.Porc_isc, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Last_cost As String
			Get
				If Me.IsColumnNull(ColumnNames.Last_cost) Then
					Return String.Empty
				Else
					Return MyBase.GetDecimalAsString(ColumnNames.Last_cost)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Last_cost)
				Else
					Me.Last_cost = MyBase.SetDecimalAsString(ColumnNames.Last_cost, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Avg_cost As String
			Get
				If Me.IsColumnNull(ColumnNames.Avg_cost) Then
					Return String.Empty
				Else
					Return MyBase.GetDecimalAsString(ColumnNames.Avg_cost)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Avg_cost)
				Else
					Me.Avg_cost = MyBase.SetDecimalAsString(ColumnNames.Avg_cost, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Loc_row As String
			Get
				If Me.IsColumnNull(ColumnNames.Loc_row) Then
					Return String.Empty
				Else
                Return MyBase.GetStringAsString(ColumnNames.Loc_row)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Loc_row)
				Else
                Me.Loc_row = MyBase.SetStringAsString(ColumnNames.Loc_row, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Loc_col As String
			Get
				If Me.IsColumnNull(ColumnNames.Loc_col) Then
					Return String.Empty
				Else
                Return MyBase.GetStringAsString(ColumnNames.Loc_col)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Loc_col)
				Else
                Me.Loc_col = MyBase.SetStringAsString(ColumnNames.Loc_col, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Estante As String
			Get
				If Me.IsColumnNull(ColumnNames.Estante) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.Estante)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Estante)
				Else
					Me.Estante = MyBase.SetStringAsString(ColumnNames.Estante, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Price As String
			Get
				If Me.IsColumnNull(ColumnNames.Price) Then
					Return String.Empty
				Else
					Return MyBase.GetDecimalAsString(ColumnNames.Price)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Price)
				Else
					Me.Price = MyBase.SetDecimalAsString(ColumnNames.Price, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Benef As String
			Get
				If Me.IsColumnNull(ColumnNames.Benef) Then
					Return String.Empty
				Else
					Return MyBase.GetDecimalAsString(ColumnNames.Benef)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Benef)
				Else
					Me.Benef = MyBase.SetDecimalAsString(ColumnNames.Benef, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_BackOrder As String
			Get
				If Me.IsColumnNull(ColumnNames.BackOrder) Then
					Return String.Empty
				Else
					Return MyBase.GetShortAsString(ColumnNames.BackOrder)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.BackOrder)
				Else
					Me.BackOrder = MyBase.SetShortAsString(ColumnNames.BackOrder, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Existencia As String
			Get
				If Me.IsColumnNull(ColumnNames.Existencia) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Existencia)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Existencia)
				Else
					Me.Existencia = MyBase.SetIntegerAsString(ColumnNames.Existencia, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Datelast_purch As String
			Get
				If Me.IsColumnNull(ColumnNames.Datelast_purch) Then
					Return String.Empty
				Else
					Return MyBase.GetDateTimeAsString(ColumnNames.Datelast_purch)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Datelast_purch)
				Else
					Me.Datelast_purch = MyBase.SetDateTimeAsString(ColumnNames.Datelast_purch, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Datelast_sales As String
			Get
				If Me.IsColumnNull(ColumnNames.Datelast_sales) Then
					Return String.Empty
				Else
					Return MyBase.GetDateTimeAsString(ColumnNames.Datelast_sales)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Datelast_sales)
				Else
					Me.Datelast_sales = MyBase.SetDateTimeAsString(ColumnNames.Datelast_sales, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Taxable As String
			Get
				If Me.IsColumnNull(ColumnNames.Taxable) Then
					Return String.Empty
				Else
					Return MyBase.GetShortAsString(ColumnNames.Taxable)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Taxable)
				Else
					Me.Taxable = MyBase.SetShortAsString(ColumnNames.Taxable, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Rounded As String
			Get
				If Me.IsColumnNull(ColumnNames.Rounded) Then
					Return String.Empty
				Else
					Return MyBase.GetDecimalAsString(ColumnNames.Rounded)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Rounded)
				Else
					Me.Rounded = MyBase.SetDecimalAsString(ColumnNames.Rounded, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Rorder_point As String
			Get
				If Me.IsColumnNull(ColumnNames.Rorder_point) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Rorder_point)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Rorder_point)
				Else
					Me.Rorder_point = MyBase.SetIntegerAsString(ColumnNames.Rorder_point, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Existencia_min As String
			Get
				If Me.IsColumnNull(ColumnNames.Existencia_min) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Existencia_min)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Existencia_min)
				Else
					Me.Existencia_min = MyBase.SetIntegerAsString(ColumnNames.Existencia_min, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Exitencia_max As String
			Get
				If Me.IsColumnNull(ColumnNames.Exitencia_max) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Exitencia_max)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Exitencia_max)
				Else
					Me.Exitencia_max = MyBase.SetIntegerAsString(ColumnNames.Exitencia_max, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Cant_pedida As String
			Get
				If Me.IsColumnNull(ColumnNames.Cant_pedida) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Cant_pedida)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Cant_pedida)
				Else
					Me.Cant_pedida = MyBase.SetIntegerAsString(ColumnNames.Cant_pedida, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Cant_recibida As String
			Get
				If Me.IsColumnNull(ColumnNames.Cant_recibida) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Cant_recibida)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Cant_recibida)
				Else
					Me.Cant_recibida = MyBase.SetIntegerAsString(ColumnNames.Cant_recibida, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Numero_orden As String
			Get
				If Me.IsColumnNull(ColumnNames.Numero_orden) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Numero_orden)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Numero_orden)
				Else
					Me.Numero_orden = MyBase.SetIntegerAsString(ColumnNames.Numero_orden, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Frizado_inv As String
			Get
				If Me.IsColumnNull(ColumnNames.Frizado_inv) Then
					Return String.Empty
				Else
					Return MyBase.GetShortAsString(ColumnNames.Frizado_inv)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Frizado_inv)
				Else
					Me.Frizado_inv = MyBase.SetShortAsString(ColumnNames.Frizado_inv, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Aplica_dscnt As String
			Get
				If Me.IsColumnNull(ColumnNames.Aplica_dscnt) Then
					Return String.Empty
				Else
					Return MyBase.GetShortAsString(ColumnNames.Aplica_dscnt)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Aplica_dscnt)
				Else
					Me.Aplica_dscnt = MyBase.SetShortAsString(ColumnNames.Aplica_dscnt, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Fecha_frizado As String
			Get
				If Me.IsColumnNull(ColumnNames.Fecha_frizado) Then
					Return String.Empty
				Else
					Return MyBase.GetDateTimeAsString(ColumnNames.Fecha_frizado)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Fecha_frizado)
				Else
					Me.Fecha_frizado = MyBase.SetDateTimeAsString(ColumnNames.Fecha_frizado, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Limite_frizado As String
			Get
				If Me.IsColumnNull(ColumnNames.Limite_frizado) Then
					Return String.Empty
				Else
					Return MyBase.GetDateTimeAsString(ColumnNames.Limite_frizado)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Limite_frizado)
				Else
					Me.Limite_frizado = MyBase.SetDateTimeAsString(ColumnNames.Limite_frizado, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Fecha_conteo As String
			Get
				If Me.IsColumnNull(ColumnNames.Fecha_conteo) Then
					Return String.Empty
				Else
					Return MyBase.GetDateTimeAsString(ColumnNames.Fecha_conteo)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Fecha_conteo)
				Else
					Me.Fecha_conteo = MyBase.SetDateTimeAsString(ColumnNames.Fecha_conteo, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Ultima_trans As String
			Get
				If Me.IsColumnNull(ColumnNames.Ultima_trans) Then
					Return String.Empty
				Else
					Return MyBase.GetDecimalAsString(ColumnNames.Ultima_trans)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Ultima_trans)
				Else
					Me.Ultima_trans = MyBase.SetDecimalAsString(ColumnNames.Ultima_trans, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Vencimiento As String
			Get
				If Me.IsColumnNull(ColumnNames.Vencimiento) Then
					Return String.Empty
				Else
                Return MyBase.GetShortAsString(ColumnNames.Vencimiento)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Vencimiento)
				Else
                Me.Vencimiento = MyBase.SetShortAsString(ColumnNames.Vencimiento, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Disc_pct As String
			Get
				If Me.IsColumnNull(ColumnNames.Disc_pct) Then
					Return String.Empty
				Else
					Return MyBase.GetDecimalAsString(ColumnNames.Disc_pct)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Disc_pct)
				Else
					Me.Disc_pct = MyBase.SetDecimalAsString(ColumnNames.Disc_pct, Value)
				End If
			End Set
		End Property


#End Region

	#Region "Where Clause"
    Public Class WhereClause

        Public Sub New(ByVal entity As BusinessEntity)
            Me._entity = entity
        End Sub
		
		Public ReadOnly Property TearOff As TearOffWhereParameter
			Get
				If _tearOff Is Nothing Then
					_tearOff = new TearOffWhereParameter(Me)
				End If

				Return _tearOff
			End Get
		End Property

		#Region "TearOff's"
		Public class TearOffWhereParameter

			Public Sub New(ByVal clause As WhereClause)
				Me._clause = clause
			End Sub
		
	
			Public ReadOnly Property Whse_code() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Whse_code, Parameters.Whse_code)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Item_code() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Item_code, Parameters.Item_code)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Purch_cost() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Purch_cost, Parameters.Purch_cost)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Porc_isc() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Porc_isc, Parameters.Porc_isc)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Last_cost() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Last_cost, Parameters.Last_cost)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Avg_cost() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Avg_cost, Parameters.Avg_cost)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Loc_row() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Loc_row, Parameters.Loc_row)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Loc_col() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Loc_col, Parameters.Loc_col)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Estante() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Estante, Parameters.Estante)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Price() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Price, Parameters.Price)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Benef() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Benef, Parameters.Benef)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property BackOrder() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.BackOrder, Parameters.BackOrder)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Existencia() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Existencia, Parameters.Existencia)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Datelast_purch() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Datelast_purch, Parameters.Datelast_purch)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Datelast_sales() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Datelast_sales, Parameters.Datelast_sales)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Taxable() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Taxable, Parameters.Taxable)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Rounded() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Rounded, Parameters.Rounded)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Rorder_point() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Rorder_point, Parameters.Rorder_point)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Existencia_min() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Existencia_min, Parameters.Existencia_min)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Exitencia_max() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Exitencia_max, Parameters.Exitencia_max)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Cant_pedida() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Cant_pedida, Parameters.Cant_pedida)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Cant_recibida() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Cant_recibida, Parameters.Cant_recibida)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Numero_orden() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Numero_orden, Parameters.Numero_orden)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Frizado_inv() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Frizado_inv, Parameters.Frizado_inv)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Aplica_dscnt() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Aplica_dscnt, Parameters.Aplica_dscnt)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Fecha_frizado() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Fecha_frizado, Parameters.Fecha_frizado)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Limite_frizado() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Limite_frizado, Parameters.Limite_frizado)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Fecha_conteo() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Fecha_conteo, Parameters.Fecha_conteo)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Ultima_trans() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Ultima_trans, Parameters.Ultima_trans)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Vencimiento() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Vencimiento, Parameters.Vencimiento)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Disc_pct() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Disc_pct, Parameters.Disc_pct)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

            Private _clause As WhereClause
        End Class
		#End Region	

		Public ReadOnly Property Whse_code() As WhereParameter 
			Get
				If _Whse_code_W Is Nothing Then
					_Whse_code_W = TearOff.Whse_code
				End If
				Return _Whse_code_W
			End Get
		End Property

		Public ReadOnly Property Item_code() As WhereParameter 
			Get
				If _Item_code_W Is Nothing Then
					_Item_code_W = TearOff.Item_code
				End If
				Return _Item_code_W
			End Get
		End Property

		Public ReadOnly Property Purch_cost() As WhereParameter 
			Get
				If _Purch_cost_W Is Nothing Then
					_Purch_cost_W = TearOff.Purch_cost
				End If
				Return _Purch_cost_W
			End Get
		End Property

		Public ReadOnly Property Porc_isc() As WhereParameter 
			Get
				If _Porc_isc_W Is Nothing Then
					_Porc_isc_W = TearOff.Porc_isc
				End If
				Return _Porc_isc_W
			End Get
		End Property

		Public ReadOnly Property Last_cost() As WhereParameter 
			Get
				If _Last_cost_W Is Nothing Then
					_Last_cost_W = TearOff.Last_cost
				End If
				Return _Last_cost_W
			End Get
		End Property

		Public ReadOnly Property Avg_cost() As WhereParameter 
			Get
				If _Avg_cost_W Is Nothing Then
					_Avg_cost_W = TearOff.Avg_cost
				End If
				Return _Avg_cost_W
			End Get
		End Property

		Public ReadOnly Property Loc_row() As WhereParameter 
			Get
				If _Loc_row_W Is Nothing Then
					_Loc_row_W = TearOff.Loc_row
				End If
				Return _Loc_row_W
			End Get
		End Property

		Public ReadOnly Property Loc_col() As WhereParameter 
			Get
				If _Loc_col_W Is Nothing Then
					_Loc_col_W = TearOff.Loc_col
				End If
				Return _Loc_col_W
			End Get
		End Property

		Public ReadOnly Property Estante() As WhereParameter 
			Get
				If _Estante_W Is Nothing Then
					_Estante_W = TearOff.Estante
				End If
				Return _Estante_W
			End Get
		End Property

		Public ReadOnly Property Price() As WhereParameter 
			Get
				If _Price_W Is Nothing Then
					_Price_W = TearOff.Price
				End If
				Return _Price_W
			End Get
		End Property

		Public ReadOnly Property Benef() As WhereParameter 
			Get
				If _Benef_W Is Nothing Then
					_Benef_W = TearOff.Benef
				End If
				Return _Benef_W
			End Get
		End Property

		Public ReadOnly Property BackOrder() As WhereParameter 
			Get
				If _BackOrder_W Is Nothing Then
					_BackOrder_W = TearOff.BackOrder
				End If
				Return _BackOrder_W
			End Get
		End Property

		Public ReadOnly Property Existencia() As WhereParameter 
			Get
				If _Existencia_W Is Nothing Then
					_Existencia_W = TearOff.Existencia
				End If
				Return _Existencia_W
			End Get
		End Property

		Public ReadOnly Property Datelast_purch() As WhereParameter 
			Get
				If _Datelast_purch_W Is Nothing Then
					_Datelast_purch_W = TearOff.Datelast_purch
				End If
				Return _Datelast_purch_W
			End Get
		End Property

		Public ReadOnly Property Datelast_sales() As WhereParameter 
			Get
				If _Datelast_sales_W Is Nothing Then
					_Datelast_sales_W = TearOff.Datelast_sales
				End If
				Return _Datelast_sales_W
			End Get
		End Property

		Public ReadOnly Property Taxable() As WhereParameter 
			Get
				If _Taxable_W Is Nothing Then
					_Taxable_W = TearOff.Taxable
				End If
				Return _Taxable_W
			End Get
		End Property

		Public ReadOnly Property Rounded() As WhereParameter 
			Get
				If _Rounded_W Is Nothing Then
					_Rounded_W = TearOff.Rounded
				End If
				Return _Rounded_W
			End Get
		End Property

		Public ReadOnly Property Rorder_point() As WhereParameter 
			Get
				If _Rorder_point_W Is Nothing Then
					_Rorder_point_W = TearOff.Rorder_point
				End If
				Return _Rorder_point_W
			End Get
		End Property

		Public ReadOnly Property Existencia_min() As WhereParameter 
			Get
				If _Existencia_min_W Is Nothing Then
					_Existencia_min_W = TearOff.Existencia_min
				End If
				Return _Existencia_min_W
			End Get
		End Property

		Public ReadOnly Property Exitencia_max() As WhereParameter 
			Get
				If _Exitencia_max_W Is Nothing Then
					_Exitencia_max_W = TearOff.Exitencia_max
				End If
				Return _Exitencia_max_W
			End Get
		End Property

		Public ReadOnly Property Cant_pedida() As WhereParameter 
			Get
				If _Cant_pedida_W Is Nothing Then
					_Cant_pedida_W = TearOff.Cant_pedida
				End If
				Return _Cant_pedida_W
			End Get
		End Property

		Public ReadOnly Property Cant_recibida() As WhereParameter 
			Get
				If _Cant_recibida_W Is Nothing Then
					_Cant_recibida_W = TearOff.Cant_recibida
				End If
				Return _Cant_recibida_W
			End Get
		End Property

		Public ReadOnly Property Numero_orden() As WhereParameter 
			Get
				If _Numero_orden_W Is Nothing Then
					_Numero_orden_W = TearOff.Numero_orden
				End If
				Return _Numero_orden_W
			End Get
		End Property

		Public ReadOnly Property Frizado_inv() As WhereParameter 
			Get
				If _Frizado_inv_W Is Nothing Then
					_Frizado_inv_W = TearOff.Frizado_inv
				End If
				Return _Frizado_inv_W
			End Get
		End Property

		Public ReadOnly Property Aplica_dscnt() As WhereParameter 
			Get
				If _Aplica_dscnt_W Is Nothing Then
					_Aplica_dscnt_W = TearOff.Aplica_dscnt
				End If
				Return _Aplica_dscnt_W
			End Get
		End Property

		Public ReadOnly Property Fecha_frizado() As WhereParameter 
			Get
				If _Fecha_frizado_W Is Nothing Then
					_Fecha_frizado_W = TearOff.Fecha_frizado
				End If
				Return _Fecha_frizado_W
			End Get
		End Property

		Public ReadOnly Property Limite_frizado() As WhereParameter 
			Get
				If _Limite_frizado_W Is Nothing Then
					_Limite_frizado_W = TearOff.Limite_frizado
				End If
				Return _Limite_frizado_W
			End Get
		End Property

		Public ReadOnly Property Fecha_conteo() As WhereParameter 
			Get
				If _Fecha_conteo_W Is Nothing Then
					_Fecha_conteo_W = TearOff.Fecha_conteo
				End If
				Return _Fecha_conteo_W
			End Get
		End Property

		Public ReadOnly Property Ultima_trans() As WhereParameter 
			Get
				If _Ultima_trans_W Is Nothing Then
					_Ultima_trans_W = TearOff.Ultima_trans
				End If
				Return _Ultima_trans_W
			End Get
		End Property

		Public ReadOnly Property Vencimiento() As WhereParameter 
			Get
				If _Vencimiento_W Is Nothing Then
					_Vencimiento_W = TearOff.Vencimiento
				End If
				Return _Vencimiento_W
			End Get
		End Property

		Public ReadOnly Property Disc_pct() As WhereParameter 
			Get
				If _Disc_pct_W Is Nothing Then
					_Disc_pct_W = TearOff.Disc_pct
				End If
				Return _Disc_pct_W
			End Get
		End Property

        Private _Whse_code_W As WhereParameter = Nothing
        Private _Item_code_W As WhereParameter = Nothing
        Private _Purch_cost_W As WhereParameter = Nothing
        Private _Porc_isc_W As WhereParameter = Nothing
        Private _Last_cost_W As WhereParameter = Nothing
        Private _Avg_cost_W As WhereParameter = Nothing
        Private _Loc_row_W As WhereParameter = Nothing
        Private _Loc_col_W As WhereParameter = Nothing
        Private _Estante_W As WhereParameter = Nothing
        Private _Price_W As WhereParameter = Nothing
        Private _Benef_W As WhereParameter = Nothing
        Private _BackOrder_W As WhereParameter = Nothing
        Private _Existencia_W As WhereParameter = Nothing
        Private _Datelast_purch_W As WhereParameter = Nothing
        Private _Datelast_sales_W As WhereParameter = Nothing
        Private _Taxable_W As WhereParameter = Nothing
        Private _Rounded_W As WhereParameter = Nothing
        Private _Rorder_point_W As WhereParameter = Nothing
        Private _Existencia_min_W As WhereParameter = Nothing
        Private _Exitencia_max_W As WhereParameter = Nothing
        Private _Cant_pedida_W As WhereParameter = Nothing
        Private _Cant_recibida_W As WhereParameter = Nothing
        Private _Numero_orden_W As WhereParameter = Nothing
        Private _Frizado_inv_W As WhereParameter = Nothing
        Private _Aplica_dscnt_W As WhereParameter = Nothing
        Private _Fecha_frizado_W As WhereParameter = Nothing
        Private _Limite_frizado_W As WhereParameter = Nothing
        Private _Fecha_conteo_W As WhereParameter = Nothing
        Private _Ultima_trans_W As WhereParameter = Nothing
        Private _Vencimiento_W As WhereParameter = Nothing
        Private _Disc_pct_W As WhereParameter = Nothing

        Public Sub WhereClauseReset()

            _Whse_code_W = Nothing
            _Item_code_W = Nothing
            _Purch_cost_W = Nothing
            _Porc_isc_W = Nothing
            _Last_cost_W = Nothing
            _Avg_cost_W = Nothing
            _Loc_row_W = Nothing
            _Loc_col_W = Nothing
            _Estante_W = Nothing
            _Price_W = Nothing
            _Benef_W = Nothing
            _BackOrder_W = Nothing
            _Existencia_W = Nothing
            _Datelast_purch_W = Nothing
            _Datelast_sales_W = Nothing
            _Taxable_W = Nothing
            _Rounded_W = Nothing
            _Rorder_point_W = Nothing
            _Existencia_min_W = Nothing
            _Exitencia_max_W = Nothing
            _Cant_pedida_W = Nothing
            _Cant_recibida_W = Nothing
            _Numero_orden_W = Nothing
            _Frizado_inv_W = Nothing
            _Aplica_dscnt_W = Nothing
            _Fecha_frizado_W = Nothing
            _Limite_frizado_W = Nothing
            _Fecha_conteo_W = Nothing
            _Ultima_trans_W = Nothing
            _Vencimiento_W = Nothing
            _Disc_pct_W = Nothing
            Me._entity.Query.FlushWhereParameters()

        End Sub

        Private _entity As BusinessEntity
        Private _tearOff As TearOffWhereParameter
    End Class

	Public ReadOnly Property Where() As WhereClause
		Get
			If _whereClause Is Nothing Then
				_whereClause = New WhereClause(Me)
			End If
	
			Return _whereClause
		End Get
	End Property
	
	Private _whereClause As WhereClause = Nothing	
#End Region	

#Region "Aggregate Clause"
    Public Class AggregateClause

        Public Sub New(ByVal entity As BusinessEntity)
            Me._entity = entity
        End Sub
		
		Public ReadOnly Property TearOff As TearOffAggregateParameter
			Get
				If _tearOff Is Nothing Then
					_tearOff = new TearOffAggregateParameter(Me)
				End If

				Return _tearOff
			End Get
		End Property

		#Region "AggregateParameter TearOff's"
		Public class TearOffAggregateParameter

			Public Sub New(ByVal clause As AggregateClause)
				Me._clause = clause
			End Sub
		
	
		Public ReadOnly Property Whse_code() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Whse_code, Parameters.Whse_code)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Item_code() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Item_code, Parameters.Item_code)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Purch_cost() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Purch_cost, Parameters.Purch_cost)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Porc_isc() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Porc_isc, Parameters.Porc_isc)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Last_cost() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Last_cost, Parameters.Last_cost)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Avg_cost() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Avg_cost, Parameters.Avg_cost)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Loc_row() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Loc_row, Parameters.Loc_row)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Loc_col() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Loc_col, Parameters.Loc_col)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Estante() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Estante, Parameters.Estante)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Price() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Price, Parameters.Price)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Benef() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Benef, Parameters.Benef)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property BackOrder() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.BackOrder, Parameters.BackOrder)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Existencia() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Existencia, Parameters.Existencia)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Datelast_purch() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Datelast_purch, Parameters.Datelast_purch)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Datelast_sales() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Datelast_sales, Parameters.Datelast_sales)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Taxable() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Taxable, Parameters.Taxable)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Rounded() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Rounded, Parameters.Rounded)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Rorder_point() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Rorder_point, Parameters.Rorder_point)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Existencia_min() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Existencia_min, Parameters.Existencia_min)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Exitencia_max() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Exitencia_max, Parameters.Exitencia_max)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Cant_pedida() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Cant_pedida, Parameters.Cant_pedida)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Cant_recibida() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Cant_recibida, Parameters.Cant_recibida)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Numero_orden() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Numero_orden, Parameters.Numero_orden)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Frizado_inv() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Frizado_inv, Parameters.Frizado_inv)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Aplica_dscnt() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Aplica_dscnt, Parameters.Aplica_dscnt)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Fecha_frizado() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Fecha_frizado, Parameters.Fecha_frizado)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Limite_frizado() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Limite_frizado, Parameters.Limite_frizado)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Fecha_conteo() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Fecha_conteo, Parameters.Fecha_conteo)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Ultima_trans() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Ultima_trans, Parameters.Ultima_trans)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Vencimiento() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Vencimiento, Parameters.Vencimiento)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property
            Public ReadOnly Property Disc_pct() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Disc_pct, Parameters.Disc_pct)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Private _clause As AggregateClause
        End Class
		#End Region	

		Public ReadOnly Property Whse_code() As AggregateParameter 
			Get
				If _Whse_code_W Is Nothing Then
					_Whse_code_W = TearOff.Whse_code
				End If
				Return _Whse_code_W
			End Get
		End Property

		Public ReadOnly Property Item_code() As AggregateParameter 
			Get
				If _Item_code_W Is Nothing Then
					_Item_code_W = TearOff.Item_code
				End If
				Return _Item_code_W
			End Get
		End Property

		Public ReadOnly Property Purch_cost() As AggregateParameter 
			Get
				If _Purch_cost_W Is Nothing Then
					_Purch_cost_W = TearOff.Purch_cost
				End If
				Return _Purch_cost_W
			End Get
		End Property

		Public ReadOnly Property Porc_isc() As AggregateParameter 
			Get
				If _Porc_isc_W Is Nothing Then
					_Porc_isc_W = TearOff.Porc_isc
				End If
				Return _Porc_isc_W
			End Get
		End Property

		Public ReadOnly Property Last_cost() As AggregateParameter 
			Get
				If _Last_cost_W Is Nothing Then
					_Last_cost_W = TearOff.Last_cost
				End If
				Return _Last_cost_W
			End Get
		End Property

		Public ReadOnly Property Avg_cost() As AggregateParameter 
			Get
				If _Avg_cost_W Is Nothing Then
					_Avg_cost_W = TearOff.Avg_cost
				End If
				Return _Avg_cost_W
			End Get
		End Property

		Public ReadOnly Property Loc_row() As AggregateParameter 
			Get
				If _Loc_row_W Is Nothing Then
					_Loc_row_W = TearOff.Loc_row
				End If
				Return _Loc_row_W
			End Get
		End Property

		Public ReadOnly Property Loc_col() As AggregateParameter 
			Get
				If _Loc_col_W Is Nothing Then
					_Loc_col_W = TearOff.Loc_col
				End If
				Return _Loc_col_W
			End Get
		End Property

		Public ReadOnly Property Estante() As AggregateParameter 
			Get
				If _Estante_W Is Nothing Then
					_Estante_W = TearOff.Estante
				End If
				Return _Estante_W
			End Get
		End Property

		Public ReadOnly Property Price() As AggregateParameter 
			Get
				If _Price_W Is Nothing Then
					_Price_W = TearOff.Price
				End If
				Return _Price_W
			End Get
		End Property

		Public ReadOnly Property Benef() As AggregateParameter 
			Get
				If _Benef_W Is Nothing Then
					_Benef_W = TearOff.Benef
				End If
				Return _Benef_W
			End Get
		End Property

		Public ReadOnly Property BackOrder() As AggregateParameter 
			Get
				If _BackOrder_W Is Nothing Then
					_BackOrder_W = TearOff.BackOrder
				End If
				Return _BackOrder_W
			End Get
		End Property

		Public ReadOnly Property Existencia() As AggregateParameter 
			Get
				If _Existencia_W Is Nothing Then
					_Existencia_W = TearOff.Existencia
				End If
				Return _Existencia_W
			End Get
		End Property

		Public ReadOnly Property Datelast_purch() As AggregateParameter 
			Get
				If _Datelast_purch_W Is Nothing Then
					_Datelast_purch_W = TearOff.Datelast_purch
				End If
				Return _Datelast_purch_W
			End Get
		End Property

		Public ReadOnly Property Datelast_sales() As AggregateParameter 
			Get
				If _Datelast_sales_W Is Nothing Then
					_Datelast_sales_W = TearOff.Datelast_sales
				End If
				Return _Datelast_sales_W
			End Get
		End Property

		Public ReadOnly Property Taxable() As AggregateParameter 
			Get
				If _Taxable_W Is Nothing Then
					_Taxable_W = TearOff.Taxable
				End If
				Return _Taxable_W
			End Get
		End Property

		Public ReadOnly Property Rounded() As AggregateParameter 
			Get
				If _Rounded_W Is Nothing Then
					_Rounded_W = TearOff.Rounded
				End If
				Return _Rounded_W
			End Get
		End Property

		Public ReadOnly Property Rorder_point() As AggregateParameter 
			Get
				If _Rorder_point_W Is Nothing Then
					_Rorder_point_W = TearOff.Rorder_point
				End If
				Return _Rorder_point_W
			End Get
		End Property

		Public ReadOnly Property Existencia_min() As AggregateParameter 
			Get
				If _Existencia_min_W Is Nothing Then
					_Existencia_min_W = TearOff.Existencia_min
				End If
				Return _Existencia_min_W
			End Get
		End Property

		Public ReadOnly Property Exitencia_max() As AggregateParameter 
			Get
				If _Exitencia_max_W Is Nothing Then
					_Exitencia_max_W = TearOff.Exitencia_max
				End If
				Return _Exitencia_max_W
			End Get
		End Property

		Public ReadOnly Property Cant_pedida() As AggregateParameter 
			Get
				If _Cant_pedida_W Is Nothing Then
					_Cant_pedida_W = TearOff.Cant_pedida
				End If
				Return _Cant_pedida_W
			End Get
		End Property

		Public ReadOnly Property Cant_recibida() As AggregateParameter 
			Get
				If _Cant_recibida_W Is Nothing Then
					_Cant_recibida_W = TearOff.Cant_recibida
				End If
				Return _Cant_recibida_W
			End Get
		End Property

		Public ReadOnly Property Numero_orden() As AggregateParameter 
			Get
				If _Numero_orden_W Is Nothing Then
					_Numero_orden_W = TearOff.Numero_orden
				End If
				Return _Numero_orden_W
			End Get
		End Property

		Public ReadOnly Property Frizado_inv() As AggregateParameter 
			Get
				If _Frizado_inv_W Is Nothing Then
					_Frizado_inv_W = TearOff.Frizado_inv
				End If
				Return _Frizado_inv_W
			End Get
		End Property

		Public ReadOnly Property Aplica_dscnt() As AggregateParameter 
			Get
				If _Aplica_dscnt_W Is Nothing Then
					_Aplica_dscnt_W = TearOff.Aplica_dscnt
				End If
				Return _Aplica_dscnt_W
			End Get
		End Property

		Public ReadOnly Property Fecha_frizado() As AggregateParameter 
			Get
				If _Fecha_frizado_W Is Nothing Then
					_Fecha_frizado_W = TearOff.Fecha_frizado
				End If
				Return _Fecha_frizado_W
			End Get
		End Property

		Public ReadOnly Property Limite_frizado() As AggregateParameter 
			Get
				If _Limite_frizado_W Is Nothing Then
					_Limite_frizado_W = TearOff.Limite_frizado
				End If
				Return _Limite_frizado_W
			End Get
		End Property

		Public ReadOnly Property Fecha_conteo() As AggregateParameter 
			Get
				If _Fecha_conteo_W Is Nothing Then
					_Fecha_conteo_W = TearOff.Fecha_conteo
				End If
				Return _Fecha_conteo_W
			End Get
		End Property

		Public ReadOnly Property Ultima_trans() As AggregateParameter 
			Get
				If _Ultima_trans_W Is Nothing Then
					_Ultima_trans_W = TearOff.Ultima_trans
				End If
				Return _Ultima_trans_W
			End Get
		End Property

		Public ReadOnly Property Vencimiento() As AggregateParameter 
			Get
				If _Vencimiento_W Is Nothing Then
					_Vencimiento_W = TearOff.Vencimiento
				End If
				Return _Vencimiento_W
			End Get
		End Property

		Public ReadOnly Property Disc_pct() As AggregateParameter 
			Get
				If _Disc_pct_W Is Nothing Then
					_Disc_pct_W = TearOff.Disc_pct
				End If
				Return _Disc_pct_W
			End Get
		End Property
        
        Private _Whse_code_W As AggregateParameter = Nothing
        Private _Item_code_W As AggregateParameter = Nothing
        Private _Purch_cost_W As AggregateParameter = Nothing
        Private _Porc_isc_W As AggregateParameter = Nothing
        Private _Last_cost_W As AggregateParameter = Nothing
        Private _Avg_cost_W As AggregateParameter = Nothing
        Private _Loc_row_W As AggregateParameter = Nothing
        Private _Loc_col_W As AggregateParameter = Nothing
        Private _Estante_W As AggregateParameter = Nothing
        Private _Price_W As AggregateParameter = Nothing
        Private _Benef_W As AggregateParameter = Nothing
        Private _BackOrder_W As AggregateParameter = Nothing
        Private _Existencia_W As AggregateParameter = Nothing
        Private _Datelast_purch_W As AggregateParameter = Nothing
        Private _Datelast_sales_W As AggregateParameter = Nothing
        Private _Taxable_W As AggregateParameter = Nothing
        Private _Rounded_W As AggregateParameter = Nothing
        Private _Rorder_point_W As AggregateParameter = Nothing
        Private _Existencia_min_W As AggregateParameter = Nothing
        Private _Exitencia_max_W As AggregateParameter = Nothing
        Private _Cant_pedida_W As AggregateParameter = Nothing
        Private _Cant_recibida_W As AggregateParameter = Nothing
        Private _Numero_orden_W As AggregateParameter = Nothing
        Private _Frizado_inv_W As AggregateParameter = Nothing
        Private _Aplica_dscnt_W As AggregateParameter = Nothing
        Private _Fecha_frizado_W As AggregateParameter = Nothing
        Private _Limite_frizado_W As AggregateParameter = Nothing
        Private _Fecha_conteo_W As AggregateParameter = Nothing
        Private _Ultima_trans_W As AggregateParameter = Nothing
        Private _Vencimiento_W As AggregateParameter = Nothing
        Private _Disc_pct_W As AggregateParameter = Nothing

        Public Sub AggregateClauseReset()

            _Whse_code_W = Nothing
            _Item_code_W = Nothing
            _Purch_cost_W = Nothing
            _Porc_isc_W = Nothing
            _Last_cost_W = Nothing
            _Avg_cost_W = Nothing
            _Loc_row_W = Nothing
            _Loc_col_W = Nothing
            _Estante_W = Nothing
            _Price_W = Nothing
            _Benef_W = Nothing
            _BackOrder_W = Nothing
            _Existencia_W = Nothing
            _Datelast_purch_W = Nothing
            _Datelast_sales_W = Nothing
            _Taxable_W = Nothing
            _Rounded_W = Nothing
            _Rorder_point_W = Nothing
            _Existencia_min_W = Nothing
            _Exitencia_max_W = Nothing
            _Cant_pedida_W = Nothing
            _Cant_recibida_W = Nothing
            _Numero_orden_W = Nothing
            _Frizado_inv_W = Nothing
            _Aplica_dscnt_W = Nothing
            _Fecha_frizado_W = Nothing
            _Limite_frizado_W = Nothing
            _Fecha_conteo_W = Nothing
            _Ultima_trans_W = Nothing
            _Vencimiento_W = Nothing
            _Disc_pct_W = Nothing
            Me._entity.Query.FlushAggregateParameters()

        End Sub

        Private _entity As BusinessEntity
        Private _tearOff As TearOffAggregateParameter
    End Class

	Public ReadOnly Property Aggregate() As AggregateClause
		Get
			If _aggregateClause Is Nothing Then
				_aggregateClause = New AggregateClause(Me)
			End If
	
			Return _aggregateClause
		End Get
	End Property
	
	Private _aggregateClause As AggregateClause = Nothing	
#End Region	

	Protected Overrides Function GetInsertCommand() As IDbCommand
	
		Dim cmd As OleDbCommand = New OleDbCommand
		cmd.CommandType = CommandType.StoredProcedure
		cmd.CommandText = "[" + Me.SchemaStoredProcedure + "proc_ivitemdInsert]" 
	    
		CreateParameters(cmd)
		    
		Return cmd 

  	End Function
	
	Protected Overrides Function GetUpdateCommand() As IDbCommand
	
		Dim cmd As OleDbCommand = New OleDbCommand
		cmd.CommandType = CommandType.StoredProcedure    
		cmd.CommandText = "[" + Me.SchemaStoredProcedure + "proc_ivitemdUpdate]" 
		
		CreateParameters(cmd) 
		    
		Return cmd
	
	End Function	
	
	Protected Overrides Function GetDeleteCommand() As IDbCommand
	
		Dim cmd As OleDbCommand = New OleDbCommand
		cmd.CommandType = CommandType.StoredProcedure    
		cmd.CommandText = "[" + Me.SchemaStoredProcedure + "proc_ivitemdDelete]" 
		
		Dim p As OleDbParameter
		p = cmd.Parameters.Add(Parameters.Whse_code)
		p.SourceColumn = ColumnNames.Whse_code
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Item_code)
		p.SourceColumn = ColumnNames.Item_code
        p.SourceVersion = DataRowVersion.Current

        Return cmd
	
	End Function	
	
	Private Sub CreateParameters(ByVal cmd As OleDbCommand)
	
		Dim p As OleDbParameter
		p = cmd.Parameters.Add(Parameters.Whse_code)
		p.SourceColumn = ColumnNames.Whse_code
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Item_code)
		p.SourceColumn = ColumnNames.Item_code
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Purch_cost)
		p.SourceColumn = ColumnNames.Purch_cost
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Porc_isc)
		p.SourceColumn = ColumnNames.Porc_isc
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Last_cost)
		p.SourceColumn = ColumnNames.Last_cost
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Avg_cost)
		p.SourceColumn = ColumnNames.Avg_cost
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Loc_row)
		p.SourceColumn = ColumnNames.Loc_row
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Loc_col)
		p.SourceColumn = ColumnNames.Loc_col
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Estante)
		p.SourceColumn = ColumnNames.Estante
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Price)
		p.SourceColumn = ColumnNames.Price
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Benef)
		p.SourceColumn = ColumnNames.Benef
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.BackOrder)
		p.SourceColumn = ColumnNames.BackOrder
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Existencia)
		p.SourceColumn = ColumnNames.Existencia
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Datelast_purch)
		p.SourceColumn = ColumnNames.Datelast_purch
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Datelast_sales)
		p.SourceColumn = ColumnNames.Datelast_sales
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Taxable)
		p.SourceColumn = ColumnNames.Taxable
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Rounded)
		p.SourceColumn = ColumnNames.Rounded
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Rorder_point)
		p.SourceColumn = ColumnNames.Rorder_point
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Existencia_min)
		p.SourceColumn = ColumnNames.Existencia_min
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Exitencia_max)
		p.SourceColumn = ColumnNames.Exitencia_max
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Cant_pedida)
		p.SourceColumn = ColumnNames.Cant_pedida
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Cant_recibida)
		p.SourceColumn = ColumnNames.Cant_recibida
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Numero_orden)
		p.SourceColumn = ColumnNames.Numero_orden
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Frizado_inv)
		p.SourceColumn = ColumnNames.Frizado_inv
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Aplica_dscnt)
		p.SourceColumn = ColumnNames.Aplica_dscnt
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Fecha_frizado)
		p.SourceColumn = ColumnNames.Fecha_frizado
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Limite_frizado)
		p.SourceColumn = ColumnNames.Limite_frizado
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Fecha_conteo)
		p.SourceColumn = ColumnNames.Fecha_conteo
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Ultima_trans)
		p.SourceColumn = ColumnNames.Ultima_trans
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Vencimiento)
		p.SourceColumn = ColumnNames.Vencimiento
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Disc_pct)
		p.SourceColumn = ColumnNames.Disc_pct
        p.SourceVersion = DataRowVersion.Current

    End Sub

End Class

