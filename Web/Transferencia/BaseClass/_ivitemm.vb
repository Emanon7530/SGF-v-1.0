
'===============================================================================
'  Generated From - VbNet_SQL_dOOdads_BusinessEntity.vbgen
' 
'  ** IMPORTANT  **
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class OleDbEntity is in the Architecture directory in "dOOdads".
'  
'  This object is 'MustInherit' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can Override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  Public Class YourObject
'    Inherits _YourObject
'
'  End Class
'
'===============================================================================

' Generated by MyGeneration Version # (1.2.0.7)

Imports System
Imports System.Data
Imports System.Data.OleDb
Imports System.Collections
Imports System.Collections.Specialized

Imports MyGeneration.dOOdads

Public MustInherit Class _ivitemm
	Inherits OleDbEntity

		Public Sub New() 
			Me.QuerySource = "ivitemm"
			Me.MappingName = "ivitemm"
		End Sub

	'=================================================================
	'  Public Overrides Sub AddNew()
	'=================================================================
	'
	'=================================================================
	Public Overrides Sub AddNew()
		MyBase.AddNew()
				
	End Sub
	
	Public Overrides Sub FlushData()
		Me._whereClause = nothing
		Me._aggregateClause = nothing		
		MyBase.FlushData()
	End Sub
	
	
	Public Overrides Function GetAutoKeyColumn() As String
			Return ""
	End Function
	
	'=================================================================
	'  	Public Function LoadAll() As Boolean
	'=================================================================
	'  Loads all of the records in the database, and sets the currentRow to the first row
	'=================================================================
	Public Function LoadAll() As Boolean
	
		Dim parameters As ListDictionary = Nothing
		
		
    	Return MyBase.LoadFromSql("[" + Me.SchemaStoredProcedure + "proc_ivitemmLoadAll]", parameters)
		
	End Function

	'=================================================================
	' Public Overridable Function LoadByPrimaryKey()  As Boolean
	'=================================================================
	'  Loads a single row of via the primary key
	'=================================================================
	Public Overridable Function LoadByPrimaryKey(ByVal Item_code As String) As Boolean

		Dim parameters As ListDictionary = New ListDictionary()
		parameters.Add(_ivitemm.Parameters.Item_code, Item_code)

		
		Return MyBase.LoadFromSql("[" + Me.SchemaStoredProcedure + "proc_ivitemmLoadByPrimaryKey]", parameters)

	End Function

	#Region "Parameters"
	Protected class Parameters 
        Public Shared ReadOnly Property Item_code() As OleDbParameter
            Get
                Return New OleDbParameter("@Item_code", OleDbType.VarChar, 10)
            End Get
        End Property

        Public Shared ReadOnly Property Item_serie() As OleDbParameter
            Get
                Return New OleDbParameter("@Item_serie", OleDbType.VarChar, 40)
            End Get
        End Property

        Public Shared ReadOnly Property Item_name() As OleDbParameter
            Get
                Return New OleDbParameter("@Item_name", OleDbType.VarChar, 100)
            End Get
        End Property

        Public Shared ReadOnly Property Abreviada() As OleDbParameter
            Get
                Return New OleDbParameter("@Abreviada", OleDbType.VarChar, 40)
            End Get
        End Property

        Public Shared ReadOnly Property Unit_code() As OleDbParameter
            Get
                Return New OleDbParameter("@Unit_code", OleDbType.Char, 5)
            End Get
        End Property

        Public Shared ReadOnly Property Prov_code() As OleDbParameter
            Get
                Return New OleDbParameter("@Prov_code", OleDbType.Integer, 0)
            End Get
        End Property

        Public Shared ReadOnly Property Brand_code() As OleDbParameter
            Get
                Return New OleDbParameter("@Brand_code", OleDbType.Integer, 0)
            End Get
        End Property

        Public Shared ReadOnly Property Sgroup_code() As OleDbParameter
            Get
                Return New OleDbParameter("@Sgroup_code", OleDbType.Integer, 0)
            End Get
        End Property

        Public Shared ReadOnly Property Group_code() As OleDbParameter
            Get
                Return New OleDbParameter("@Group_code", OleDbType.Integer, 0)
            End Get
        End Property

        Public Shared ReadOnly Property Purch_unit() As OleDbParameter
            Get
                Return New OleDbParameter("@Purch_unit", OleDbType.Char, 5)
            End Get
        End Property

        Public Shared ReadOnly Property Taxable() As OleDbParameter
            Get
                Return New OleDbParameter("@Taxable", OleDbType.SmallInt, 0)
            End Get
        End Property

        Public Shared ReadOnly Property Item_status() As OleDbParameter
            Get
                Return New OleDbParameter("@Item_status", OleDbType.VarChar, 20)
            End Get
        End Property

        Public Shared ReadOnly Property Item_created() As OleDbParameter
            Get
                Return New OleDbParameter("@Item_created", OleDbType.DBTimeStamp, 0)
            End Get
        End Property

        Public Shared ReadOnly Property Item_serial() As OleDbParameter
            Get
                Return New OleDbParameter("@Item_serial", OleDbType.SmallInt, 0)
            End Get
        End Property

        Public Shared ReadOnly Property Userid() As OleDbParameter
            Get
                Return New OleDbParameter("@Userid", OleDbType.VarChar, 20)
            End Get
        End Property

        Public Shared ReadOnly Property Total_onhand() As OleDbParameter
            Get
                Return New OleDbParameter("@Total_onhand", OleDbType.Integer, 0)
            End Get
        End Property

        Public Shared ReadOnly Property Imprimir_etiq() As OleDbParameter
            Get
                Return New OleDbParameter("@Imprimir_etiq", OleDbType.Integer, 0)
            End Get
        End Property

        Public Shared ReadOnly Property Asumir_emp() As OleDbParameter
            Get
                Return New OleDbParameter("@Asumir_emp", OleDbType.Integer, 0)
            End Get
        End Property

        Public Shared ReadOnly Property Sugerir_compra() As OleDbParameter
            Get
                Return New OleDbParameter("@Sugerir_compra", OleDbType.Integer, 0)
            End Get
        End Property

        Public Shared ReadOnly Property Referencia() As OleDbParameter
            Get
                Return New OleDbParameter("@Referencia", OleDbType.VarChar, 20)
            End Get
        End Property

        Public Shared ReadOnly Property Aplicar_Vcmto() As OleDbParameter
            Get
                Return New OleDbParameter("@Aplicar_Vcmto", OleDbType.Integer, 0)
            End Get
        End Property

        Public Shared ReadOnly Property Sustancias() As OleDbParameter
            Get
                Return New OleDbParameter("@Sustancias", OleDbType.VarChar, 300)
            End Get
        End Property

        Public Shared ReadOnly Property prd_controlado() As OleDbParameter
            Get
                Return New OleDbParameter("@prd_controlado", OleDbType.Integer, 0)
            End Get
        End Property
        Public Shared ReadOnly Property item_update() As OleDbParameter
            Get
                Return New OleDbParameter("@item_update", OleDbType.DBTimeStamp, 0)
            End Get
        End Property
        Public Shared ReadOnly Property item_comm() As OleDbParameter
            Get
                Return New OleDbParameter("@item_comm", OleDbType.Integer, 0)
            End Get
        End Property
        Public Shared ReadOnly Property item_type() As OleDbParameter
            Get
                Return New OleDbParameter("@item_type", OleDbType.Integer, 0)
            End Get
        End Property
    End Class
	#End Region	

	#Region "ColumnNames"
	Public class ColumnNames
		
        Public Const Item_code As String = "item_code"
        Public Const Item_serie As String = "item_serie"
        Public Const Item_name As String = "item_name"
        Public Const Abreviada As String = "abreviada"
        Public Const Unit_code As String = "unit_code"
        Public Const Prov_code As String = "prov_code"
        Public Const Brand_code As String = "brand_code"
        Public Const Sgroup_code As String = "sgroup_code"
        Public Const Group_code As String = "group_code"
        Public Const Purch_unit As String = "purch_unit"
        Public Const Taxable As String = "taxable"
        Public Const Item_status As String = "item_status"
        Public Const Item_created As String = "item_created"
        Public Const Item_serial As String = "item_serial"
        Public Const Userid As String = "userid"
        Public Const Total_onhand As String = "total_onhand"
        Public Const Imprimir_etiq As String = "imprimir_etiq"
        Public Const Asumir_emp As String = "asumir_emp"
        Public Const Sugerir_compra As String = "sugerir_compra"
        Public Const Referencia As String = "Referencia"
        Public Const Aplicar_Vcmto As String = "Aplicar_Vcmto"
        Public Const Sustancias As String = "sustancias"
        Public Const prd_controlado As String = "prd_controlado"
        Public Const item_update As String = "item_update"
        Public Const item_comm As String = "item_comm"
        Public Const item_type As String = "item_type"

		Shared Public Function ToPropertyName(ByVal columnName As String) As String

			If ht Is Nothing Then
			
				ht = new Hashtable
				
				ht(Item_code) = _ivitemm.PropertyNames.Item_code
				ht(Item_serie) = _ivitemm.PropertyNames.Item_serie
				ht(Item_name) = _ivitemm.PropertyNames.Item_name
				ht(Abreviada) = _ivitemm.PropertyNames.Abreviada
				ht(Unit_code) = _ivitemm.PropertyNames.Unit_code
				ht(Prov_code) = _ivitemm.PropertyNames.Prov_code
				ht(Brand_code) = _ivitemm.PropertyNames.Brand_code
				ht(Sgroup_code) = _ivitemm.PropertyNames.Sgroup_code
				ht(Group_code) = _ivitemm.PropertyNames.Group_code
				ht(Purch_unit) = _ivitemm.PropertyNames.Purch_unit
				ht(Taxable) = _ivitemm.PropertyNames.Taxable
				ht(Item_status) = _ivitemm.PropertyNames.Item_status
				ht(Item_created) = _ivitemm.PropertyNames.Item_created
				ht(Item_serial) = _ivitemm.PropertyNames.Item_serial
				ht(Userid) = _ivitemm.PropertyNames.Userid
				ht(Total_onhand) = _ivitemm.PropertyNames.Total_onhand
				ht(Imprimir_etiq) = _ivitemm.PropertyNames.Imprimir_etiq
				ht(Asumir_emp) = _ivitemm.PropertyNames.Asumir_emp
				ht(Sugerir_compra) = _ivitemm.PropertyNames.Sugerir_compra
				ht(Referencia) = _ivitemm.PropertyNames.Referencia
				ht(Aplicar_Vcmto) = _ivitemm.PropertyNames.Aplicar_Vcmto
                ht(Sustancias) = _ivitemm.PropertyNames.Sustancias
                ht(prd_controlado) = _ivitemm.PropertyNames.prd_controlado
                ht(item_update) = _ivitemm.PropertyNames.item_update
                ht(item_comm) = _ivitemm.PropertyNames.item_comm
                ht(item_type) = _ivitemm.PropertyNames.item_type

			End If
			
			Return CType(ht(columnName), String)
			
		End Function
		
		Shared Private ht  As Hashtable = Nothing		 
	End Class
	#End Region	
	
	#Region "PropertyNames"
	Public class PropertyNames
		
        Public Const Item_code As String = "Item_code"
        Public Const Item_serie As String = "Item_serie"
        Public Const Item_name As String = "Item_name"
        Public Const Abreviada As String = "Abreviada"
        Public Const Unit_code As String = "Unit_code"
        Public Const Prov_code As String = "Prov_code"
        Public Const Brand_code As String = "Brand_code"
        Public Const Sgroup_code As String = "Sgroup_code"
        Public Const Group_code As String = "Group_code"
        Public Const Purch_unit As String = "Purch_unit"
        Public Const Taxable As String = "Taxable"
        Public Const Item_status As String = "Item_status"
        Public Const Item_created As String = "Item_created"
        Public Const Item_serial As String = "Item_serial"
        Public Const Userid As String = "Userid"
        Public Const Total_onhand As String = "Total_onhand"
        Public Const Imprimir_etiq As String = "Imprimir_etiq"
        Public Const Asumir_emp As String = "Asumir_emp"
        Public Const Sugerir_compra As String = "Sugerir_compra"
        Public Const Referencia As String = "Referencia"
        Public Const Aplicar_Vcmto As String = "Aplicar_Vcmto"
        Public Const Sustancias As String = "Sustancias"
        Public Const Prd_controlado As String = "Prd_controlado"
        Public Const Item_update As String = "Item_update"
        Public Const Item_comm As String = "Item_comm"
        Public Const Item_type As String = "Item_type"

		Shared Public Function ToColumnName(ByVal propertyName As String) As String

			If ht Is Nothing Then
			
				ht = new Hashtable
				
				ht(Item_code) = _ivitemm.ColumnNames.Item_code
				ht(Item_serie) = _ivitemm.ColumnNames.Item_serie
				ht(Item_name) = _ivitemm.ColumnNames.Item_name
				ht(Abreviada) = _ivitemm.ColumnNames.Abreviada
				ht(Unit_code) = _ivitemm.ColumnNames.Unit_code
				ht(Prov_code) = _ivitemm.ColumnNames.Prov_code
				ht(Brand_code) = _ivitemm.ColumnNames.Brand_code
				ht(Sgroup_code) = _ivitemm.ColumnNames.Sgroup_code
				ht(Group_code) = _ivitemm.ColumnNames.Group_code
				ht(Purch_unit) = _ivitemm.ColumnNames.Purch_unit
				ht(Taxable) = _ivitemm.ColumnNames.Taxable
				ht(Item_status) = _ivitemm.ColumnNames.Item_status
				ht(Item_created) = _ivitemm.ColumnNames.Item_created
				ht(Item_serial) = _ivitemm.ColumnNames.Item_serial
				ht(Userid) = _ivitemm.ColumnNames.Userid
				ht(Total_onhand) = _ivitemm.ColumnNames.Total_onhand
				ht(Imprimir_etiq) = _ivitemm.ColumnNames.Imprimir_etiq
				ht(Asumir_emp) = _ivitemm.ColumnNames.Asumir_emp
				ht(Sugerir_compra) = _ivitemm.ColumnNames.Sugerir_compra
				ht(Referencia) = _ivitemm.ColumnNames.Referencia
				ht(Aplicar_Vcmto) = _ivitemm.ColumnNames.Aplicar_Vcmto
                ht(Sustancias) = _ivitemm.ColumnNames.Sustancias
                ht(Prd_controlado) = _ivitemm.ColumnNames.prd_controlado
                ht(Item_update) = _ivitemm.ColumnNames.item_update
                ht(Item_comm) = _ivitemm.ColumnNames.item_comm
                ht(Item_type) = _ivitemm.ColumnNames.item_type

			End If
			
			Return CType(ht(propertyName), String)
			
		End Function
		
		Shared Private ht  As Hashtable = Nothing
		
	End Class
	#End Region	
	
	#Region "StringPropertyNames"
	Public class StringPropertyNames
		
        Public Const Item_code As String = "s_Item_code"
        Public Const Item_serie As String = "s_Item_serie"
        Public Const Item_name As String = "s_Item_name"
        Public Const Abreviada As String = "s_Abreviada"
        Public Const Unit_code As String = "s_Unit_code"
        Public Const Prov_code As String = "s_Prov_code"
        Public Const Brand_code As String = "s_Brand_code"
        Public Const Sgroup_code As String = "s_Sgroup_code"
        Public Const Group_code As String = "s_Group_code"
        Public Const Purch_unit As String = "s_Purch_unit"
        Public Const Taxable As String = "s_Taxable"
        Public Const Item_status As String = "s_Item_status"
        Public Const Item_created As String = "s_Item_created"
        Public Const Item_serial As String = "s_Item_serial"
        Public Const Userid As String = "s_Userid"
        Public Const Total_onhand As String = "s_Total_onhand"
        Public Const Imprimir_etiq As String = "s_Imprimir_etiq"
        Public Const Asumir_emp As String = "s_Asumir_emp"
        Public Const Sugerir_compra As String = "s_Sugerir_compra"
        Public Const Referencia As String = "s_Referencia"
        Public Const Aplicar_Vcmto As String = "s_Aplicar_Vcmto"
        Public Const Sustancias As String = "s_Sustancias"
        Public Const Prd_controlado As String = "s_Prd_controlado"
        Public Const Item_update As String = "s_Item_update"
        Public Const Item_comm As String = "s_Item_comm"
        Public Const Item_type As String = "s_Item_type"

	End Class
	#End Region		
	
	#Region "Properties" 
		Public Overridable Property Item_code As String
			Get
				Return MyBase.GetString(ColumnNames.Item_code)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.Item_code, Value)
			End Set
		End Property

		Public Overridable Property Item_serie As String
			Get
				Return MyBase.GetString(ColumnNames.Item_serie)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.Item_serie, Value)
			End Set
		End Property

		Public Overridable Property Item_name As String
			Get
				Return MyBase.GetString(ColumnNames.Item_name)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.Item_name, Value)
			End Set
		End Property

		Public Overridable Property Abreviada As String
			Get
				Return MyBase.GetString(ColumnNames.Abreviada)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.Abreviada, Value)
			End Set
		End Property

		Public Overridable Property Unit_code As String
			Get
				Return MyBase.GetString(ColumnNames.Unit_code)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.Unit_code, Value)
			End Set
		End Property

		Public Overridable Property Prov_code As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.Prov_code)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.Prov_code, Value)
			End Set
		End Property

		Public Overridable Property Brand_code As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.Brand_code)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.Brand_code, Value)
			End Set
		End Property

		Public Overridable Property Sgroup_code As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.Sgroup_code)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.Sgroup_code, Value)
			End Set
		End Property

		Public Overridable Property Group_code As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.Group_code)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.Group_code, Value)
			End Set
		End Property

		Public Overridable Property Purch_unit As String
			Get
				Return MyBase.GetString(ColumnNames.Purch_unit)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.Purch_unit, Value)
			End Set
		End Property

		Public Overridable Property Taxable As Short
			Get
				Return MyBase.GetShort(ColumnNames.Taxable)
			End Get
			Set(ByVal Value As Short)
				MyBase.SetShort(ColumnNames.Taxable, Value)
			End Set
		End Property

		Public Overridable Property Item_status As String
			Get
				Return MyBase.GetString(ColumnNames.Item_status)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.Item_status, Value)
			End Set
		End Property

		Public Overridable Property Item_created As DateTime
			Get
				Return MyBase.GetDateTime(ColumnNames.Item_created)
			End Get
			Set(ByVal Value As DateTime)
				MyBase.SetDateTime(ColumnNames.Item_created, Value)
			End Set
		End Property

		Public Overridable Property Item_serial As Short
			Get
				Return MyBase.GetShort(ColumnNames.Item_serial)
			End Get
			Set(ByVal Value As Short)
				MyBase.SetShort(ColumnNames.Item_serial, Value)
			End Set
		End Property

		Public Overridable Property Userid As String
			Get
				Return MyBase.GetString(ColumnNames.Userid)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.Userid, Value)
			End Set
		End Property

		Public Overridable Property Total_onhand As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.Total_onhand)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.Total_onhand, Value)
			End Set
		End Property

		Public Overridable Property Imprimir_etiq As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.Imprimir_etiq)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.Imprimir_etiq, Value)
			End Set
		End Property

		Public Overridable Property Asumir_emp As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.Asumir_emp)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.Asumir_emp, Value)
			End Set
		End Property

		Public Overridable Property Sugerir_compra As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.Sugerir_compra)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.Sugerir_compra, Value)
			End Set
		End Property

		Public Overridable Property Referencia As String
			Get
				Return MyBase.GetString(ColumnNames.Referencia)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.Referencia, Value)
			End Set
		End Property

		Public Overridable Property Aplicar_Vcmto As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.Aplicar_Vcmto)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.Aplicar_Vcmto, Value)
			End Set
		End Property

		Public Overridable Property Sustancias As String
			Get
				Return MyBase.GetString(ColumnNames.Sustancias)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.Sustancias, Value)
			End Set
    End Property

    Public Overridable Property Prd_controlado() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.prd_controlado)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.prd_controlado, Value)
        End Set
    End Property
    Public Overridable Property Item_update() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.item_update)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.item_update, Value)
        End Set
    End Property
    Public Overridable Property Item_comm() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.item_comm)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.item_comm, Value)
        End Set
    End Property
    Public Overridable Property Item_type() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.item_type)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.item_type, Value)
        End Set
    End Property

#End Region
	
	#Region "String Properties" 

		Public Overridable Property s_Item_code As String
			Get
				If Me.IsColumnNull(ColumnNames.Item_code) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.Item_code)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Item_code)
				Else
					Me.Item_code = MyBase.SetStringAsString(ColumnNames.Item_code, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Item_serie As String
			Get
				If Me.IsColumnNull(ColumnNames.Item_serie) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.Item_serie)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Item_serie)
				Else
					Me.Item_serie = MyBase.SetStringAsString(ColumnNames.Item_serie, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Item_name As String
			Get
				If Me.IsColumnNull(ColumnNames.Item_name) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.Item_name)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Item_name)
				Else
					Me.Item_name = MyBase.SetStringAsString(ColumnNames.Item_name, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Abreviada As String
			Get
				If Me.IsColumnNull(ColumnNames.Abreviada) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.Abreviada)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Abreviada)
				Else
					Me.Abreviada = MyBase.SetStringAsString(ColumnNames.Abreviada, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Unit_code As String
			Get
				If Me.IsColumnNull(ColumnNames.Unit_code) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.Unit_code)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Unit_code)
				Else
					Me.Unit_code = MyBase.SetStringAsString(ColumnNames.Unit_code, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Prov_code As String
			Get
				If Me.IsColumnNull(ColumnNames.Prov_code) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Prov_code)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Prov_code)
				Else
					Me.Prov_code = MyBase.SetIntegerAsString(ColumnNames.Prov_code, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Brand_code As String
			Get
				If Me.IsColumnNull(ColumnNames.Brand_code) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Brand_code)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Brand_code)
				Else
					Me.Brand_code = MyBase.SetIntegerAsString(ColumnNames.Brand_code, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Sgroup_code As String
			Get
				If Me.IsColumnNull(ColumnNames.Sgroup_code) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Sgroup_code)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Sgroup_code)
				Else
					Me.Sgroup_code = MyBase.SetIntegerAsString(ColumnNames.Sgroup_code, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Group_code As String
			Get
				If Me.IsColumnNull(ColumnNames.Group_code) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Group_code)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Group_code)
				Else
					Me.Group_code = MyBase.SetIntegerAsString(ColumnNames.Group_code, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Purch_unit As String
			Get
				If Me.IsColumnNull(ColumnNames.Purch_unit) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.Purch_unit)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Purch_unit)
				Else
					Me.Purch_unit = MyBase.SetStringAsString(ColumnNames.Purch_unit, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Taxable As String
			Get
				If Me.IsColumnNull(ColumnNames.Taxable) Then
					Return String.Empty
				Else
					Return MyBase.GetShortAsString(ColumnNames.Taxable)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Taxable)
				Else
					Me.Taxable = MyBase.SetShortAsString(ColumnNames.Taxable, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Item_status As String
			Get
				If Me.IsColumnNull(ColumnNames.Item_status) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.Item_status)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Item_status)
				Else
					Me.Item_status = MyBase.SetStringAsString(ColumnNames.Item_status, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Item_created As String
			Get
				If Me.IsColumnNull(ColumnNames.Item_created) Then
					Return String.Empty
				Else
					Return MyBase.GetDateTimeAsString(ColumnNames.Item_created)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Item_created)
				Else
					Me.Item_created = MyBase.SetDateTimeAsString(ColumnNames.Item_created, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Item_serial As String
			Get
				If Me.IsColumnNull(ColumnNames.Item_serial) Then
					Return String.Empty
				Else
					Return MyBase.GetShortAsString(ColumnNames.Item_serial)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Item_serial)
				Else
					Me.Item_serial = MyBase.SetShortAsString(ColumnNames.Item_serial, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Userid As String
			Get
				If Me.IsColumnNull(ColumnNames.Userid) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.Userid)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Userid)
				Else
					Me.Userid = MyBase.SetStringAsString(ColumnNames.Userid, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Total_onhand As String
			Get
				If Me.IsColumnNull(ColumnNames.Total_onhand) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Total_onhand)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Total_onhand)
				Else
					Me.Total_onhand = MyBase.SetIntegerAsString(ColumnNames.Total_onhand, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Imprimir_etiq As String
			Get
				If Me.IsColumnNull(ColumnNames.Imprimir_etiq) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Imprimir_etiq)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Imprimir_etiq)
				Else
					Me.Imprimir_etiq = MyBase.SetIntegerAsString(ColumnNames.Imprimir_etiq, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Asumir_emp As String
			Get
				If Me.IsColumnNull(ColumnNames.Asumir_emp) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Asumir_emp)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Asumir_emp)
				Else
					Me.Asumir_emp = MyBase.SetIntegerAsString(ColumnNames.Asumir_emp, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Sugerir_compra As String
			Get
				If Me.IsColumnNull(ColumnNames.Sugerir_compra) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Sugerir_compra)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Sugerir_compra)
				Else
					Me.Sugerir_compra = MyBase.SetIntegerAsString(ColumnNames.Sugerir_compra, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Referencia As String
			Get
				If Me.IsColumnNull(ColumnNames.Referencia) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.Referencia)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Referencia)
				Else
					Me.Referencia = MyBase.SetStringAsString(ColumnNames.Referencia, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Aplicar_Vcmto As String
			Get
				If Me.IsColumnNull(ColumnNames.Aplicar_Vcmto) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Aplicar_Vcmto)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Aplicar_Vcmto)
				Else
					Me.Aplicar_Vcmto = MyBase.SetIntegerAsString(ColumnNames.Aplicar_Vcmto, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Sustancias As String
			Get
				If Me.IsColumnNull(ColumnNames.Sustancias) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.Sustancias)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Sustancias)
				Else
					Me.Sustancias = MyBase.SetStringAsString(ColumnNames.Sustancias, Value)
				End If
			End Set
		End Property

    Public Overridable Property s_Prd_controlado() As String
        Get
            If Me.IsColumnNull(ColumnNames.prd_controlado) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.prd_controlado)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.prd_controlado)
            Else
                Me.Prd_controlado = MyBase.SetIntegerAsString(ColumnNames.prd_controlado, Value)
            End If
        End Set
    End Property
    Public Overridable Property s_Item_update() As String
        Get
            If Me.IsColumnNull(ColumnNames.item_update) Then
                Return String.Empty
            Else
                Return MyBase.GetDateTimeAsString(ColumnNames.item_update)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.item_update)
            Else
                Me.Item_update = MyBase.SetDateTimeAsString(ColumnNames.item_update, Value)
            End If
        End Set
    End Property
    Public Overridable Property s_Item_comm() As String
        Get
            If Me.IsColumnNull(ColumnNames.item_comm) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.item_comm)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.item_comm)
            Else
                Me.Item_comm = MyBase.SetIntegerAsString(ColumnNames.item_comm, Value)
            End If
        End Set
    End Property
    Public Overridable Property s_Item_type() As String
        Get
            If Me.IsColumnNull(ColumnNames.item_type) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.item_type)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.item_type)
            Else
                Me.Item_type = MyBase.SetIntegerAsString(ColumnNames.item_type, Value)
            End If
        End Set
    End Property


#End Region

	#Region "Where Clause"
    Public Class WhereClause

        Public Sub New(ByVal entity As BusinessEntity)
            Me._entity = entity
        End Sub
		
		Public ReadOnly Property TearOff As TearOffWhereParameter
			Get
				If _tearOff Is Nothing Then
					_tearOff = new TearOffWhereParameter(Me)
				End If

				Return _tearOff
			End Get
		End Property

		#Region "TearOff's"
		Public class TearOffWhereParameter

			Public Sub New(ByVal clause As WhereClause)
				Me._clause = clause
			End Sub
		
	
			Public ReadOnly Property Item_code() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Item_code, Parameters.Item_code)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Item_serie() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Item_serie, Parameters.Item_serie)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Item_name() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Item_name, Parameters.Item_name)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Abreviada() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Abreviada, Parameters.Abreviada)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Unit_code() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Unit_code, Parameters.Unit_code)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Prov_code() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Prov_code, Parameters.Prov_code)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Brand_code() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Brand_code, Parameters.Brand_code)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Sgroup_code() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Sgroup_code, Parameters.Sgroup_code)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Group_code() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Group_code, Parameters.Group_code)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Purch_unit() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Purch_unit, Parameters.Purch_unit)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Taxable() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Taxable, Parameters.Taxable)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Item_status() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Item_status, Parameters.Item_status)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Item_created() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Item_created, Parameters.Item_created)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Item_serial() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Item_serial, Parameters.Item_serial)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Userid() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Userid, Parameters.Userid)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Total_onhand() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Total_onhand, Parameters.Total_onhand)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Imprimir_etiq() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Imprimir_etiq, Parameters.Imprimir_etiq)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Asumir_emp() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Asumir_emp, Parameters.Asumir_emp)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Sugerir_compra() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Sugerir_compra, Parameters.Sugerir_compra)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Referencia() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Referencia, Parameters.Referencia)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Aplicar_Vcmto() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Aplicar_Vcmto, Parameters.Aplicar_Vcmto)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

            Public ReadOnly Property Sustancias() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.Sustancias, Parameters.Sustancias)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property prd_controlado() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.prd_controlado, Parameters.prd_controlado)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property item_update() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.item_update, Parameters.item_update)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property item_comm() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.item_comm, Parameters.item_comm)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property item_type() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.item_type, Parameters.item_type)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Private _clause As WhereClause
        End Class
		#End Region	

		Public ReadOnly Property Item_code() As WhereParameter 
			Get
				If _Item_code_W Is Nothing Then
					_Item_code_W = TearOff.Item_code
				End If
				Return _Item_code_W
			End Get
		End Property

		Public ReadOnly Property Item_serie() As WhereParameter 
			Get
				If _Item_serie_W Is Nothing Then
					_Item_serie_W = TearOff.Item_serie
				End If
				Return _Item_serie_W
			End Get
		End Property

		Public ReadOnly Property Item_name() As WhereParameter 
			Get
				If _Item_name_W Is Nothing Then
					_Item_name_W = TearOff.Item_name
				End If
				Return _Item_name_W
			End Get
		End Property

		Public ReadOnly Property Abreviada() As WhereParameter 
			Get
				If _Abreviada_W Is Nothing Then
					_Abreviada_W = TearOff.Abreviada
				End If
				Return _Abreviada_W
			End Get
		End Property

		Public ReadOnly Property Unit_code() As WhereParameter 
			Get
				If _Unit_code_W Is Nothing Then
					_Unit_code_W = TearOff.Unit_code
				End If
				Return _Unit_code_W
			End Get
		End Property

		Public ReadOnly Property Prov_code() As WhereParameter 
			Get
				If _Prov_code_W Is Nothing Then
					_Prov_code_W = TearOff.Prov_code
				End If
				Return _Prov_code_W
			End Get
		End Property

		Public ReadOnly Property Brand_code() As WhereParameter 
			Get
				If _Brand_code_W Is Nothing Then
					_Brand_code_W = TearOff.Brand_code
				End If
				Return _Brand_code_W
			End Get
		End Property

		Public ReadOnly Property Sgroup_code() As WhereParameter 
			Get
				If _Sgroup_code_W Is Nothing Then
					_Sgroup_code_W = TearOff.Sgroup_code
				End If
				Return _Sgroup_code_W
			End Get
		End Property

		Public ReadOnly Property Group_code() As WhereParameter 
			Get
				If _Group_code_W Is Nothing Then
					_Group_code_W = TearOff.Group_code
				End If
				Return _Group_code_W
			End Get
		End Property

		Public ReadOnly Property Purch_unit() As WhereParameter 
			Get
				If _Purch_unit_W Is Nothing Then
					_Purch_unit_W = TearOff.Purch_unit
				End If
				Return _Purch_unit_W
			End Get
		End Property

		Public ReadOnly Property Taxable() As WhereParameter 
			Get
				If _Taxable_W Is Nothing Then
					_Taxable_W = TearOff.Taxable
				End If
				Return _Taxable_W
			End Get
		End Property

		Public ReadOnly Property Item_status() As WhereParameter 
			Get
				If _Item_status_W Is Nothing Then
					_Item_status_W = TearOff.Item_status
				End If
				Return _Item_status_W
			End Get
		End Property

		Public ReadOnly Property Item_created() As WhereParameter 
			Get
				If _Item_created_W Is Nothing Then
					_Item_created_W = TearOff.Item_created
				End If
				Return _Item_created_W
			End Get
		End Property

		Public ReadOnly Property Item_serial() As WhereParameter 
			Get
				If _Item_serial_W Is Nothing Then
					_Item_serial_W = TearOff.Item_serial
				End If
				Return _Item_serial_W
			End Get
		End Property

		Public ReadOnly Property Userid() As WhereParameter 
			Get
				If _Userid_W Is Nothing Then
					_Userid_W = TearOff.Userid
				End If
				Return _Userid_W
			End Get
		End Property

		Public ReadOnly Property Total_onhand() As WhereParameter 
			Get
				If _Total_onhand_W Is Nothing Then
					_Total_onhand_W = TearOff.Total_onhand
				End If
				Return _Total_onhand_W
			End Get
		End Property

		Public ReadOnly Property Imprimir_etiq() As WhereParameter 
			Get
				If _Imprimir_etiq_W Is Nothing Then
					_Imprimir_etiq_W = TearOff.Imprimir_etiq
				End If
				Return _Imprimir_etiq_W
			End Get
		End Property

		Public ReadOnly Property Asumir_emp() As WhereParameter 
			Get
				If _Asumir_emp_W Is Nothing Then
					_Asumir_emp_W = TearOff.Asumir_emp
				End If
				Return _Asumir_emp_W
			End Get
		End Property

		Public ReadOnly Property Sugerir_compra() As WhereParameter 
			Get
				If _Sugerir_compra_W Is Nothing Then
					_Sugerir_compra_W = TearOff.Sugerir_compra
				End If
				Return _Sugerir_compra_W
			End Get
		End Property

		Public ReadOnly Property Referencia() As WhereParameter 
			Get
				If _Referencia_W Is Nothing Then
					_Referencia_W = TearOff.Referencia
				End If
				Return _Referencia_W
			End Get
		End Property

		Public ReadOnly Property Aplicar_Vcmto() As WhereParameter 
			Get
				If _Aplicar_Vcmto_W Is Nothing Then
					_Aplicar_Vcmto_W = TearOff.Aplicar_Vcmto
				End If
				Return _Aplicar_Vcmto_W
			End Get
		End Property

		Public ReadOnly Property Sustancias() As WhereParameter 
			Get
				If _Sustancias_W Is Nothing Then
					_Sustancias_W = TearOff.Sustancias
				End If
				Return _Sustancias_W
			End Get
        End Property
        Public ReadOnly Property Prd_controlado() As WhereParameter
            Get
                If _Prd_controlado_W Is Nothing Then
                    _Prd_controlado_W = TearOff.prd_controlado
                End If
                Return _Prd_controlado_W
            End Get
        End Property
        Public ReadOnly Property Item_update() As WhereParameter
            Get
                If _item_update_W Is Nothing Then
                    _item_update_W = TearOff.item_update
                End If
                Return _item_update_W
            End Get
        End Property
        Public ReadOnly Property Item_comm() As WhereParameter
            Get
                If _item_comm_W Is Nothing Then
                    _Item_comm_W = TearOff.item_comm
                End If
                Return _Item_comm_W
            End Get
        End Property
        Public ReadOnly Property Item_type() As WhereParameter
            Get
                If _Item_type_W Is Nothing Then
                    _Item_type_W = TearOff.item_type
                End If
                Return _Item_type_W
            End Get
        End Property


        Private _Item_code_W As WhereParameter = Nothing
        Private _Item_serie_W As WhereParameter = Nothing
        Private _Item_name_W As WhereParameter = Nothing
        Private _Abreviada_W As WhereParameter = Nothing
        Private _Unit_code_W As WhereParameter = Nothing
        Private _Prov_code_W As WhereParameter = Nothing
        Private _Brand_code_W As WhereParameter = Nothing
        Private _Sgroup_code_W As WhereParameter = Nothing
        Private _Group_code_W As WhereParameter = Nothing
        Private _Purch_unit_W As WhereParameter = Nothing
        Private _Taxable_W As WhereParameter = Nothing
        Private _Item_status_W As WhereParameter = Nothing
        Private _Item_created_W As WhereParameter = Nothing
        Private _Item_serial_W As WhereParameter = Nothing
        Private _Userid_W As WhereParameter = Nothing
        Private _Total_onhand_W As WhereParameter = Nothing
        Private _Imprimir_etiq_W As WhereParameter = Nothing
        Private _Asumir_emp_W As WhereParameter = Nothing
        Private _Sugerir_compra_W As WhereParameter = Nothing
        Private _Referencia_W As WhereParameter = Nothing
        Private _Aplicar_Vcmto_W As WhereParameter = Nothing
        Private _Sustancias_W As WhereParameter = Nothing
        Private _Prd_controlado_W As WhereParameter = Nothing
        Private _Item_update_W As WhereParameter = Nothing
        Private _Item_comm_W As WhereParameter = Nothing
        Private _Item_type_W As WhereParameter = Nothing

        Public Sub WhereClauseReset()

            _Item_code_W = Nothing
            _Item_serie_W = Nothing
            _Item_name_W = Nothing
            _Abreviada_W = Nothing
            _Unit_code_W = Nothing
            _Prov_code_W = Nothing
            _Brand_code_W = Nothing
            _Sgroup_code_W = Nothing
            _Group_code_W = Nothing
            _Purch_unit_W = Nothing
            _Taxable_W = Nothing
            _Item_status_W = Nothing
            _Item_created_W = Nothing
            _Item_serial_W = Nothing
            _Userid_W = Nothing
            _Total_onhand_W = Nothing
            _Imprimir_etiq_W = Nothing
            _Asumir_emp_W = Nothing
            _Sugerir_compra_W = Nothing
            _Referencia_W = Nothing
            _Aplicar_Vcmto_W = Nothing
            _Sustancias_W = Nothing
            _Prd_controlado_W = Nothing
            _Item_update_W = Nothing
            _Item_comm_W = Nothing
            _Item_type_W = Nothing
            Me._entity.Query.FlushWhereParameters()

        End Sub

        Private _entity As BusinessEntity
        Private _tearOff As TearOffWhereParameter
    End Class

	Public ReadOnly Property Where() As WhereClause
		Get
			If _whereClause Is Nothing Then
				_whereClause = New WhereClause(Me)
			End If
	
			Return _whereClause
		End Get
	End Property
	
	Private _whereClause As WhereClause = Nothing	
#End Region	

#Region "Aggregate Clause"
    Public Class AggregateClause

        Public Sub New(ByVal entity As BusinessEntity)
            Me._entity = entity
        End Sub
		
		Public ReadOnly Property TearOff As TearOffAggregateParameter
			Get
				If _tearOff Is Nothing Then
					_tearOff = new TearOffAggregateParameter(Me)
				End If

				Return _tearOff
			End Get
		End Property

		#Region "AggregateParameter TearOff's"
		Public class TearOffAggregateParameter

			Public Sub New(ByVal clause As AggregateClause)
				Me._clause = clause
			End Sub
		
	
		Public ReadOnly Property Item_code() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Item_code, Parameters.Item_code)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Item_serie() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Item_serie, Parameters.Item_serie)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Item_name() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Item_name, Parameters.Item_name)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Abreviada() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Abreviada, Parameters.Abreviada)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Unit_code() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Unit_code, Parameters.Unit_code)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Prov_code() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Prov_code, Parameters.Prov_code)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Brand_code() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Brand_code, Parameters.Brand_code)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Sgroup_code() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Sgroup_code, Parameters.Sgroup_code)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Group_code() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Group_code, Parameters.Group_code)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Purch_unit() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Purch_unit, Parameters.Purch_unit)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Taxable() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Taxable, Parameters.Taxable)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Item_status() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Item_status, Parameters.Item_status)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Item_created() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Item_created, Parameters.Item_created)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Item_serial() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Item_serial, Parameters.Item_serial)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Userid() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Userid, Parameters.Userid)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Total_onhand() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Total_onhand, Parameters.Total_onhand)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Imprimir_etiq() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Imprimir_etiq, Parameters.Imprimir_etiq)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Asumir_emp() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Asumir_emp, Parameters.Asumir_emp)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Sugerir_compra() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Sugerir_compra, Parameters.Sugerir_compra)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Referencia() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Referencia, Parameters.Referencia)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Aplicar_Vcmto() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Aplicar_Vcmto, Parameters.Aplicar_Vcmto)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Sustancias() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Sustancias, Parameters.Sustancias)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property
            Public ReadOnly Property Prd_controlado() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.prd_controlado, Parameters.prd_controlado)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property Item_update() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.item_update, Parameters.item_update)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property Item_comm() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.item_comm, Parameters.item_comm)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property Item_type() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.item_type, Parameters.item_type)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property


            Private _clause As AggregateClause
        End Class
		#End Region	

		Public ReadOnly Property Item_code() As AggregateParameter 
			Get
				If _Item_code_W Is Nothing Then
					_Item_code_W = TearOff.Item_code
				End If
				Return _Item_code_W
			End Get
		End Property

		Public ReadOnly Property Item_serie() As AggregateParameter 
			Get
				If _Item_serie_W Is Nothing Then
					_Item_serie_W = TearOff.Item_serie
				End If
				Return _Item_serie_W
			End Get
		End Property

		Public ReadOnly Property Item_name() As AggregateParameter 
			Get
				If _Item_name_W Is Nothing Then
					_Item_name_W = TearOff.Item_name
				End If
				Return _Item_name_W
			End Get
		End Property

		Public ReadOnly Property Abreviada() As AggregateParameter 
			Get
				If _Abreviada_W Is Nothing Then
					_Abreviada_W = TearOff.Abreviada
				End If
				Return _Abreviada_W
			End Get
		End Property

		Public ReadOnly Property Unit_code() As AggregateParameter 
			Get
				If _Unit_code_W Is Nothing Then
					_Unit_code_W = TearOff.Unit_code
				End If
				Return _Unit_code_W
			End Get
		End Property

		Public ReadOnly Property Prov_code() As AggregateParameter 
			Get
				If _Prov_code_W Is Nothing Then
					_Prov_code_W = TearOff.Prov_code
				End If
				Return _Prov_code_W
			End Get
		End Property

		Public ReadOnly Property Brand_code() As AggregateParameter 
			Get
				If _Brand_code_W Is Nothing Then
					_Brand_code_W = TearOff.Brand_code
				End If
				Return _Brand_code_W
			End Get
		End Property

		Public ReadOnly Property Sgroup_code() As AggregateParameter 
			Get
				If _Sgroup_code_W Is Nothing Then
					_Sgroup_code_W = TearOff.Sgroup_code
				End If
				Return _Sgroup_code_W
			End Get
		End Property

		Public ReadOnly Property Group_code() As AggregateParameter 
			Get
				If _Group_code_W Is Nothing Then
					_Group_code_W = TearOff.Group_code
				End If
				Return _Group_code_W
			End Get
		End Property

		Public ReadOnly Property Purch_unit() As AggregateParameter 
			Get
				If _Purch_unit_W Is Nothing Then
					_Purch_unit_W = TearOff.Purch_unit
				End If
				Return _Purch_unit_W
			End Get
		End Property

		Public ReadOnly Property Taxable() As AggregateParameter 
			Get
				If _Taxable_W Is Nothing Then
					_Taxable_W = TearOff.Taxable
				End If
				Return _Taxable_W
			End Get
		End Property

		Public ReadOnly Property Item_status() As AggregateParameter 
			Get
				If _Item_status_W Is Nothing Then
					_Item_status_W = TearOff.Item_status
				End If
				Return _Item_status_W
			End Get
		End Property

		Public ReadOnly Property Item_created() As AggregateParameter 
			Get
				If _Item_created_W Is Nothing Then
					_Item_created_W = TearOff.Item_created
				End If
				Return _Item_created_W
			End Get
		End Property

		Public ReadOnly Property Item_serial() As AggregateParameter 
			Get
				If _Item_serial_W Is Nothing Then
					_Item_serial_W = TearOff.Item_serial
				End If
				Return _Item_serial_W
			End Get
		End Property

		Public ReadOnly Property Userid() As AggregateParameter 
			Get
				If _Userid_W Is Nothing Then
					_Userid_W = TearOff.Userid
				End If
				Return _Userid_W
			End Get
		End Property

		Public ReadOnly Property Total_onhand() As AggregateParameter 
			Get
				If _Total_onhand_W Is Nothing Then
					_Total_onhand_W = TearOff.Total_onhand
				End If
				Return _Total_onhand_W
			End Get
		End Property

		Public ReadOnly Property Imprimir_etiq() As AggregateParameter 
			Get
				If _Imprimir_etiq_W Is Nothing Then
					_Imprimir_etiq_W = TearOff.Imprimir_etiq
				End If
				Return _Imprimir_etiq_W
			End Get
		End Property

		Public ReadOnly Property Asumir_emp() As AggregateParameter 
			Get
				If _Asumir_emp_W Is Nothing Then
					_Asumir_emp_W = TearOff.Asumir_emp
				End If
				Return _Asumir_emp_W
			End Get
		End Property

		Public ReadOnly Property Sugerir_compra() As AggregateParameter 
			Get
				If _Sugerir_compra_W Is Nothing Then
					_Sugerir_compra_W = TearOff.Sugerir_compra
				End If
				Return _Sugerir_compra_W
			End Get
		End Property

		Public ReadOnly Property Referencia() As AggregateParameter 
			Get
				If _Referencia_W Is Nothing Then
					_Referencia_W = TearOff.Referencia
				End If
				Return _Referencia_W
			End Get
		End Property

		Public ReadOnly Property Aplicar_Vcmto() As AggregateParameter 
			Get
				If _Aplicar_Vcmto_W Is Nothing Then
					_Aplicar_Vcmto_W = TearOff.Aplicar_Vcmto
				End If
				Return _Aplicar_Vcmto_W
			End Get
		End Property

		Public ReadOnly Property Sustancias() As AggregateParameter 
			Get
				If _Sustancias_W Is Nothing Then
					_Sustancias_W = TearOff.Sustancias
				End If
				Return _Sustancias_W
			End Get
        End Property

        Public ReadOnly Property prd_controlado() As AggregateParameter
            Get
                If _prd_controlado_W Is Nothing Then
                    _prd_controlado_W = TearOff.prd_controlado
                End If
                Return _prd_controlado_W
            End Get
        End Property
        Public ReadOnly Property item_update() As AggregateParameter
            Get
                If _item_update_W Is Nothing Then
                    _item_update_W = TearOff.item_update
                End If
                Return _item_update_W
            End Get
        End Property

        Public ReadOnly Property item_comm() As AggregateParameter
            Get
                If _item_comm_W Is Nothing Then
                    _item_comm_W = TearOff.item_comm
                End If
                Return _item_comm_W
            End Get
        End Property

        Public ReadOnly Property item_type() As AggregateParameter
            Get
                If _item_type_W Is Nothing Then
                    _item_type_W = TearOff.item_type
                End If
                Return _item_type_W
            End Get
        End Property

        Private _Item_code_W As AggregateParameter = Nothing
        Private _Item_serie_W As AggregateParameter = Nothing
        Private _Item_name_W As AggregateParameter = Nothing
        Private _Abreviada_W As AggregateParameter = Nothing
        Private _Unit_code_W As AggregateParameter = Nothing
        Private _Prov_code_W As AggregateParameter = Nothing
        Private _Brand_code_W As AggregateParameter = Nothing
        Private _Sgroup_code_W As AggregateParameter = Nothing
        Private _Group_code_W As AggregateParameter = Nothing
        Private _Purch_unit_W As AggregateParameter = Nothing
        Private _Taxable_W As AggregateParameter = Nothing
        Private _Item_status_W As AggregateParameter = Nothing
        Private _Item_created_W As AggregateParameter = Nothing
        Private _Item_serial_W As AggregateParameter = Nothing
        Private _Userid_W As AggregateParameter = Nothing
        Private _Total_onhand_W As AggregateParameter = Nothing
        Private _Imprimir_etiq_W As AggregateParameter = Nothing
        Private _Asumir_emp_W As AggregateParameter = Nothing
        Private _Sugerir_compra_W As AggregateParameter = Nothing
        Private _Referencia_W As AggregateParameter = Nothing
        Private _Aplicar_Vcmto_W As AggregateParameter = Nothing
        Private _Sustancias_W As AggregateParameter = Nothing
        Private _Prd_controlado_W As AggregateParameter = Nothing
        Private _Item_update_W As AggregateParameter = Nothing
        Private _Item_comm_W As AggregateParameter = Nothing
        Private _Item_type_W As AggregateParameter = Nothing

        Public Sub AggregateClauseReset()

            _Item_code_W = Nothing
            _Item_serie_W = Nothing
            _Item_name_W = Nothing
            _Abreviada_W = Nothing
            _Unit_code_W = Nothing
            _Prov_code_W = Nothing
            _Brand_code_W = Nothing
            _Sgroup_code_W = Nothing
            _Group_code_W = Nothing
            _Purch_unit_W = Nothing
            _Taxable_W = Nothing
            _Item_status_W = Nothing
            _Item_created_W = Nothing
            _Item_serial_W = Nothing
            _Userid_W = Nothing
            _Total_onhand_W = Nothing
            _Imprimir_etiq_W = Nothing
            _Asumir_emp_W = Nothing
            _Sugerir_compra_W = Nothing
            _Referencia_W = Nothing
            _Aplicar_Vcmto_W = Nothing
            _Sustancias_W = Nothing
            _Prd_controlado_W = Nothing
            _Item_update_W = Nothing
            _Item_comm_W = Nothing
            _Item_type_W = Nothing

            Me._entity.Query.FlushAggregateParameters()

        End Sub

        Private _entity As BusinessEntity
        Private _tearOff As TearOffAggregateParameter
    End Class

	Public ReadOnly Property Aggregate() As AggregateClause
		Get
			If _aggregateClause Is Nothing Then
				_aggregateClause = New AggregateClause(Me)
			End If
	
			Return _aggregateClause
		End Get
	End Property
	
	Private _aggregateClause As AggregateClause = Nothing	
#End Region	

	Protected Overrides Function GetInsertCommand() As IDbCommand
	
		Dim cmd As OleDbCommand = New OleDbCommand
		cmd.CommandType = CommandType.StoredProcedure
		cmd.CommandText = "[" + Me.SchemaStoredProcedure + "proc_ivitemmInsert]" 
	    
		CreateParameters(cmd)
		    
		Return cmd 

  	End Function
	
	Protected Overrides Function GetUpdateCommand() As IDbCommand
	
		Dim cmd As OleDbCommand = New OleDbCommand
		cmd.CommandType = CommandType.StoredProcedure    
		cmd.CommandText = "[" + Me.SchemaStoredProcedure + "proc_ivitemmUpdate]" 
		
		CreateParameters(cmd) 
		    
		Return cmd
	
	End Function	
	
	Protected Overrides Function GetDeleteCommand() As IDbCommand
	
		Dim cmd As OleDbCommand = New OleDbCommand
		cmd.CommandType = CommandType.StoredProcedure    
		cmd.CommandText = "[" + Me.SchemaStoredProcedure + "proc_ivitemmDelete]" 
		
		Dim p As OleDbParameter
		p = cmd.Parameters.Add(Parameters.Item_code)
		p.SourceColumn = ColumnNames.Item_code
		p.SourceVersion = DataRowVersion.Current

  
		Return cmd
	
	End Function	
	
	Private Sub CreateParameters(ByVal cmd As OleDbCommand)
	
		Dim p As OleDbParameter
		p = cmd.Parameters.Add(Parameters.Item_code)
		p.SourceColumn = ColumnNames.Item_code
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Item_serie)
		p.SourceColumn = ColumnNames.Item_serie
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Item_name)
		p.SourceColumn = ColumnNames.Item_name
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Abreviada)
		p.SourceColumn = ColumnNames.Abreviada
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Unit_code)
		p.SourceColumn = ColumnNames.Unit_code
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Prov_code)
		p.SourceColumn = ColumnNames.Prov_code
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Brand_code)
		p.SourceColumn = ColumnNames.Brand_code
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Sgroup_code)
		p.SourceColumn = ColumnNames.Sgroup_code
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Group_code)
		p.SourceColumn = ColumnNames.Group_code
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Purch_unit)
		p.SourceColumn = ColumnNames.Purch_unit
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Taxable)
		p.SourceColumn = ColumnNames.Taxable
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Item_status)
		p.SourceColumn = ColumnNames.Item_status
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Item_created)
		p.SourceColumn = ColumnNames.Item_created
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Item_serial)
		p.SourceColumn = ColumnNames.Item_serial
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Userid)
		p.SourceColumn = ColumnNames.Userid
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Total_onhand)
		p.SourceColumn = ColumnNames.Total_onhand
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Imprimir_etiq)
		p.SourceColumn = ColumnNames.Imprimir_etiq
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Asumir_emp)
		p.SourceColumn = ColumnNames.Asumir_emp
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Sugerir_compra)
		p.SourceColumn = ColumnNames.Sugerir_compra
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Referencia)
		p.SourceColumn = ColumnNames.Referencia
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Aplicar_Vcmto)
		p.SourceColumn = ColumnNames.Aplicar_Vcmto
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Sustancias)
		p.SourceColumn = ColumnNames.Sustancias
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.prd_controlado)
        p.SourceColumn = ColumnNames.prd_controlado
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.item_update)
        p.SourceColumn = ColumnNames.item_update
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.item_comm)
        p.SourceColumn = ColumnNames.item_comm
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.item_type)
        p.SourceColumn = ColumnNames.item_type
        p.SourceVersion = DataRowVersion.Current

    End Sub

End Class

