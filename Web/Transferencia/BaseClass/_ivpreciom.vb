
'===============================================================================
'  Generated From - VbNet_SQL_dOOdads_BusinessEntity.vbgen
' 
'  ** IMPORTANT  **
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class OleDbEntity is in the Architecture directory in "dOOdads".
'  
'  This object is 'MustInherit' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can Override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  Public Class YourObject
'    Inherits _YourObject
'
'  End Class
'
'===============================================================================

' Generated by MyGeneration Version # (1.2.0.7)

Imports System
Imports System.Data
Imports System.Data.OleDb
Imports System.Collections
Imports System.Collections.Specialized

Imports MyGeneration.dOOdads

Public MustInherit Class _ivpreciom
	Inherits OleDbEntity

		Public Sub New() 
			Me.QuerySource = "ivpreciom"
			Me.MappingName = "ivpreciom"
		End Sub

	'=================================================================
	'  Public Overrides Sub AddNew()
	'=================================================================
	'
	'=================================================================
	Public Overrides Sub AddNew()
		MyBase.AddNew()
				
	End Sub
	
	Public Overrides Sub FlushData()
		Me._whereClause = nothing
		Me._aggregateClause = nothing		
		MyBase.FlushData()
	End Sub
	
	
	Public Overrides Function GetAutoKeyColumn() As String
			Return "precio_code"
	End Function
	
	'=================================================================
	'  	Public Function LoadAll() As Boolean
	'=================================================================
	'  Loads all of the records in the database, and sets the currentRow to the first row
	'=================================================================
	Public Function LoadAll() As Boolean
	
		Dim parameters As ListDictionary = Nothing
		
		
    	Return MyBase.LoadFromSql("[" + Me.SchemaStoredProcedure + "proc_ivpreciomLoadAll]", parameters)
		
	End Function

	'=================================================================
	' Public Overridable Function LoadByPrimaryKey()  As Boolean
	'=================================================================
	'  Loads a single row of via the primary key
	'=================================================================
	Public Overridable Function LoadByPrimaryKey(ByVal Precio_code As Integer) As Boolean

		Dim parameters As ListDictionary = New ListDictionary()
		parameters.Add(_ivpreciom.Parameters.Precio_code, Precio_code)

		
		Return MyBase.LoadFromSql("[" + Me.SchemaStoredProcedure + "proc_ivpreciomLoadByPrimaryKey]", parameters)

	End Function

	#Region "Parameters"
	Protected class Parameters 
		
		Public Shared ReadOnly Property Precio_code As OleDbParameter
			Get
				Return New OleDbParameter("@Precio_code", OleDbType.Integer, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Prov_code As OleDbParameter
			Get
				Return New OleDbParameter("@Prov_code", OleDbType.Integer, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Whse_code As OleDbParameter
			Get
				Return New OleDbParameter("@Whse_code", OleDbType.Integer, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Fecha As OleDbParameter
			Get
				Return New OleDbParameter("@Fecha", OleDbType.DBTimeStamp, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Editar_costo As OleDbParameter
			Get
				Return New OleDbParameter("@Editar_costo", OleDbType.Integer, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Editar_precio As OleDbParameter
			Get
				Return New OleDbParameter("@Editar_precio", OleDbType.Integer, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Generar_etiqueta As OleDbParameter
			Get
				Return New OleDbParameter("@Generar_etiqueta", OleDbType.Integer, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Editar_benef As OleDbParameter
			Get
				Return New OleDbParameter("@Editar_benef", OleDbType.Integer, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Beneficio As OleDbParameter
			Get
				Return New OleDbParameter("@Beneficio", OleDbType.Numeric, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Estatus As OleDbParameter
			Get
				Return New OleDbParameter("@Estatus", OleDbType.Integer, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Group_code As OleDbParameter
			Get
				Return New OleDbParameter("@Group_code", OleDbType.Integer, 0)
			End Get
		End Property
		
	End Class
	#End Region	

	#Region "ColumnNames"
	Public class ColumnNames
		
        Public Const Precio_code As String = "precio_code"
        Public Const Prov_code As String = "prov_code"
        Public Const Whse_code As String = "whse_code"
        Public Const Fecha As String = "fecha"
        Public Const Editar_costo As String = "editar_costo"
        Public Const Editar_precio As String = "editar_precio"
        Public Const Generar_etiqueta As String = "generar_etiqueta"
        Public Const Editar_benef As String = "editar_benef"
        Public Const Beneficio As String = "beneficio"
        Public Const Estatus As String = "estatus"
        Public Const Group_code As String = "group_code"

		Shared Public Function ToPropertyName(ByVal columnName As String) As String

			If ht Is Nothing Then
			
				ht = new Hashtable
				
				ht(Precio_code) = _ivpreciom.PropertyNames.Precio_code
				ht(Prov_code) = _ivpreciom.PropertyNames.Prov_code
				ht(Whse_code) = _ivpreciom.PropertyNames.Whse_code
				ht(Fecha) = _ivpreciom.PropertyNames.Fecha
				ht(Editar_costo) = _ivpreciom.PropertyNames.Editar_costo
				ht(Editar_precio) = _ivpreciom.PropertyNames.Editar_precio
				ht(Generar_etiqueta) = _ivpreciom.PropertyNames.Generar_etiqueta
				ht(Editar_benef) = _ivpreciom.PropertyNames.Editar_benef
				ht(Beneficio) = _ivpreciom.PropertyNames.Beneficio
				ht(Estatus) = _ivpreciom.PropertyNames.Estatus
				ht(Group_code) = _ivpreciom.PropertyNames.Group_code

			End If
			
			Return CType(ht(columnName), String)
			
		End Function
		
		Shared Private ht  As Hashtable = Nothing		 
	End Class
	#End Region	
	
	#Region "PropertyNames"
	Public class PropertyNames
		
        Public Const Precio_code As String = "Precio_code"
        Public Const Prov_code As String = "Prov_code"
        Public Const Whse_code As String = "Whse_code"
        Public Const Fecha As String = "Fecha"
        Public Const Editar_costo As String = "Editar_costo"
        Public Const Editar_precio As String = "Editar_precio"
        Public Const Generar_etiqueta As String = "Generar_etiqueta"
        Public Const Editar_benef As String = "Editar_benef"
        Public Const Beneficio As String = "Beneficio"
        Public Const Estatus As String = "Estatus"
        Public Const Group_code As String = "Group_code"

		Shared Public Function ToColumnName(ByVal propertyName As String) As String

			If ht Is Nothing Then
			
				ht = new Hashtable
				
				ht(Precio_code) = _ivpreciom.ColumnNames.Precio_code
				ht(Prov_code) = _ivpreciom.ColumnNames.Prov_code
				ht(Whse_code) = _ivpreciom.ColumnNames.Whse_code
				ht(Fecha) = _ivpreciom.ColumnNames.Fecha
				ht(Editar_costo) = _ivpreciom.ColumnNames.Editar_costo
				ht(Editar_precio) = _ivpreciom.ColumnNames.Editar_precio
				ht(Generar_etiqueta) = _ivpreciom.ColumnNames.Generar_etiqueta
				ht(Editar_benef) = _ivpreciom.ColumnNames.Editar_benef
				ht(Beneficio) = _ivpreciom.ColumnNames.Beneficio
				ht(Estatus) = _ivpreciom.ColumnNames.Estatus
				ht(Group_code) = _ivpreciom.ColumnNames.Group_code

			End If
			
			Return CType(ht(propertyName), String)
			
		End Function
		
		Shared Private ht  As Hashtable = Nothing
		
	End Class
	#End Region	
	
	#Region "StringPropertyNames"
	Public class StringPropertyNames
		
        Public Const Precio_code As String = "s_Precio_code"
        Public Const Prov_code As String = "s_Prov_code"
        Public Const Whse_code As String = "s_Whse_code"
        Public Const Fecha As String = "s_Fecha"
        Public Const Editar_costo As String = "s_Editar_costo"
        Public Const Editar_precio As String = "s_Editar_precio"
        Public Const Generar_etiqueta As String = "s_Generar_etiqueta"
        Public Const Editar_benef As String = "s_Editar_benef"
        Public Const Beneficio As String = "s_Beneficio"
        Public Const Estatus As String = "s_Estatus"
        Public Const Group_code As String = "s_Group_code"

	End Class
	#End Region		
	
	#Region "Properties" 
		Public Overridable Property Precio_code As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.Precio_code)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.Precio_code, Value)
			End Set
		End Property

		Public Overridable Property Prov_code As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.Prov_code)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.Prov_code, Value)
			End Set
		End Property

		Public Overridable Property Whse_code As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.Whse_code)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.Whse_code, Value)
			End Set
		End Property

		Public Overridable Property Fecha As DateTime
			Get
				Return MyBase.GetDateTime(ColumnNames.Fecha)
			End Get
			Set(ByVal Value As DateTime)
				MyBase.SetDateTime(ColumnNames.Fecha, Value)
			End Set
		End Property

		Public Overridable Property Editar_costo As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.Editar_costo)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.Editar_costo, Value)
			End Set
		End Property

		Public Overridable Property Editar_precio As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.Editar_precio)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.Editar_precio, Value)
			End Set
		End Property

		Public Overridable Property Generar_etiqueta As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.Generar_etiqueta)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.Generar_etiqueta, Value)
			End Set
		End Property

		Public Overridable Property Editar_benef As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.Editar_benef)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.Editar_benef, Value)
			End Set
		End Property

		Public Overridable Property Beneficio As Decimal
			Get
				Return MyBase.GetDecimal(ColumnNames.Beneficio)
			End Get
			Set(ByVal Value As Decimal)
				MyBase.SetDecimal(ColumnNames.Beneficio, Value)
			End Set
		End Property

		Public Overridable Property Estatus As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.Estatus)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.Estatus, Value)
			End Set
		End Property

		Public Overridable Property Group_code As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.Group_code)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.Group_code, Value)
			End Set
		End Property


	#End Region  
	
	#Region "String Properties" 

		Public Overridable Property s_Precio_code As String
			Get
				If Me.IsColumnNull(ColumnNames.Precio_code) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Precio_code)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Precio_code)
				Else
					Me.Precio_code = MyBase.SetIntegerAsString(ColumnNames.Precio_code, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Prov_code As String
			Get
				If Me.IsColumnNull(ColumnNames.Prov_code) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Prov_code)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Prov_code)
				Else
					Me.Prov_code = MyBase.SetIntegerAsString(ColumnNames.Prov_code, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Whse_code As String
			Get
				If Me.IsColumnNull(ColumnNames.Whse_code) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Whse_code)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Whse_code)
				Else
					Me.Whse_code = MyBase.SetIntegerAsString(ColumnNames.Whse_code, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Fecha As String
			Get
				If Me.IsColumnNull(ColumnNames.Fecha) Then
					Return String.Empty
				Else
					Return MyBase.GetDateTimeAsString(ColumnNames.Fecha)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Fecha)
				Else
					Me.Fecha = MyBase.SetDateTimeAsString(ColumnNames.Fecha, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Editar_costo As String
			Get
				If Me.IsColumnNull(ColumnNames.Editar_costo) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Editar_costo)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Editar_costo)
				Else
					Me.Editar_costo = MyBase.SetIntegerAsString(ColumnNames.Editar_costo, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Editar_precio As String
			Get
				If Me.IsColumnNull(ColumnNames.Editar_precio) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Editar_precio)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Editar_precio)
				Else
					Me.Editar_precio = MyBase.SetIntegerAsString(ColumnNames.Editar_precio, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Generar_etiqueta As String
			Get
				If Me.IsColumnNull(ColumnNames.Generar_etiqueta) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Generar_etiqueta)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Generar_etiqueta)
				Else
					Me.Generar_etiqueta = MyBase.SetIntegerAsString(ColumnNames.Generar_etiqueta, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Editar_benef As String
			Get
				If Me.IsColumnNull(ColumnNames.Editar_benef) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Editar_benef)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Editar_benef)
				Else
					Me.Editar_benef = MyBase.SetIntegerAsString(ColumnNames.Editar_benef, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Beneficio As String
			Get
				If Me.IsColumnNull(ColumnNames.Beneficio) Then
					Return String.Empty
				Else
					Return MyBase.GetDecimalAsString(ColumnNames.Beneficio)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Beneficio)
				Else
					Me.Beneficio = MyBase.SetDecimalAsString(ColumnNames.Beneficio, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Estatus As String
			Get
				If Me.IsColumnNull(ColumnNames.Estatus) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Estatus)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Estatus)
				Else
					Me.Estatus = MyBase.SetIntegerAsString(ColumnNames.Estatus, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Group_code As String
			Get
				If Me.IsColumnNull(ColumnNames.Group_code) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Group_code)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Group_code)
				Else
					Me.Group_code = MyBase.SetIntegerAsString(ColumnNames.Group_code, Value)
				End If
			End Set
		End Property


	#End Region  	

	#Region "Where Clause"
    Public Class WhereClause

        Public Sub New(ByVal entity As BusinessEntity)
            Me._entity = entity
        End Sub
		
		Public ReadOnly Property TearOff As TearOffWhereParameter
			Get
				If _tearOff Is Nothing Then
					_tearOff = new TearOffWhereParameter(Me)
				End If

				Return _tearOff
			End Get
		End Property

		#Region "TearOff's"
		Public class TearOffWhereParameter

			Public Sub New(ByVal clause As WhereClause)
				Me._clause = clause
			End Sub
		
	
			Public ReadOnly Property Precio_code() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Precio_code, Parameters.Precio_code)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Prov_code() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Prov_code, Parameters.Prov_code)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Whse_code() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Whse_code, Parameters.Whse_code)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Fecha() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Fecha, Parameters.Fecha)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Editar_costo() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Editar_costo, Parameters.Editar_costo)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Editar_precio() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Editar_precio, Parameters.Editar_precio)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Generar_etiqueta() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Generar_etiqueta, Parameters.Generar_etiqueta)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Editar_benef() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Editar_benef, Parameters.Editar_benef)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Beneficio() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Beneficio, Parameters.Beneficio)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Estatus() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Estatus, Parameters.Estatus)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Group_code() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Group_code, Parameters.Group_code)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property


			Private _clause as WhereClause
		End Class
		#End Region	

		Public ReadOnly Property Precio_code() As WhereParameter 
			Get
				If _Precio_code_W Is Nothing Then
					_Precio_code_W = TearOff.Precio_code
				End If
				Return _Precio_code_W
			End Get
		End Property

		Public ReadOnly Property Prov_code() As WhereParameter 
			Get
				If _Prov_code_W Is Nothing Then
					_Prov_code_W = TearOff.Prov_code
				End If
				Return _Prov_code_W
			End Get
		End Property

		Public ReadOnly Property Whse_code() As WhereParameter 
			Get
				If _Whse_code_W Is Nothing Then
					_Whse_code_W = TearOff.Whse_code
				End If
				Return _Whse_code_W
			End Get
		End Property

		Public ReadOnly Property Fecha() As WhereParameter 
			Get
				If _Fecha_W Is Nothing Then
					_Fecha_W = TearOff.Fecha
				End If
				Return _Fecha_W
			End Get
		End Property

		Public ReadOnly Property Editar_costo() As WhereParameter 
			Get
				If _Editar_costo_W Is Nothing Then
					_Editar_costo_W = TearOff.Editar_costo
				End If
				Return _Editar_costo_W
			End Get
		End Property

		Public ReadOnly Property Editar_precio() As WhereParameter 
			Get
				If _Editar_precio_W Is Nothing Then
					_Editar_precio_W = TearOff.Editar_precio
				End If
				Return _Editar_precio_W
			End Get
		End Property

		Public ReadOnly Property Generar_etiqueta() As WhereParameter 
			Get
				If _Generar_etiqueta_W Is Nothing Then
					_Generar_etiqueta_W = TearOff.Generar_etiqueta
				End If
				Return _Generar_etiqueta_W
			End Get
		End Property

		Public ReadOnly Property Editar_benef() As WhereParameter 
			Get
				If _Editar_benef_W Is Nothing Then
					_Editar_benef_W = TearOff.Editar_benef
				End If
				Return _Editar_benef_W
			End Get
		End Property

		Public ReadOnly Property Beneficio() As WhereParameter 
			Get
				If _Beneficio_W Is Nothing Then
					_Beneficio_W = TearOff.Beneficio
				End If
				Return _Beneficio_W
			End Get
		End Property

		Public ReadOnly Property Estatus() As WhereParameter 
			Get
				If _Estatus_W Is Nothing Then
					_Estatus_W = TearOff.Estatus
				End If
				Return _Estatus_W
			End Get
		End Property

		Public ReadOnly Property Group_code() As WhereParameter 
			Get
				If _Group_code_W Is Nothing Then
					_Group_code_W = TearOff.Group_code
				End If
				Return _Group_code_W
			End Get
		End Property

		Private _Precio_code_W As WhereParameter = Nothing
		Private _Prov_code_W As WhereParameter = Nothing
		Private _Whse_code_W As WhereParameter = Nothing
		Private _Fecha_W As WhereParameter = Nothing
		Private _Editar_costo_W As WhereParameter = Nothing
		Private _Editar_precio_W As WhereParameter = Nothing
		Private _Generar_etiqueta_W As WhereParameter = Nothing
		Private _Editar_benef_W As WhereParameter = Nothing
		Private _Beneficio_W As WhereParameter = Nothing
		Private _Estatus_W As WhereParameter = Nothing
		Private _Group_code_W As WhereParameter = Nothing

			Public Sub WhereClauseReset()

			_Precio_code_W = Nothing
			_Prov_code_W = Nothing
			_Whse_code_W = Nothing
			_Fecha_W = Nothing
			_Editar_costo_W = Nothing
			_Editar_precio_W = Nothing
			_Generar_etiqueta_W = Nothing
			_Editar_benef_W = Nothing
			_Beneficio_W = Nothing
			_Estatus_W = Nothing
			_Group_code_W = Nothing
				Me._entity.Query.FlushWhereParameters()

			End Sub
	
		Private _entity As BusinessEntity
		Private _tearOff As TearOffWhereParameter
    End Class	

	Public ReadOnly Property Where() As WhereClause
		Get
			If _whereClause Is Nothing Then
				_whereClause = New WhereClause(Me)
			End If
	
			Return _whereClause
		End Get
	End Property
	
	Private _whereClause As WhereClause = Nothing	
#End Region	

#Region "Aggregate Clause"
    Public Class AggregateClause

        Public Sub New(ByVal entity As BusinessEntity)
            Me._entity = entity
        End Sub
		
		Public ReadOnly Property TearOff As TearOffAggregateParameter
			Get
				If _tearOff Is Nothing Then
					_tearOff = new TearOffAggregateParameter(Me)
				End If

				Return _tearOff
			End Get
		End Property

		#Region "AggregateParameter TearOff's"
		Public class TearOffAggregateParameter

			Public Sub New(ByVal clause As AggregateClause)
				Me._clause = clause
			End Sub
		
	
		Public ReadOnly Property Precio_code() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Precio_code, Parameters.Precio_code)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Prov_code() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Prov_code, Parameters.Prov_code)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Whse_code() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Whse_code, Parameters.Whse_code)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Fecha() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Fecha, Parameters.Fecha)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Editar_costo() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Editar_costo, Parameters.Editar_costo)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Editar_precio() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Editar_precio, Parameters.Editar_precio)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Generar_etiqueta() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Generar_etiqueta, Parameters.Generar_etiqueta)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Editar_benef() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Editar_benef, Parameters.Editar_benef)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Beneficio() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Beneficio, Parameters.Beneficio)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Estatus() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Estatus, Parameters.Estatus)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Group_code() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Group_code, Parameters.Group_code)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property


			Private _clause as AggregateClause
		End Class
		#End Region	

		Public ReadOnly Property Precio_code() As AggregateParameter 
			Get
				If _Precio_code_W Is Nothing Then
					_Precio_code_W = TearOff.Precio_code
				End If
				Return _Precio_code_W
			End Get
		End Property

		Public ReadOnly Property Prov_code() As AggregateParameter 
			Get
				If _Prov_code_W Is Nothing Then
					_Prov_code_W = TearOff.Prov_code
				End If
				Return _Prov_code_W
			End Get
		End Property

		Public ReadOnly Property Whse_code() As AggregateParameter 
			Get
				If _Whse_code_W Is Nothing Then
					_Whse_code_W = TearOff.Whse_code
				End If
				Return _Whse_code_W
			End Get
		End Property

		Public ReadOnly Property Fecha() As AggregateParameter 
			Get
				If _Fecha_W Is Nothing Then
					_Fecha_W = TearOff.Fecha
				End If
				Return _Fecha_W
			End Get
		End Property

		Public ReadOnly Property Editar_costo() As AggregateParameter 
			Get
				If _Editar_costo_W Is Nothing Then
					_Editar_costo_W = TearOff.Editar_costo
				End If
				Return _Editar_costo_W
			End Get
		End Property

		Public ReadOnly Property Editar_precio() As AggregateParameter 
			Get
				If _Editar_precio_W Is Nothing Then
					_Editar_precio_W = TearOff.Editar_precio
				End If
				Return _Editar_precio_W
			End Get
		End Property

		Public ReadOnly Property Generar_etiqueta() As AggregateParameter 
			Get
				If _Generar_etiqueta_W Is Nothing Then
					_Generar_etiqueta_W = TearOff.Generar_etiqueta
				End If
				Return _Generar_etiqueta_W
			End Get
		End Property

		Public ReadOnly Property Editar_benef() As AggregateParameter 
			Get
				If _Editar_benef_W Is Nothing Then
					_Editar_benef_W = TearOff.Editar_benef
				End If
				Return _Editar_benef_W
			End Get
		End Property

		Public ReadOnly Property Beneficio() As AggregateParameter 
			Get
				If _Beneficio_W Is Nothing Then
					_Beneficio_W = TearOff.Beneficio
				End If
				Return _Beneficio_W
			End Get
		End Property

		Public ReadOnly Property Estatus() As AggregateParameter 
			Get
				If _Estatus_W Is Nothing Then
					_Estatus_W = TearOff.Estatus
				End If
				Return _Estatus_W
			End Get
		End Property

		Public ReadOnly Property Group_code() As AggregateParameter 
			Get
				If _Group_code_W Is Nothing Then
					_Group_code_W = TearOff.Group_code
				End If
				Return _Group_code_W
			End Get
		End Property

		Private _Precio_code_W As AggregateParameter = Nothing
		Private _Prov_code_W As AggregateParameter = Nothing
		Private _Whse_code_W As AggregateParameter = Nothing
		Private _Fecha_W As AggregateParameter = Nothing
		Private _Editar_costo_W As AggregateParameter = Nothing
		Private _Editar_precio_W As AggregateParameter = Nothing
		Private _Generar_etiqueta_W As AggregateParameter = Nothing
		Private _Editar_benef_W As AggregateParameter = Nothing
		Private _Beneficio_W As AggregateParameter = Nothing
		Private _Estatus_W As AggregateParameter = Nothing
		Private _Group_code_W As AggregateParameter = Nothing

		Public Sub AggregateClauseReset()

		_Precio_code_W = Nothing
		_Prov_code_W = Nothing
		_Whse_code_W = Nothing
		_Fecha_W = Nothing
		_Editar_costo_W = Nothing
		_Editar_precio_W = Nothing
		_Generar_etiqueta_W = Nothing
		_Editar_benef_W = Nothing
		_Beneficio_W = Nothing
		_Estatus_W = Nothing
		_Group_code_W = Nothing
			Me._entity.Query.FlushAggregateParameters()

		End Sub
	
		Private _entity As BusinessEntity
		Private _tearOff As TearOffAggregateParameter
    End Class	

	Public ReadOnly Property Aggregate() As AggregateClause
		Get
			If _aggregateClause Is Nothing Then
				_aggregateClause = New AggregateClause(Me)
			End If
	
			Return _aggregateClause
		End Get
	End Property
	
	Private _aggregateClause As AggregateClause = Nothing	
#End Region	

	Protected Overrides Function GetInsertCommand() As IDbCommand
	
		Dim cmd As OleDbCommand = New OleDbCommand
		cmd.CommandType = CommandType.StoredProcedure
		cmd.CommandText = "[" + Me.SchemaStoredProcedure + "proc_ivpreciomInsert]" 
	    
		CreateParameters(cmd)
		    
		Return cmd 

  	End Function
	
	Protected Overrides Function GetUpdateCommand() As IDbCommand
	
		Dim cmd As OleDbCommand = New OleDbCommand
		cmd.CommandType = CommandType.StoredProcedure    
		cmd.CommandText = "[" + Me.SchemaStoredProcedure + "proc_ivpreciomUpdate]" 
		
		CreateParameters(cmd) 
		    
		Return cmd
	
	End Function	
	
	Protected Overrides Function GetDeleteCommand() As IDbCommand
	
		Dim cmd As OleDbCommand = New OleDbCommand
		cmd.CommandType = CommandType.StoredProcedure    
		cmd.CommandText = "[" + Me.SchemaStoredProcedure + "proc_ivpreciomDelete]" 
		
		Dim p As OleDbParameter
		p = cmd.Parameters.Add(Parameters.Precio_code)
		p.SourceColumn = ColumnNames.Precio_code
		p.SourceVersion = DataRowVersion.Current

  
		Return cmd
	
	End Function	
	
	Private Sub CreateParameters(ByVal cmd As OleDbCommand)
	
		Dim p As OleDbParameter
		p = cmd.Parameters.Add(Parameters.Precio_code)
		p.SourceColumn = ColumnNames.Precio_code
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Prov_code)
		p.SourceColumn = ColumnNames.Prov_code
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Whse_code)
		p.SourceColumn = ColumnNames.Whse_code
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Fecha)
		p.SourceColumn = ColumnNames.Fecha
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Editar_costo)
		p.SourceColumn = ColumnNames.Editar_costo
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Editar_precio)
		p.SourceColumn = ColumnNames.Editar_precio
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Generar_etiqueta)
		p.SourceColumn = ColumnNames.Generar_etiqueta
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Editar_benef)
		p.SourceColumn = ColumnNames.Editar_benef
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Beneficio)
		p.SourceColumn = ColumnNames.Beneficio
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Estatus)
		p.SourceColumn = ColumnNames.Estatus
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Group_code)
		p.SourceColumn = ColumnNames.Group_code
		p.SourceVersion = DataRowVersion.Current


	End Sub	

End Class

