
'===============================================================================
'  Generated From - VbNet_SQL_dOOdads_BusinessEntity.vbgen
' 
'  ** IMPORTANT  **
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class OleDbEntity is in the Architecture directory in "dOOdads".
'  
'  This object is 'MustInherit' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can Override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  Public Class YourObject
'    Inherits _YourObject
'
'  End Class
'
'===============================================================================

' Generated by MyGeneration Version # (1.2.0.7)

Imports System
Imports System.Data
Imports System.Data.OleDb
Imports System.Collections
Imports System.Collections.Specialized

Imports MyGeneration.dOOdads

Public MustInherit Class _iventrdm
	Inherits OleDbEntity

		Public Sub New() 
			Me.QuerySource = "iventrdm"
			Me.MappingName = "iventrdm"
		End Sub

	'=================================================================
	'  Public Overrides Sub AddNew()
	'=================================================================
	'
	'=================================================================
	Public Overrides Sub AddNew()
		MyBase.AddNew()
				
	End Sub
	
	Public Overrides Sub FlushData()
		Me._whereClause = nothing
		Me._aggregateClause = nothing		
		MyBase.FlushData()
	End Sub
	
	
	Public Overrides Function GetAutoKeyColumn() As String
			Return "entr_serial"
	End Function
	
	'=================================================================
	'  	Public Function LoadAll() As Boolean
	'=================================================================
	'  Loads all of the records in the database, and sets the currentRow to the first row
	'=================================================================
	Public Function LoadAll() As Boolean
	
		Dim parameters As ListDictionary = Nothing
		
		
    	Return MyBase.LoadFromSql("[" + Me.SchemaStoredProcedure + "proc_iventrdmLoadAll]", parameters)
		
	End Function

	'=================================================================
	' Public Overridable Function LoadByPrimaryKey()  As Boolean
	'=================================================================
	'  Loads a single row of via the primary key
	'=================================================================
	Public Overridable Function LoadByPrimaryKey(ByVal Entr_serial As Integer) As Boolean

		Dim parameters As ListDictionary = New ListDictionary()
        parameters.Add(_iventrdm.Parameters.Entr_serial, Entr_serial)
        parameters.Add(_iventrdm.Parameters.suc_code, Suc_code)

		
		Return MyBase.LoadFromSql("[" + Me.SchemaStoredProcedure + "proc_iventrdmLoadByPrimaryKey]", parameters)

	End Function

	#Region "Parameters"
	Protected class Parameters 
		
		Public Shared ReadOnly Property Entr_number As OleDbParameter
			Get
				Return New OleDbParameter("@Entr_number", OleDbType.VarChar, 20)
			End Get
		End Property
		
		Public Shared ReadOnly Property Entr_serial As OleDbParameter
			Get
				Return New OleDbParameter("@Entr_serial", OleDbType.Integer, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Type_code As OleDbParameter
			Get
				Return New OleDbParameter("@Type_code", OleDbType.Char, 3)
			End Get
		End Property
		
		Public Shared ReadOnly Property Whse_code As OleDbParameter
			Get
				Return New OleDbParameter("@Whse_code", OleDbType.Integer, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Prov_code As OleDbParameter
			Get
				Return New OleDbParameter("@Prov_code", OleDbType.Integer, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Entr_date As OleDbParameter
			Get
				Return New OleDbParameter("@Entr_date", OleDbType.DBTimeStamp, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Total_amount As OleDbParameter
			Get
				Return New OleDbParameter("@Total_amount", OleDbType.Numeric, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Disc_amount As OleDbParameter
			Get
				Return New OleDbParameter("@Disc_amount", OleDbType.Numeric, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Itbis_amount As OleDbParameter
			Get
				Return New OleDbParameter("@Itbis_amount", OleDbType.Numeric, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Aply_impto As OleDbParameter
			Get
				Return New OleDbParameter("@Aply_impto", OleDbType.SmallInt, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Impto_amount As OleDbParameter
			Get
				Return New OleDbParameter("@Impto_amount", OleDbType.Numeric, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Aply_dscto As OleDbParameter
			Get
				Return New OleDbParameter("@Aply_dscto", OleDbType.SmallInt, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Entr_status As OleDbParameter
			Get
				Return New OleDbParameter("@Entr_status", OleDbType.Integer, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Aply_itbis As OleDbParameter
			Get
				Return New OleDbParameter("@Aply_itbis", OleDbType.SmallInt, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Edit_price As OleDbParameter
			Get
				Return New OleDbParameter("@Edit_price", OleDbType.SmallInt, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Date_created As OleDbParameter
			Get
				Return New OleDbParameter("@Date_created", OleDbType.DBTimeStamp, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Userid As OleDbParameter
			Get
				Return New OleDbParameter("@Userid", OleDbType.VarChar, 20)
			End Get
		End Property
		
		Public Shared ReadOnly Property Apli_ofert As OleDbParameter
			Get
				Return New OleDbParameter("@Apli_ofert", OleDbType.SmallInt, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Chk_numero As OleDbParameter
			Get
				Return New OleDbParameter("@Chk_numero", OleDbType.Integer, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Ord_numero As OleDbParameter
			Get
				Return New OleDbParameter("@Ord_numero", OleDbType.Integer, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Aply_orden As OleDbParameter
			Get
				Return New OleDbParameter("@Aply_orden", OleDbType.SmallInt, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Term_code As OleDbParameter
			Get
				Return New OleDbParameter("@Term_code", OleDbType.Char, 5)
			End Get
		End Property
		
		Public Shared ReadOnly Property Entr_ncf As OleDbParameter
			Get
				Return New OleDbParameter("@Entr_ncf", OleDbType.VarChar, 19)
			End Get
		End Property
        Public Shared ReadOnly Property Suc_code() As OleDbParameter
            Get
                Return New OleDbParameter("@Suc_code", OleDbType.Integer, 0)
            End Get
        End Property
    End Class
	#End Region	

	#Region "ColumnNames"
	Public class ColumnNames
		
        Public Const Entr_number As String = "entr_number"
        Public Const Entr_serial As String = "entr_serial"
        Public Const Type_code As String = "type_code"
        Public Const Whse_code As String = "whse_code"
        Public Const Prov_code As String = "prov_code"
        Public Const Entr_date As String = "entr_date"
        Public Const Total_amount As String = "total_amount"
        Public Const Disc_amount As String = "disc_amount"
        Public Const Itbis_amount As String = "itbis_amount"
        Public Const Aply_impto As String = "aply_impto"
        Public Const Impto_amount As String = "impto_amount"
        Public Const Aply_dscto As String = "aply_dscto"
        Public Const Entr_status As String = "entr_status"
        Public Const Aply_itbis As String = "aply_itbis"
        Public Const Edit_price As String = "edit_price"
        Public Const Date_created As String = "date_created"
        Public Const Userid As String = "userid"
        Public Const Apli_ofert As String = "apli_ofert"
        Public Const Chk_numero As String = "chk_numero"
        Public Const Ord_numero As String = "ord_numero"
        Public Const Aply_orden As String = "aply_orden"
        Public Const Term_code As String = "term_code"
        Public Const Entr_ncf As String = "entr_ncf"
        Public Const Suc_code As String = "Suc_code"

		Shared Public Function ToPropertyName(ByVal columnName As String) As String

			If ht Is Nothing Then
			
				ht = new Hashtable
				
				ht(Entr_number) = _iventrdm.PropertyNames.Entr_number
				ht(Entr_serial) = _iventrdm.PropertyNames.Entr_serial
				ht(Type_code) = _iventrdm.PropertyNames.Type_code
				ht(Whse_code) = _iventrdm.PropertyNames.Whse_code
				ht(Prov_code) = _iventrdm.PropertyNames.Prov_code
				ht(Entr_date) = _iventrdm.PropertyNames.Entr_date
				ht(Total_amount) = _iventrdm.PropertyNames.Total_amount
				ht(Disc_amount) = _iventrdm.PropertyNames.Disc_amount
				ht(Itbis_amount) = _iventrdm.PropertyNames.Itbis_amount
				ht(Aply_impto) = _iventrdm.PropertyNames.Aply_impto
				ht(Impto_amount) = _iventrdm.PropertyNames.Impto_amount
				ht(Aply_dscto) = _iventrdm.PropertyNames.Aply_dscto
				ht(Entr_status) = _iventrdm.PropertyNames.Entr_status
				ht(Aply_itbis) = _iventrdm.PropertyNames.Aply_itbis
				ht(Edit_price) = _iventrdm.PropertyNames.Edit_price
				ht(Date_created) = _iventrdm.PropertyNames.Date_created
				ht(Userid) = _iventrdm.PropertyNames.Userid
				ht(Apli_ofert) = _iventrdm.PropertyNames.Apli_ofert
				ht(Chk_numero) = _iventrdm.PropertyNames.Chk_numero
				ht(Ord_numero) = _iventrdm.PropertyNames.Ord_numero
				ht(Aply_orden) = _iventrdm.PropertyNames.Aply_orden
				ht(Term_code) = _iventrdm.PropertyNames.Term_code
                ht(Entr_ncf) = _iventrdm.PropertyNames.Entr_ncf
                ht(Suc_code) = _iventrdm.PropertyNames.Suc_code

			End If
			
			Return CType(ht(columnName), String)
			
		End Function
		
		Shared Private ht  As Hashtable = Nothing		 
	End Class
	#End Region	
	
	#Region "PropertyNames"
	Public class PropertyNames
		
        Public Const Entr_number As String = "Entr_number"
        Public Const Entr_serial As String = "Entr_serial"
        Public Const Type_code As String = "Type_code"
        Public Const Whse_code As String = "Whse_code"
        Public Const Prov_code As String = "Prov_code"
        Public Const Entr_date As String = "Entr_date"
        Public Const Total_amount As String = "Total_amount"
        Public Const Disc_amount As String = "Disc_amount"
        Public Const Itbis_amount As String = "Itbis_amount"
        Public Const Aply_impto As String = "Aply_impto"
        Public Const Impto_amount As String = "Impto_amount"
        Public Const Aply_dscto As String = "Aply_dscto"
        Public Const Entr_status As String = "Entr_status"
        Public Const Aply_itbis As String = "Aply_itbis"
        Public Const Edit_price As String = "Edit_price"
        Public Const Date_created As String = "Date_created"
        Public Const Userid As String = "Userid"
        Public Const Apli_ofert As String = "Apli_ofert"
        Public Const Chk_numero As String = "Chk_numero"
        Public Const Ord_numero As String = "Ord_numero"
        Public Const Aply_orden As String = "Aply_orden"
        Public Const Term_code As String = "Term_code"
        Public Const Entr_ncf As String = "Entr_ncf"
        Public Const Suc_code As String = "Suc_code"

		Shared Public Function ToColumnName(ByVal propertyName As String) As String

			If ht Is Nothing Then
			
				ht = new Hashtable
				
				ht(Entr_number) = _iventrdm.ColumnNames.Entr_number
				ht(Entr_serial) = _iventrdm.ColumnNames.Entr_serial
				ht(Type_code) = _iventrdm.ColumnNames.Type_code
				ht(Whse_code) = _iventrdm.ColumnNames.Whse_code
				ht(Prov_code) = _iventrdm.ColumnNames.Prov_code
				ht(Entr_date) = _iventrdm.ColumnNames.Entr_date
				ht(Total_amount) = _iventrdm.ColumnNames.Total_amount
				ht(Disc_amount) = _iventrdm.ColumnNames.Disc_amount
				ht(Itbis_amount) = _iventrdm.ColumnNames.Itbis_amount
				ht(Aply_impto) = _iventrdm.ColumnNames.Aply_impto
				ht(Impto_amount) = _iventrdm.ColumnNames.Impto_amount
				ht(Aply_dscto) = _iventrdm.ColumnNames.Aply_dscto
				ht(Entr_status) = _iventrdm.ColumnNames.Entr_status
				ht(Aply_itbis) = _iventrdm.ColumnNames.Aply_itbis
				ht(Edit_price) = _iventrdm.ColumnNames.Edit_price
				ht(Date_created) = _iventrdm.ColumnNames.Date_created
				ht(Userid) = _iventrdm.ColumnNames.Userid
				ht(Apli_ofert) = _iventrdm.ColumnNames.Apli_ofert
				ht(Chk_numero) = _iventrdm.ColumnNames.Chk_numero
				ht(Ord_numero) = _iventrdm.ColumnNames.Ord_numero
				ht(Aply_orden) = _iventrdm.ColumnNames.Aply_orden
				ht(Term_code) = _iventrdm.ColumnNames.Term_code
                ht(Entr_ncf) = _iventrdm.ColumnNames.Entr_ncf
                ht(Suc_code) = _iventrdm.ColumnNames.Suc_code

			End If
			
			Return CType(ht(propertyName), String)
			
		End Function
		
		Shared Private ht  As Hashtable = Nothing
		
	End Class
	#End Region	
	
	#Region "StringPropertyNames"
	Public class StringPropertyNames
		
        Public Const Entr_number As String = "s_Entr_number"
        Public Const Entr_serial As String = "s_Entr_serial"
        Public Const Type_code As String = "s_Type_code"
        Public Const Whse_code As String = "s_Whse_code"
        Public Const Prov_code As String = "s_Prov_code"
        Public Const Entr_date As String = "s_Entr_date"
        Public Const Total_amount As String = "s_Total_amount"
        Public Const Disc_amount As String = "s_Disc_amount"
        Public Const Itbis_amount As String = "s_Itbis_amount"
        Public Const Aply_impto As String = "s_Aply_impto"
        Public Const Impto_amount As String = "s_Impto_amount"
        Public Const Aply_dscto As String = "s_Aply_dscto"
        Public Const Entr_status As String = "s_Entr_status"
        Public Const Aply_itbis As String = "s_Aply_itbis"
        Public Const Edit_price As String = "s_Edit_price"
        Public Const Date_created As String = "s_Date_created"
        Public Const Userid As String = "s_Userid"
        Public Const Apli_ofert As String = "s_Apli_ofert"
        Public Const Chk_numero As String = "s_Chk_numero"
        Public Const Ord_numero As String = "s_Ord_numero"
        Public Const Aply_orden As String = "s_Aply_orden"
        Public Const Term_code As String = "s_Term_code"
        Public Const Entr_ncf As String = "s_Entr_ncf"
        Public Const Suc_code As String = "s_Suc_code"

	End Class
	#End Region		
	
	#Region "Properties" 
		Public Overridable Property Entr_number As String
			Get
				Return MyBase.GetString(ColumnNames.Entr_number)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.Entr_number, Value)
			End Set
		End Property

		Public Overridable Property Entr_serial As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.Entr_serial)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.Entr_serial, Value)
			End Set
		End Property

		Public Overridable Property Type_code As String
			Get
				Return MyBase.GetString(ColumnNames.Type_code)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.Type_code, Value)
			End Set
		End Property

		Public Overridable Property Whse_code As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.Whse_code)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.Whse_code, Value)
			End Set
		End Property

		Public Overridable Property Prov_code As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.Prov_code)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.Prov_code, Value)
			End Set
		End Property

		Public Overridable Property Entr_date As DateTime
			Get
				Return MyBase.GetDateTime(ColumnNames.Entr_date)
			End Get
			Set(ByVal Value As DateTime)
				MyBase.SetDateTime(ColumnNames.Entr_date, Value)
			End Set
		End Property

		Public Overridable Property Total_amount As Decimal
			Get
				Return MyBase.GetDecimal(ColumnNames.Total_amount)
			End Get
			Set(ByVal Value As Decimal)
				MyBase.SetDecimal(ColumnNames.Total_amount, Value)
			End Set
		End Property

		Public Overridable Property Disc_amount As Decimal
			Get
				Return MyBase.GetDecimal(ColumnNames.Disc_amount)
			End Get
			Set(ByVal Value As Decimal)
				MyBase.SetDecimal(ColumnNames.Disc_amount, Value)
			End Set
		End Property

		Public Overridable Property Itbis_amount As Decimal
			Get
				Return MyBase.GetDecimal(ColumnNames.Itbis_amount)
			End Get
			Set(ByVal Value As Decimal)
				MyBase.SetDecimal(ColumnNames.Itbis_amount, Value)
			End Set
		End Property

		Public Overridable Property Aply_impto As Short
			Get
				Return MyBase.GetShort(ColumnNames.Aply_impto)
			End Get
			Set(ByVal Value As Short)
				MyBase.SetShort(ColumnNames.Aply_impto, Value)
			End Set
		End Property

		Public Overridable Property Impto_amount As Decimal
			Get
				Return MyBase.GetDecimal(ColumnNames.Impto_amount)
			End Get
			Set(ByVal Value As Decimal)
				MyBase.SetDecimal(ColumnNames.Impto_amount, Value)
			End Set
		End Property

		Public Overridable Property Aply_dscto As Short
			Get
				Return MyBase.GetShort(ColumnNames.Aply_dscto)
			End Get
			Set(ByVal Value As Short)
				MyBase.SetShort(ColumnNames.Aply_dscto, Value)
			End Set
		End Property

		Public Overridable Property Entr_status As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.Entr_status)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.Entr_status, Value)
			End Set
		End Property

		Public Overridable Property Aply_itbis As Short
			Get
				Return MyBase.GetShort(ColumnNames.Aply_itbis)
			End Get
			Set(ByVal Value As Short)
				MyBase.SetShort(ColumnNames.Aply_itbis, Value)
			End Set
		End Property

		Public Overridable Property Edit_price As Short
			Get
				Return MyBase.GetShort(ColumnNames.Edit_price)
			End Get
			Set(ByVal Value As Short)
				MyBase.SetShort(ColumnNames.Edit_price, Value)
			End Set
		End Property

		Public Overridable Property Date_created As DateTime
			Get
				Return MyBase.GetDateTime(ColumnNames.Date_created)
			End Get
			Set(ByVal Value As DateTime)
				MyBase.SetDateTime(ColumnNames.Date_created, Value)
			End Set
		End Property

		Public Overridable Property Userid As String
			Get
				Return MyBase.GetString(ColumnNames.Userid)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.Userid, Value)
			End Set
		End Property

		Public Overridable Property Apli_ofert As Short
			Get
				Return MyBase.GetShort(ColumnNames.Apli_ofert)
			End Get
			Set(ByVal Value As Short)
				MyBase.SetShort(ColumnNames.Apli_ofert, Value)
			End Set
		End Property

		Public Overridable Property Chk_numero As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.Chk_numero)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.Chk_numero, Value)
			End Set
		End Property

		Public Overridable Property Ord_numero As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.Ord_numero)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.Ord_numero, Value)
			End Set
		End Property

		Public Overridable Property Aply_orden As Short
			Get
				Return MyBase.GetShort(ColumnNames.Aply_orden)
			End Get
			Set(ByVal Value As Short)
				MyBase.SetShort(ColumnNames.Aply_orden, Value)
			End Set
		End Property

		Public Overridable Property Term_code As String
			Get
				Return MyBase.GetString(ColumnNames.Term_code)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.Term_code, Value)
			End Set
		End Property

		Public Overridable Property Entr_ncf As String
			Get
				Return MyBase.GetString(ColumnNames.Entr_ncf)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.Entr_ncf, Value)
			End Set
		End Property
    Public Overridable Property Suc_code() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.Suc_code)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.Suc_code, Value)
        End Set
    End Property



#End Region
	
	#Region "String Properties" 

		Public Overridable Property s_Entr_number As String
			Get
				If Me.IsColumnNull(ColumnNames.Entr_number) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.Entr_number)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Entr_number)
				Else
					Me.Entr_number = MyBase.SetStringAsString(ColumnNames.Entr_number, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Entr_serial As String
			Get
				If Me.IsColumnNull(ColumnNames.Entr_serial) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Entr_serial)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Entr_serial)
				Else
					Me.Entr_serial = MyBase.SetIntegerAsString(ColumnNames.Entr_serial, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Type_code As String
			Get
				If Me.IsColumnNull(ColumnNames.Type_code) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.Type_code)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Type_code)
				Else
					Me.Type_code = MyBase.SetStringAsString(ColumnNames.Type_code, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Whse_code As String
			Get
				If Me.IsColumnNull(ColumnNames.Whse_code) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Whse_code)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Whse_code)
				Else
					Me.Whse_code = MyBase.SetIntegerAsString(ColumnNames.Whse_code, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Prov_code As String
			Get
				If Me.IsColumnNull(ColumnNames.Prov_code) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Prov_code)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Prov_code)
				Else
					Me.Prov_code = MyBase.SetIntegerAsString(ColumnNames.Prov_code, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Entr_date As String
			Get
				If Me.IsColumnNull(ColumnNames.Entr_date) Then
					Return String.Empty
				Else
					Return MyBase.GetDateTimeAsString(ColumnNames.Entr_date)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Entr_date)
				Else
					Me.Entr_date = MyBase.SetDateTimeAsString(ColumnNames.Entr_date, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Total_amount As String
			Get
				If Me.IsColumnNull(ColumnNames.Total_amount) Then
					Return String.Empty
				Else
					Return MyBase.GetDecimalAsString(ColumnNames.Total_amount)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Total_amount)
				Else
					Me.Total_amount = MyBase.SetDecimalAsString(ColumnNames.Total_amount, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Disc_amount As String
			Get
				If Me.IsColumnNull(ColumnNames.Disc_amount) Then
					Return String.Empty
				Else
					Return MyBase.GetDecimalAsString(ColumnNames.Disc_amount)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Disc_amount)
				Else
					Me.Disc_amount = MyBase.SetDecimalAsString(ColumnNames.Disc_amount, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Itbis_amount As String
			Get
				If Me.IsColumnNull(ColumnNames.Itbis_amount) Then
					Return String.Empty
				Else
					Return MyBase.GetDecimalAsString(ColumnNames.Itbis_amount)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Itbis_amount)
				Else
					Me.Itbis_amount = MyBase.SetDecimalAsString(ColumnNames.Itbis_amount, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Aply_impto As String
			Get
				If Me.IsColumnNull(ColumnNames.Aply_impto) Then
					Return String.Empty
				Else
					Return MyBase.GetShortAsString(ColumnNames.Aply_impto)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Aply_impto)
				Else
					Me.Aply_impto = MyBase.SetShortAsString(ColumnNames.Aply_impto, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Impto_amount As String
			Get
				If Me.IsColumnNull(ColumnNames.Impto_amount) Then
					Return String.Empty
				Else
					Return MyBase.GetDecimalAsString(ColumnNames.Impto_amount)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Impto_amount)
				Else
					Me.Impto_amount = MyBase.SetDecimalAsString(ColumnNames.Impto_amount, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Aply_dscto As String
			Get
				If Me.IsColumnNull(ColumnNames.Aply_dscto) Then
					Return String.Empty
				Else
					Return MyBase.GetShortAsString(ColumnNames.Aply_dscto)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Aply_dscto)
				Else
					Me.Aply_dscto = MyBase.SetShortAsString(ColumnNames.Aply_dscto, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Entr_status As String
			Get
				If Me.IsColumnNull(ColumnNames.Entr_status) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Entr_status)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Entr_status)
				Else
					Me.Entr_status = MyBase.SetIntegerAsString(ColumnNames.Entr_status, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Aply_itbis As String
			Get
				If Me.IsColumnNull(ColumnNames.Aply_itbis) Then
					Return String.Empty
				Else
					Return MyBase.GetShortAsString(ColumnNames.Aply_itbis)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Aply_itbis)
				Else
					Me.Aply_itbis = MyBase.SetShortAsString(ColumnNames.Aply_itbis, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Edit_price As String
			Get
				If Me.IsColumnNull(ColumnNames.Edit_price) Then
					Return String.Empty
				Else
					Return MyBase.GetShortAsString(ColumnNames.Edit_price)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Edit_price)
				Else
					Me.Edit_price = MyBase.SetShortAsString(ColumnNames.Edit_price, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Date_created As String
			Get
				If Me.IsColumnNull(ColumnNames.Date_created) Then
					Return String.Empty
				Else
					Return MyBase.GetDateTimeAsString(ColumnNames.Date_created)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Date_created)
				Else
					Me.Date_created = MyBase.SetDateTimeAsString(ColumnNames.Date_created, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Userid As String
			Get
				If Me.IsColumnNull(ColumnNames.Userid) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.Userid)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Userid)
				Else
					Me.Userid = MyBase.SetStringAsString(ColumnNames.Userid, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Apli_ofert As String
			Get
				If Me.IsColumnNull(ColumnNames.Apli_ofert) Then
					Return String.Empty
				Else
					Return MyBase.GetShortAsString(ColumnNames.Apli_ofert)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Apli_ofert)
				Else
					Me.Apli_ofert = MyBase.SetShortAsString(ColumnNames.Apli_ofert, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Chk_numero As String
			Get
				If Me.IsColumnNull(ColumnNames.Chk_numero) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Chk_numero)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Chk_numero)
				Else
					Me.Chk_numero = MyBase.SetIntegerAsString(ColumnNames.Chk_numero, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Ord_numero As String
			Get
				If Me.IsColumnNull(ColumnNames.Ord_numero) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.Ord_numero)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Ord_numero)
				Else
					Me.Ord_numero = MyBase.SetIntegerAsString(ColumnNames.Ord_numero, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Aply_orden As String
			Get
				If Me.IsColumnNull(ColumnNames.Aply_orden) Then
					Return String.Empty
				Else
					Return MyBase.GetShortAsString(ColumnNames.Aply_orden)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Aply_orden)
				Else
					Me.Aply_orden = MyBase.SetShortAsString(ColumnNames.Aply_orden, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Term_code As String
			Get
				If Me.IsColumnNull(ColumnNames.Term_code) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.Term_code)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Term_code)
				Else
					Me.Term_code = MyBase.SetStringAsString(ColumnNames.Term_code, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Entr_ncf As String
			Get
				If Me.IsColumnNull(ColumnNames.Entr_ncf) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.Entr_ncf)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Entr_ncf)
				Else
					Me.Entr_ncf = MyBase.SetStringAsString(ColumnNames.Entr_ncf, Value)
				End If
			End Set
		End Property
    Public Overridable Property s_Suc_code() As String
        Get
            If Me.IsColumnNull(ColumnNames.Suc_code) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.Suc_code)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.Suc_code)
            Else
                Me.Suc_code = MyBase.SetIntegerAsString(ColumnNames.Suc_code, Value)
            End If
        End Set
    End Property


#End Region

	#Region "Where Clause"
    Public Class WhereClause

        Public Sub New(ByVal entity As BusinessEntity)
            Me._entity = entity
        End Sub
		
		Public ReadOnly Property TearOff As TearOffWhereParameter
			Get
				If _tearOff Is Nothing Then
					_tearOff = new TearOffWhereParameter(Me)
				End If

				Return _tearOff
			End Get
		End Property

		#Region "TearOff's"
		Public class TearOffWhereParameter

			Public Sub New(ByVal clause As WhereClause)
				Me._clause = clause
			End Sub
		
	
			Public ReadOnly Property Entr_number() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Entr_number, Parameters.Entr_number)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Entr_serial() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Entr_serial, Parameters.Entr_serial)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Type_code() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Type_code, Parameters.Type_code)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Whse_code() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Whse_code, Parameters.Whse_code)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Prov_code() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Prov_code, Parameters.Prov_code)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Entr_date() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Entr_date, Parameters.Entr_date)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Total_amount() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Total_amount, Parameters.Total_amount)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Disc_amount() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Disc_amount, Parameters.Disc_amount)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Itbis_amount() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Itbis_amount, Parameters.Itbis_amount)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Aply_impto() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Aply_impto, Parameters.Aply_impto)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Impto_amount() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Impto_amount, Parameters.Impto_amount)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Aply_dscto() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Aply_dscto, Parameters.Aply_dscto)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Entr_status() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Entr_status, Parameters.Entr_status)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Aply_itbis() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Aply_itbis, Parameters.Aply_itbis)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Edit_price() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Edit_price, Parameters.Edit_price)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Date_created() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Date_created, Parameters.Date_created)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Userid() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Userid, Parameters.Userid)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Apli_ofert() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Apli_ofert, Parameters.Apli_ofert)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Chk_numero() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Chk_numero, Parameters.Chk_numero)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Ord_numero() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Ord_numero, Parameters.Ord_numero)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Aply_orden() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Aply_orden, Parameters.Aply_orden)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Term_code() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Term_code, Parameters.Term_code)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Entr_ncf() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Entr_ncf, Parameters.Entr_ncf)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property
            Public ReadOnly Property Suc_code() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.Suc_code, Parameters.Suc_code)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Private _clause As WhereClause
        End Class
		#End Region	

		Public ReadOnly Property Entr_number() As WhereParameter 
			Get
				If _Entr_number_W Is Nothing Then
					_Entr_number_W = TearOff.Entr_number
				End If
				Return _Entr_number_W
			End Get
		End Property

		Public ReadOnly Property Entr_serial() As WhereParameter 
			Get
				If _Entr_serial_W Is Nothing Then
					_Entr_serial_W = TearOff.Entr_serial
				End If
				Return _Entr_serial_W
			End Get
		End Property

		Public ReadOnly Property Type_code() As WhereParameter 
			Get
				If _Type_code_W Is Nothing Then
					_Type_code_W = TearOff.Type_code
				End If
				Return _Type_code_W
			End Get
		End Property

		Public ReadOnly Property Whse_code() As WhereParameter 
			Get
				If _Whse_code_W Is Nothing Then
					_Whse_code_W = TearOff.Whse_code
				End If
				Return _Whse_code_W
			End Get
		End Property

		Public ReadOnly Property Prov_code() As WhereParameter 
			Get
				If _Prov_code_W Is Nothing Then
					_Prov_code_W = TearOff.Prov_code
				End If
				Return _Prov_code_W
			End Get
		End Property

		Public ReadOnly Property Entr_date() As WhereParameter 
			Get
				If _Entr_date_W Is Nothing Then
					_Entr_date_W = TearOff.Entr_date
				End If
				Return _Entr_date_W
			End Get
		End Property

		Public ReadOnly Property Total_amount() As WhereParameter 
			Get
				If _Total_amount_W Is Nothing Then
					_Total_amount_W = TearOff.Total_amount
				End If
				Return _Total_amount_W
			End Get
		End Property

		Public ReadOnly Property Disc_amount() As WhereParameter 
			Get
				If _Disc_amount_W Is Nothing Then
					_Disc_amount_W = TearOff.Disc_amount
				End If
				Return _Disc_amount_W
			End Get
		End Property

		Public ReadOnly Property Itbis_amount() As WhereParameter 
			Get
				If _Itbis_amount_W Is Nothing Then
					_Itbis_amount_W = TearOff.Itbis_amount
				End If
				Return _Itbis_amount_W
			End Get
		End Property

		Public ReadOnly Property Aply_impto() As WhereParameter 
			Get
				If _Aply_impto_W Is Nothing Then
					_Aply_impto_W = TearOff.Aply_impto
				End If
				Return _Aply_impto_W
			End Get
		End Property

		Public ReadOnly Property Impto_amount() As WhereParameter 
			Get
				If _Impto_amount_W Is Nothing Then
					_Impto_amount_W = TearOff.Impto_amount
				End If
				Return _Impto_amount_W
			End Get
		End Property

		Public ReadOnly Property Aply_dscto() As WhereParameter 
			Get
				If _Aply_dscto_W Is Nothing Then
					_Aply_dscto_W = TearOff.Aply_dscto
				End If
				Return _Aply_dscto_W
			End Get
		End Property

		Public ReadOnly Property Entr_status() As WhereParameter 
			Get
				If _Entr_status_W Is Nothing Then
					_Entr_status_W = TearOff.Entr_status
				End If
				Return _Entr_status_W
			End Get
		End Property

		Public ReadOnly Property Aply_itbis() As WhereParameter 
			Get
				If _Aply_itbis_W Is Nothing Then
					_Aply_itbis_W = TearOff.Aply_itbis
				End If
				Return _Aply_itbis_W
			End Get
		End Property

		Public ReadOnly Property Edit_price() As WhereParameter 
			Get
				If _Edit_price_W Is Nothing Then
					_Edit_price_W = TearOff.Edit_price
				End If
				Return _Edit_price_W
			End Get
		End Property

		Public ReadOnly Property Date_created() As WhereParameter 
			Get
				If _Date_created_W Is Nothing Then
					_Date_created_W = TearOff.Date_created
				End If
				Return _Date_created_W
			End Get
		End Property

		Public ReadOnly Property Userid() As WhereParameter 
			Get
				If _Userid_W Is Nothing Then
					_Userid_W = TearOff.Userid
				End If
				Return _Userid_W
			End Get
		End Property

		Public ReadOnly Property Apli_ofert() As WhereParameter 
			Get
				If _Apli_ofert_W Is Nothing Then
					_Apli_ofert_W = TearOff.Apli_ofert
				End If
				Return _Apli_ofert_W
			End Get
		End Property

		Public ReadOnly Property Chk_numero() As WhereParameter 
			Get
				If _Chk_numero_W Is Nothing Then
					_Chk_numero_W = TearOff.Chk_numero
				End If
				Return _Chk_numero_W
			End Get
		End Property

		Public ReadOnly Property Ord_numero() As WhereParameter 
			Get
				If _Ord_numero_W Is Nothing Then
					_Ord_numero_W = TearOff.Ord_numero
				End If
				Return _Ord_numero_W
			End Get
		End Property

		Public ReadOnly Property Aply_orden() As WhereParameter 
			Get
				If _Aply_orden_W Is Nothing Then
					_Aply_orden_W = TearOff.Aply_orden
				End If
				Return _Aply_orden_W
			End Get
		End Property

		Public ReadOnly Property Term_code() As WhereParameter 
			Get
				If _Term_code_W Is Nothing Then
					_Term_code_W = TearOff.Term_code
				End If
				Return _Term_code_W
			End Get
		End Property

		Public ReadOnly Property Entr_ncf() As WhereParameter 
			Get
				If _Entr_ncf_W Is Nothing Then
					_Entr_ncf_W = TearOff.Entr_ncf
				End If
				Return _Entr_ncf_W
			End Get
        End Property
        Public ReadOnly Property Suc_code() As WhereParameter
            Get
                If _Suc_code_W Is Nothing Then
                    _Suc_code_W = TearOff.Suc_code
                End If
                Return _Suc_code_W
            End Get
        End Property


        Private _Entr_number_W As WhereParameter = Nothing
        Private _Entr_serial_W As WhereParameter = Nothing
        Private _Type_code_W As WhereParameter = Nothing
        Private _Whse_code_W As WhereParameter = Nothing
        Private _Prov_code_W As WhereParameter = Nothing
        Private _Entr_date_W As WhereParameter = Nothing
        Private _Total_amount_W As WhereParameter = Nothing
        Private _Disc_amount_W As WhereParameter = Nothing
        Private _Itbis_amount_W As WhereParameter = Nothing
        Private _Aply_impto_W As WhereParameter = Nothing
        Private _Impto_amount_W As WhereParameter = Nothing
        Private _Aply_dscto_W As WhereParameter = Nothing
        Private _Entr_status_W As WhereParameter = Nothing
        Private _Aply_itbis_W As WhereParameter = Nothing
        Private _Edit_price_W As WhereParameter = Nothing
        Private _Date_created_W As WhereParameter = Nothing
        Private _Userid_W As WhereParameter = Nothing
        Private _Apli_ofert_W As WhereParameter = Nothing
        Private _Chk_numero_W As WhereParameter = Nothing
        Private _Ord_numero_W As WhereParameter = Nothing
        Private _Aply_orden_W As WhereParameter = Nothing
        Private _Term_code_W As WhereParameter = Nothing
        Private _Entr_ncf_W As WhereParameter = Nothing
        Private _Suc_code_W As WhereParameter = Nothing

        Public Sub WhereClauseReset()

            _Entr_number_W = Nothing
            _Entr_serial_W = Nothing
            _Type_code_W = Nothing
            _Whse_code_W = Nothing
            _Prov_code_W = Nothing
            _Entr_date_W = Nothing
            _Total_amount_W = Nothing
            _Disc_amount_W = Nothing
            _Itbis_amount_W = Nothing
            _Aply_impto_W = Nothing
            _Impto_amount_W = Nothing
            _Aply_dscto_W = Nothing
            _Entr_status_W = Nothing
            _Aply_itbis_W = Nothing
            _Edit_price_W = Nothing
            _Date_created_W = Nothing
            _Userid_W = Nothing
            _Apli_ofert_W = Nothing
            _Chk_numero_W = Nothing
            _Ord_numero_W = Nothing
            _Aply_orden_W = Nothing
            _Term_code_W = Nothing
            _Entr_ncf_W = Nothing
            _Suc_code_W = Nothing
            Me._entity.Query.FlushWhereParameters()

        End Sub

        Private _entity As BusinessEntity
        Private _tearOff As TearOffWhereParameter
    End Class

	Public ReadOnly Property Where() As WhereClause
		Get
			If _whereClause Is Nothing Then
				_whereClause = New WhereClause(Me)
			End If
	
			Return _whereClause
		End Get
	End Property
	
	Private _whereClause As WhereClause = Nothing	
#End Region	

#Region "Aggregate Clause"
    Public Class AggregateClause

        Public Sub New(ByVal entity As BusinessEntity)
            Me._entity = entity
        End Sub
		
		Public ReadOnly Property TearOff As TearOffAggregateParameter
			Get
				If _tearOff Is Nothing Then
					_tearOff = new TearOffAggregateParameter(Me)
				End If

				Return _tearOff
			End Get
		End Property

		#Region "AggregateParameter TearOff's"
		Public class TearOffAggregateParameter

			Public Sub New(ByVal clause As AggregateClause)
				Me._clause = clause
			End Sub
		
	
		Public ReadOnly Property Entr_number() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Entr_number, Parameters.Entr_number)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Entr_serial() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Entr_serial, Parameters.Entr_serial)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Type_code() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Type_code, Parameters.Type_code)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Whse_code() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Whse_code, Parameters.Whse_code)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Prov_code() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Prov_code, Parameters.Prov_code)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Entr_date() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Entr_date, Parameters.Entr_date)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Total_amount() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Total_amount, Parameters.Total_amount)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Disc_amount() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Disc_amount, Parameters.Disc_amount)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Itbis_amount() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Itbis_amount, Parameters.Itbis_amount)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Aply_impto() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Aply_impto, Parameters.Aply_impto)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Impto_amount() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Impto_amount, Parameters.Impto_amount)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Aply_dscto() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Aply_dscto, Parameters.Aply_dscto)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Entr_status() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Entr_status, Parameters.Entr_status)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Aply_itbis() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Aply_itbis, Parameters.Aply_itbis)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Edit_price() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Edit_price, Parameters.Edit_price)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Date_created() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Date_created, Parameters.Date_created)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Userid() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Userid, Parameters.Userid)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Apli_ofert() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Apli_ofert, Parameters.Apli_ofert)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Chk_numero() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Chk_numero, Parameters.Chk_numero)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Ord_numero() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Ord_numero, Parameters.Ord_numero)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Aply_orden() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Aply_orden, Parameters.Aply_orden)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Term_code() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Term_code, Parameters.Term_code)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Entr_ncf() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Entr_ncf, Parameters.Entr_ncf)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property
            Public ReadOnly Property Suc_code() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Suc_code, Parameters.Suc_code)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property


            Private _clause As AggregateClause
        End Class
		#End Region	

		Public ReadOnly Property Entr_number() As AggregateParameter 
			Get
				If _Entr_number_W Is Nothing Then
					_Entr_number_W = TearOff.Entr_number
				End If
				Return _Entr_number_W
			End Get
		End Property

		Public ReadOnly Property Entr_serial() As AggregateParameter 
			Get
				If _Entr_serial_W Is Nothing Then
					_Entr_serial_W = TearOff.Entr_serial
				End If
				Return _Entr_serial_W
			End Get
		End Property

		Public ReadOnly Property Type_code() As AggregateParameter 
			Get
				If _Type_code_W Is Nothing Then
					_Type_code_W = TearOff.Type_code
				End If
				Return _Type_code_W
			End Get
		End Property

		Public ReadOnly Property Whse_code() As AggregateParameter 
			Get
				If _Whse_code_W Is Nothing Then
					_Whse_code_W = TearOff.Whse_code
				End If
				Return _Whse_code_W
			End Get
		End Property

		Public ReadOnly Property Prov_code() As AggregateParameter 
			Get
				If _Prov_code_W Is Nothing Then
					_Prov_code_W = TearOff.Prov_code
				End If
				Return _Prov_code_W
			End Get
		End Property

		Public ReadOnly Property Entr_date() As AggregateParameter 
			Get
				If _Entr_date_W Is Nothing Then
					_Entr_date_W = TearOff.Entr_date
				End If
				Return _Entr_date_W
			End Get
		End Property

		Public ReadOnly Property Total_amount() As AggregateParameter 
			Get
				If _Total_amount_W Is Nothing Then
					_Total_amount_W = TearOff.Total_amount
				End If
				Return _Total_amount_W
			End Get
		End Property

		Public ReadOnly Property Disc_amount() As AggregateParameter 
			Get
				If _Disc_amount_W Is Nothing Then
					_Disc_amount_W = TearOff.Disc_amount
				End If
				Return _Disc_amount_W
			End Get
		End Property

		Public ReadOnly Property Itbis_amount() As AggregateParameter 
			Get
				If _Itbis_amount_W Is Nothing Then
					_Itbis_amount_W = TearOff.Itbis_amount
				End If
				Return _Itbis_amount_W
			End Get
		End Property

		Public ReadOnly Property Aply_impto() As AggregateParameter 
			Get
				If _Aply_impto_W Is Nothing Then
					_Aply_impto_W = TearOff.Aply_impto
				End If
				Return _Aply_impto_W
			End Get
		End Property

		Public ReadOnly Property Impto_amount() As AggregateParameter 
			Get
				If _Impto_amount_W Is Nothing Then
					_Impto_amount_W = TearOff.Impto_amount
				End If
				Return _Impto_amount_W
			End Get
		End Property

		Public ReadOnly Property Aply_dscto() As AggregateParameter 
			Get
				If _Aply_dscto_W Is Nothing Then
					_Aply_dscto_W = TearOff.Aply_dscto
				End If
				Return _Aply_dscto_W
			End Get
		End Property

		Public ReadOnly Property Entr_status() As AggregateParameter 
			Get
				If _Entr_status_W Is Nothing Then
					_Entr_status_W = TearOff.Entr_status
				End If
				Return _Entr_status_W
			End Get
		End Property

		Public ReadOnly Property Aply_itbis() As AggregateParameter 
			Get
				If _Aply_itbis_W Is Nothing Then
					_Aply_itbis_W = TearOff.Aply_itbis
				End If
				Return _Aply_itbis_W
			End Get
		End Property

		Public ReadOnly Property Edit_price() As AggregateParameter 
			Get
				If _Edit_price_W Is Nothing Then
					_Edit_price_W = TearOff.Edit_price
				End If
				Return _Edit_price_W
			End Get
		End Property

		Public ReadOnly Property Date_created() As AggregateParameter 
			Get
				If _Date_created_W Is Nothing Then
					_Date_created_W = TearOff.Date_created
				End If
				Return _Date_created_W
			End Get
		End Property

		Public ReadOnly Property Userid() As AggregateParameter 
			Get
				If _Userid_W Is Nothing Then
					_Userid_W = TearOff.Userid
				End If
				Return _Userid_W
			End Get
		End Property

		Public ReadOnly Property Apli_ofert() As AggregateParameter 
			Get
				If _Apli_ofert_W Is Nothing Then
					_Apli_ofert_W = TearOff.Apli_ofert
				End If
				Return _Apli_ofert_W
			End Get
		End Property

		Public ReadOnly Property Chk_numero() As AggregateParameter 
			Get
				If _Chk_numero_W Is Nothing Then
					_Chk_numero_W = TearOff.Chk_numero
				End If
				Return _Chk_numero_W
			End Get
		End Property

		Public ReadOnly Property Ord_numero() As AggregateParameter 
			Get
				If _Ord_numero_W Is Nothing Then
					_Ord_numero_W = TearOff.Ord_numero
				End If
				Return _Ord_numero_W
			End Get
		End Property

		Public ReadOnly Property Aply_orden() As AggregateParameter 
			Get
				If _Aply_orden_W Is Nothing Then
					_Aply_orden_W = TearOff.Aply_orden
				End If
				Return _Aply_orden_W
			End Get
		End Property

		Public ReadOnly Property Term_code() As AggregateParameter 
			Get
				If _Term_code_W Is Nothing Then
					_Term_code_W = TearOff.Term_code
				End If
				Return _Term_code_W
			End Get
		End Property

		Public ReadOnly Property Entr_ncf() As AggregateParameter 
			Get
				If _Entr_ncf_W Is Nothing Then
					_Entr_ncf_W = TearOff.Entr_ncf
				End If
				Return _Entr_ncf_W
			End Get
		End Property
        Public ReadOnly Property Suc_code() As AggregateParameter
            Get
                If _Suc_code_W Is Nothing Then
                    _Suc_code_W = TearOff.Suc_code
                End If
                Return _Suc_code_W
            End Get
        End Property

        Private _Entr_number_W As AggregateParameter = Nothing
        Private _Entr_serial_W As AggregateParameter = Nothing
        Private _Type_code_W As AggregateParameter = Nothing
        Private _Whse_code_W As AggregateParameter = Nothing
        Private _Prov_code_W As AggregateParameter = Nothing
        Private _Entr_date_W As AggregateParameter = Nothing
        Private _Total_amount_W As AggregateParameter = Nothing
        Private _Disc_amount_W As AggregateParameter = Nothing
        Private _Itbis_amount_W As AggregateParameter = Nothing
        Private _Aply_impto_W As AggregateParameter = Nothing
        Private _Impto_amount_W As AggregateParameter = Nothing
        Private _Aply_dscto_W As AggregateParameter = Nothing
        Private _Entr_status_W As AggregateParameter = Nothing
        Private _Aply_itbis_W As AggregateParameter = Nothing
        Private _Edit_price_W As AggregateParameter = Nothing
        Private _Date_created_W As AggregateParameter = Nothing
        Private _Userid_W As AggregateParameter = Nothing
        Private _Apli_ofert_W As AggregateParameter = Nothing
        Private _Chk_numero_W As AggregateParameter = Nothing
        Private _Ord_numero_W As AggregateParameter = Nothing
        Private _Aply_orden_W As AggregateParameter = Nothing
        Private _Term_code_W As AggregateParameter = Nothing
        Private _Entr_ncf_W As AggregateParameter = Nothing
        Private _Suc_code_W As AggregateParameter = Nothing

        Public Sub AggregateClauseReset()

            _Entr_number_W = Nothing
            _Entr_serial_W = Nothing
            _Type_code_W = Nothing
            _Whse_code_W = Nothing
            _Prov_code_W = Nothing
            _Entr_date_W = Nothing
            _Total_amount_W = Nothing
            _Disc_amount_W = Nothing
            _Itbis_amount_W = Nothing
            _Aply_impto_W = Nothing
            _Impto_amount_W = Nothing
            _Aply_dscto_W = Nothing
            _Entr_status_W = Nothing
            _Aply_itbis_W = Nothing
            _Edit_price_W = Nothing
            _Date_created_W = Nothing
            _Userid_W = Nothing
            _Apli_ofert_W = Nothing
            _Chk_numero_W = Nothing
            _Ord_numero_W = Nothing
            _Aply_orden_W = Nothing
            _Term_code_W = Nothing
            _Entr_ncf_W = Nothing
            _Suc_code_W = Nothing
            Me._entity.Query.FlushAggregateParameters()

        End Sub

        Private _entity As BusinessEntity
        Private _tearOff As TearOffAggregateParameter
    End Class

	Public ReadOnly Property Aggregate() As AggregateClause
		Get
			If _aggregateClause Is Nothing Then
				_aggregateClause = New AggregateClause(Me)
			End If
	
			Return _aggregateClause
		End Get
	End Property
	
	Private _aggregateClause As AggregateClause = Nothing	
#End Region	

	Protected Overrides Function GetInsertCommand() As IDbCommand
	
		Dim cmd As OleDbCommand = New OleDbCommand
		cmd.CommandType = CommandType.StoredProcedure
		cmd.CommandText = "[" + Me.SchemaStoredProcedure + "proc_iventrdmInsert]" 
	    
		CreateParameters(cmd)
		    
		Return cmd 

  	End Function
	
	Protected Overrides Function GetUpdateCommand() As IDbCommand
	
		Dim cmd As OleDbCommand = New OleDbCommand
		cmd.CommandType = CommandType.StoredProcedure    
		cmd.CommandText = "[" + Me.SchemaStoredProcedure + "proc_iventrdmUpdate]" 
		
		CreateParameters(cmd) 
		    
		Return cmd
	
	End Function	
	
	Protected Overrides Function GetDeleteCommand() As IDbCommand
	
		Dim cmd As OleDbCommand = New OleDbCommand
		cmd.CommandType = CommandType.StoredProcedure    
		cmd.CommandText = "[" + Me.SchemaStoredProcedure + "proc_iventrdmDelete]" 
		
		Dim p As OleDbParameter
		p = cmd.Parameters.Add(Parameters.Entr_serial)
		p.SourceColumn = ColumnNames.Entr_serial
		p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.Suc_code)
        p.SourceColumn = ColumnNames.Suc_code
        p.SourceVersion = DataRowVersion.Current

  
		Return cmd
	
	End Function	
	
	Private Sub CreateParameters(ByVal cmd As OleDbCommand)
	
		Dim p As OleDbParameter
		p = cmd.Parameters.Add(Parameters.Entr_number)
		p.SourceColumn = ColumnNames.Entr_number
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Entr_serial)
		p.SourceColumn = ColumnNames.Entr_serial
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Type_code)
		p.SourceColumn = ColumnNames.Type_code
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Whse_code)
		p.SourceColumn = ColumnNames.Whse_code
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Prov_code)
		p.SourceColumn = ColumnNames.Prov_code
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Entr_date)
		p.SourceColumn = ColumnNames.Entr_date
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Total_amount)
		p.SourceColumn = ColumnNames.Total_amount
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Disc_amount)
		p.SourceColumn = ColumnNames.Disc_amount
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Itbis_amount)
		p.SourceColumn = ColumnNames.Itbis_amount
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Aply_impto)
		p.SourceColumn = ColumnNames.Aply_impto
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Impto_amount)
		p.SourceColumn = ColumnNames.Impto_amount
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Aply_dscto)
		p.SourceColumn = ColumnNames.Aply_dscto
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Entr_status)
		p.SourceColumn = ColumnNames.Entr_status
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Aply_itbis)
		p.SourceColumn = ColumnNames.Aply_itbis
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Edit_price)
		p.SourceColumn = ColumnNames.Edit_price
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Date_created)
		p.SourceColumn = ColumnNames.Date_created
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Userid)
		p.SourceColumn = ColumnNames.Userid
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Apli_ofert)
		p.SourceColumn = ColumnNames.Apli_ofert
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Chk_numero)
		p.SourceColumn = ColumnNames.Chk_numero
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Ord_numero)
		p.SourceColumn = ColumnNames.Ord_numero
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Aply_orden)
		p.SourceColumn = ColumnNames.Aply_orden
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Term_code)
		p.SourceColumn = ColumnNames.Term_code
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.Entr_ncf)
		p.SourceColumn = ColumnNames.Entr_ncf
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.Suc_code)
        p.SourceColumn = ColumnNames.Suc_code
        p.SourceVersion = DataRowVersion.Current


	End Sub	

End Class

